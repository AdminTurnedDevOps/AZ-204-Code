{"version":3,"file":"testTokenCredential.js","sourceRoot":"","sources":["../../../test/utils/testTokenCredential.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;;AAIlC;IAIE,6BAAY,KAAa,EAAE,SAAgB;QACzC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC;IACjF,CAAC;IAEK,sCAAQ,GAAd,UACE,OAA0B,EAC1B,QAA0B;;;gBAE1B,sBAAO;wBACL,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,kBAAkB,EAAE,IAAI,CAAC,SAAS;qBACnC,EAAC;;;KACH;IACH,0BAAC;AAAD,CAAC,AAlBD,IAkBC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n\nimport { TokenCredential, GetTokenOptions, AccessToken } from \"@azure/core-http\";\n\nexport class TestTokenCredential implements TokenCredential {\n  public token: string;\n  public expiresOn: number;\n\n  constructor(token: string, expiresOn?: Date) {\n    this.token = token;\n    this.expiresOn = expiresOn ? expiresOn.getTime() : Date.now() + 60 * 60 * 1000;\n  }\n\n  async getToken(\n    _scopes: string | string[],\n    _options?: GetTokenOptions\n  ): Promise<AccessToken | null> {\n    return {\n      token: this.token,\n      expiresOnTimestamp: this.expiresOn\n    };\n  }\n}\n"]}