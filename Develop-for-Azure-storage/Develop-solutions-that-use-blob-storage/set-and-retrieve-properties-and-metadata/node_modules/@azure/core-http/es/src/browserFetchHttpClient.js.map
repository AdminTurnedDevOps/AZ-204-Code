{"version":3,"file":"browserFetchHttpClient.js","sourceRoot":"","sources":["../../src/browserFetchHttpClient.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,+FAA+F;;AAE/F,OAAO,EAAE,eAAe,EAAqB,MAAM,mBAAmB,CAAC;AAIvE;IAA4C,0CAAe;IAA3D;;IAYA,CAAC;IAXC,+CAAc,GAAd,UAAe,YAA6B;QAC1C,OAAO,OAAO,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,+CAAc,GAAd,UAAe,kBAAyC;QACtD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,sCAAK,GAAL,UAAM,KAAwB,EAAE,IAAkB;QAChD,OAAO,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC5B,CAAC;IACH,6BAAC;AAAD,CAAC,AAZD,CAA4C,eAAe,GAY1D","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License. See License.txt in the project root for license information.\n\nimport { FetchHttpClient, CommonRequestInfo } from \"./fetchHttpClient\";\nimport { HttpOperationResponse } from \"./httpOperationResponse\";\nimport { WebResourceLike } from \"./webResource\";\n\nexport class BrowserFetchHttpClient extends FetchHttpClient {\n  prepareRequest(_httpRequest: WebResourceLike): Promise<Partial<RequestInit>> {\n    return Promise.resolve({});\n  }\n\n  processRequest(_operationResponse: HttpOperationResponse): Promise<void> {\n    return Promise.resolve();\n  }\n\n  fetch(input: CommonRequestInfo, init?: RequestInit): Promise<Response> {\n    return fetch(input, init);\n  }\n}\n"]}