{"version":3,"file":"SASQueryParameters.js","sourceRoot":"","sources":["../../src/SASQueryParameters.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { SasIPRange, ipRangeToString } from \"./SasIPRange\";\nimport { truncatedISO8061Date } from \"./utils/utils.common\";\nimport { UserDelegationKey } from \"./BlobServiceClient\";\n\n/**\n * Protocols for generated SAS.\n *\n * @export\n * @enum {number}\n */\nexport enum SASProtocol {\n  /**\n   * Protocol that allows HTTPS only\n   */\n  Https = \"https\",\n\n  /**\n   * Protocol that allows both HTTPS and HTTP\n   */\n  HttpsAndHttp = \"https,http\"\n}\n\n/**\n * Represents the components that make up an Azure Storage SAS' query parameters. This type is not constructed directly\n * by the user; it is only generated by the {@link AccountSASSignatureValues} and {@link BlobSASSignatureValues}\n * types. Once generated, it can be encoded into a {@code String} and appended to a URL directly (though caution should\n * be taken here in case there are existing query parameters, which might affect the appropriate means of appending\n * these query parameters).\n *\n * NOTE: Instances of this class are immutable.\n *\n * @export\n * @class SASQueryParameters\n */\nexport class SASQueryParameters {\n  /**\n   * The storage API version.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly version: string;\n\n  /**\n   * Optional. The allowed HTTP protocol(s).\n   *\n   * @type {SASProtocol}\n   * @memberof SASQueryParameters\n   */\n  public readonly protocol?: SASProtocol;\n\n  /**\n   * Optional. The start time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly startsOn?: Date;\n\n  /**\n   * Optional only when identifier is provided. The expiry time for this SAS token.\n   *\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  public readonly expiresOn?: Date;\n\n  /**\n   * Optional only when identifier is provided.\n   * Please refer to {@link AccountSASPermissions}, {@link BlobSASPermissions}, or {@link ContainerSASPermissions} for\n   * more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly permissions?: string;\n\n  /**\n   * Optional. The storage services being accessed (only for Account SAS). Please refer to {@link AccountSASServices}\n   * for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly services?: string;\n\n  /**\n   * Optional. The storage resource types being accessed (only for Account SAS). Please refer to\n   * {@link AccountSASResourceTypes} for more details.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resourceTypes?: string;\n\n  /**\n   * Optional. The signed identifier (only for {@link BlobSASSignatureValues}).\n   *\n   * @see https://docs.microsoft.com/en-us/rest/api/storageservices/establishing-a-stored-access-policy\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly identifier?: string;\n\n  /**\n   * Optional. The storage container or blob (only for {@link BlobSASSignatureValues}).\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly resource?: string;\n\n  /**\n   * The signature for the SAS token.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly signature: string;\n\n  /**\n   * Value for cache-control header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly cacheControl?: string;\n\n  /**\n   * Value for content-disposition header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentDisposition?: string;\n\n  /**\n   * Value for content-encoding header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentEncoding?: string;\n\n  /**\n   * Value for content-length header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentLanguage?: string;\n\n  /**\n   * Value for content-type header in Blob/File Service SAS.\n   *\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  public readonly contentType?: string;\n\n  /**\n   * Inner value of getter ipRange.\n   *\n   * @private\n   * @type {SasIPRange}\n   * @memberof SASQueryParameters\n   */\n  private readonly ipRangeInner?: SasIPRange;\n\n  /**\n   * The Azure Active Directory object ID in GUID format.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedOid?: string;\n\n  /**\n   * The Azure Active Directory tenant ID in GUID format.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedTenentId?: string;\n\n  /**\n   * The date-time the key is active.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedStartsOn?: Date;\n\n  /**\n   * The date-time the key expires.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {Date}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedExpiresOn?: Date;\n\n  /**\n   * Abbreviation of the Azure Storage service that accepts the user delegation key.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedService?: string;\n\n  /**\n   * The service version that created the user delegation key.\n   * Property of user delegation key.\n   *\n   * @private\n   * @type {string}\n   * @memberof SASQueryParameters\n   */\n  private readonly signedVersion?: string;\n\n  /**\n   * Optional. IP range allowed for this SAS.\n   *\n   * @readonly\n   * @type {(SasIPRange | undefined)}\n   * @memberof SASQueryParameters\n   */\n  public get ipRange(): SasIPRange | undefined {\n    if (this.ipRangeInner) {\n      return {\n        end: this.ipRangeInner.end,\n        start: this.ipRangeInner.start\n      };\n    }\n    return undefined;\n  }\n\n  /**\n   * Creates an instance of SASQueryParameters.\n   *\n   * @param {string} version Representing the storage version\n   * @param {string} signature Representing the signature for the SAS token\n   * @param {string} [permissions] Representing the storage permissions\n   * @param {string} [services] Representing the storage services being accessed (only for Account SAS)\n   * @param {string} [resourceTypes] Representing the storage resource types being accessed (only for Account SAS)\n   * @param {SASProtocol} [protocol] Representing the allowed HTTP protocol(s)\n   * @param {Date} [startsOn] Representing the start time for this SAS token\n   * @param {Date} [expiresOn] Representing the expiry time for this SAS token\n   * @param {SasIPRange} [ipRange] Representing the range of valid IP addresses for this SAS token\n   * @param {string} [identifier] Representing the signed identifier (only for Service SAS)\n   * @param {string} [resource] Representing the storage container or blob (only for Service SAS)\n   * @param {string} [cacheControl] Representing the cache-control header (only for Blob/File Service SAS)\n   * @param {string} [contentDisposition] Representing the content-disposition header (only for Blob/File Service SAS)\n   * @param {string} [contentEncoding] Representing the content-encoding header (only for Blob/File Service SAS)\n   * @param {string} [contentLanguage] Representing the content-language header (only for Blob/File Service SAS)\n   * @param {string} [contentType] Representing the content-type header (only for Blob/File Service SAS)\n   * @param {userDelegationKey} [userDelegationKey] Representing the user delegation key properties\n   * @memberof SASQueryParameters\n   */\n  constructor(\n    version: string,\n    signature: string,\n    permissions?: string,\n    services?: string,\n    resourceTypes?: string,\n    protocol?: SASProtocol,\n    startsOn?: Date,\n    expiresOn?: Date,\n    ipRange?: SasIPRange,\n    identifier?: string,\n    resource?: string,\n    cacheControl?: string,\n    contentDisposition?: string,\n    contentEncoding?: string,\n    contentLanguage?: string,\n    contentType?: string,\n    userDelegationKey?: UserDelegationKey\n  ) {\n    this.version = version;\n    this.services = services;\n    this.resourceTypes = resourceTypes;\n    this.expiresOn = expiresOn;\n    this.permissions = permissions;\n    this.protocol = protocol;\n    this.startsOn = startsOn;\n    this.ipRangeInner = ipRange;\n    this.identifier = identifier;\n    this.resource = resource;\n    this.signature = signature;\n    this.cacheControl = cacheControl;\n    this.contentDisposition = contentDisposition;\n    this.contentEncoding = contentEncoding;\n    this.contentLanguage = contentLanguage;\n    this.contentType = contentType;\n\n    if (userDelegationKey) {\n      this.signedOid = userDelegationKey.signedObjectId;\n      this.signedTenentId = userDelegationKey.signedTenantId;\n      this.signedStartsOn = userDelegationKey.signedStartsOn;\n      this.signedExpiresOn = userDelegationKey.signedExpiresOn;\n      this.signedService = userDelegationKey.signedService;\n      this.signedVersion = userDelegationKey.signedVersion;\n    }\n  }\n\n  /**\n   * Encodes all SAS query parameters into a string that can be appended to a URL.\n   *\n   * @returns {string}\n   * @memberof SASQueryParameters\n   */\n  public toString(): string {\n    const params: string[] = [\n      \"sv\",\n      \"ss\",\n      \"srt\",\n      \"spr\",\n      \"st\",\n      \"se\",\n      \"sip\",\n      \"si\",\n      \"skoid\", // Signed object ID\n      \"sktid\", // Signed tenant ID\n      \"skt\", // Signed key start time\n      \"ske\", // Signed key expiry time\n      \"sks\", // Signed key service\n      \"skv\", // Signed key version\n      \"sr\",\n      \"sp\",\n      \"sig\",\n      \"rscc\",\n      \"rscd\",\n      \"rsce\",\n      \"rscl\",\n      \"rsct\"\n    ];\n    const queries: string[] = [];\n\n    for (const param of params) {\n      switch (param) {\n        case \"sv\":\n          this.tryAppendQueryParameter(queries, param, this.version);\n          break;\n        case \"ss\":\n          this.tryAppendQueryParameter(queries, param, this.services);\n          break;\n        case \"srt\":\n          this.tryAppendQueryParameter(queries, param, this.resourceTypes);\n          break;\n        case \"spr\":\n          this.tryAppendQueryParameter(queries, param, this.protocol);\n          break;\n        case \"st\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.startsOn ? truncatedISO8061Date(this.startsOn, false) : undefined\n          );\n          break;\n        case \"se\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.expiresOn ? truncatedISO8061Date(this.expiresOn, false) : undefined\n          );\n          break;\n        case \"sip\":\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.ipRange ? ipRangeToString(this.ipRange) : undefined\n          );\n          break;\n        case \"si\":\n          this.tryAppendQueryParameter(queries, param, this.identifier);\n          break;\n        case \"skoid\": // Signed object ID\n          this.tryAppendQueryParameter(queries, param, this.signedOid);\n          break;\n        case \"sktid\": // Signed tenant ID\n          this.tryAppendQueryParameter(queries, param, this.signedTenentId);\n          break;\n        case \"skt\": // Signed key start time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedStartsOn ? truncatedISO8061Date(this.signedStartsOn, false) : undefined\n          );\n          break;\n        case \"ske\": // Signed key expiry time\n          this.tryAppendQueryParameter(\n            queries,\n            param,\n            this.signedExpiresOn ? truncatedISO8061Date(this.signedExpiresOn, false) : undefined\n          );\n          break;\n        case \"sks\": // Signed key service\n          this.tryAppendQueryParameter(queries, param, this.signedService);\n          break;\n        case \"skv\": // Signed key version\n          this.tryAppendQueryParameter(queries, param, this.signedVersion);\n          break;\n        case \"sr\":\n          this.tryAppendQueryParameter(queries, param, this.resource);\n          break;\n        case \"sp\":\n          this.tryAppendQueryParameter(queries, param, this.permissions);\n          break;\n        case \"sig\":\n          this.tryAppendQueryParameter(queries, param, this.signature);\n          break;\n        case \"rscc\":\n          this.tryAppendQueryParameter(queries, param, this.cacheControl);\n          break;\n        case \"rscd\":\n          this.tryAppendQueryParameter(queries, param, this.contentDisposition);\n          break;\n        case \"rsce\":\n          this.tryAppendQueryParameter(queries, param, this.contentEncoding);\n          break;\n        case \"rscl\":\n          this.tryAppendQueryParameter(queries, param, this.contentLanguage);\n          break;\n        case \"rsct\":\n          this.tryAppendQueryParameter(queries, param, this.contentType);\n          break;\n      }\n    }\n    return queries.join(\"&\");\n  }\n\n  /**\n   * A private helper method used to filter and append query key/value pairs into an array.\n   *\n   * @private\n   * @param {string[]} queries\n   * @param {string} key\n   * @param {string} [value]\n   * @returns {void}\n   * @memberof SASQueryParameters\n   */\n  private tryAppendQueryParameter(queries: string[], key: string, value?: string): void {\n    if (!value) {\n      return;\n    }\n\n    key = encodeURIComponent(key);\n    value = encodeURIComponent(value);\n    if (key.length > 0 && value.length > 0) {\n      queries.push(`${key}=${value}`);\n    }\n  }\n}\n"]}