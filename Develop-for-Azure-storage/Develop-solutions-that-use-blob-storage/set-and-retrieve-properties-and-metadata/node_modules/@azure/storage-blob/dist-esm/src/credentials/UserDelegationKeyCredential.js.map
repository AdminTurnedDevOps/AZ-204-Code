{"version":3,"file":"UserDelegationKeyCredential.js","sourceRoot":"","sources":["../../../src/credentials/UserDelegationKeyCredential.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,QAAQ,CAAC;AAGpC;;;;;;;;GAQG;AACH;IA0BE;;;;;OAKG;IACH,qCAAY,WAAmB,EAAE,iBAAoC;QACnE,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAC5D,CAAC;IAED;;;;;;OAMG;IACI,uDAAiB,GAAxB,UAAyB,YAAoB;QAC3C,gEAAgE;QAEhE,OAAO,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,GAAG,CAAC;aAClC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC;aAC5B,MAAM,CAAC,QAAQ,CAAC,CAAC;IACtB,CAAC;IACH,kCAAC;AAAD,CAAC,AApDD,IAoDC","sourcesContent":["import { createHmac } from \"crypto\";\nimport { UserDelegationKey } from \"../BlobServiceClient\";\n\n/**\n * ONLY AVAILABLE IN NODE.JS RUNTIME.\n *\n * UserDelegationKeyCredential is only used for generation of user delegation SAS.\n * @see https://docs.microsoft.com/en-us/rest/api/storageservices/create-user-delegation-sas\n *\n * @export\n * @class UserDelegationKeyCredential\n */\nexport class UserDelegationKeyCredential {\n  /**\n   * Azure Storage account name; readonly.\n   *\n   * @type {string}\n   * @memberof UserDelegationKeyCredential\n   */\n  public readonly accountName: string;\n\n  /**\n   * Azure Storage user delegation key; readonly.\n   *\n   * @type {UserDelegationKey}\n   * @memberof UserDelegationKeyCredential\n   */\n  public readonly userDelegationKey: UserDelegationKey;\n\n  /**\n   * Key value in Buffer type.\n   *\n   * @private\n   * @type {Buffer}\n   * @memberof UserDelegationKeyCredential\n   */\n  private readonly key: Buffer;\n\n  /**\n   * Creates an instance of UserDelegationKeyCredential.\n   * @param {string} accountName\n   * @param {UserDelegationKey} userDelegationKey\n   * @memberof UserDelegationKeyCredential\n   */\n  constructor(accountName: string, userDelegationKey: UserDelegationKey) {\n    this.accountName = accountName;\n    this.userDelegationKey = userDelegationKey;\n    this.key = Buffer.from(userDelegationKey.value, \"base64\");\n  }\n\n  /**\n   * Generates a hash signature for an HTTP request or for a SAS.\n   *\n   * @param {string} stringToSign\n   * @returns {string}\n   * @memberof UserDelegationKeyCredential\n   */\n  public computeHMACSHA256(stringToSign: string): string {\n    // console.log(`stringToSign: ${JSON.stringify(stringToSign)}`);\n\n    return createHmac(\"sha256\", this.key)\n      .update(stringToSign, \"utf8\")\n      .digest(\"base64\");\n  }\n}\n"]}