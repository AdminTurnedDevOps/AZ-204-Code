{"version":3,"file":"Credential.js","sourceRoot":"","sources":["../../../src/credentials/Credential.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,kCAAkC;AAKlC;;;;;;;GAOG;AACH;IAAA;IAiBA,CAAC;IAhBC;;;;;;;OAOG;IACI,2BAAM,GAAb;IACE,yCAAyC;IACzC,WAA0B;IAC1B,yCAAyC;IACzC,QAA8B;QAE9B,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;IACvE,CAAC;IACH,iBAAC;AAAD,CAAC,AAjBD,IAiBC","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport { RequestPolicy, RequestPolicyFactory, RequestPolicyOptions } from \"@azure/core-http\";\nimport { CredentialPolicy } from \"../policies/CredentialPolicy\";\n\n/**\n * Credential is an abstract class for Azure Storage HTTP requests signing. This\n * class will host an credentialPolicyCreator factory which generates CredentialPolicy.\n *\n * @export\n * @abstract\n * @class Credential\n */\nexport abstract class Credential implements RequestPolicyFactory {\n  /**\n   * Creates a RequestPolicy object.\n   *\n   * @param {RequestPolicy} _nextPolicy\n   * @param {RequestPolicyOptions} _options\n   * @returns {RequestPolicy}\n   * @memberof Credential\n   */\n  public create(\n    // tslint:disable-next-line:variable-name\n    _nextPolicy: RequestPolicy,\n    // tslint:disable-next-line:variable-name\n    _options: RequestPolicyOptions\n  ): RequestPolicy {\n    throw new Error(\"Method should be implemented in children classes.\");\n  }\n}\n\n/**\n * A factory function that creates a new CredentialPolicy that uses the provided nextPolicy.\n */\nexport type CredentialPolicyCreator = (\n  nextPolicy: RequestPolicy,\n  options: RequestPolicyOptions\n) => CredentialPolicy;\n"]}