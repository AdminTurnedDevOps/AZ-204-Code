{"version":3,"file":"tracing.js","sourceRoot":"","sources":["../../../src/utils/tracing.ts"],"names":[],"mappings":"AAAA,uCAAuC;AACvC,kCAAkC;;AAElC,OAAO,EAAE,SAAS,EAAwC,MAAM,qBAAqB,CAAC;AACtF,OAAO,EAAsC,QAAQ,EAAE,MAAM,oBAAoB,CAAC;AAElF;;;;GAIG;AACH,MAAM,UAAU,UAAU,CACxB,aAAqB,EACrB,cAA4C;IAA5C,+BAAA,EAAA,mBAA4C;IAE5C,IAAM,MAAM,GAAG,SAAS,EAAE,CAAC;IAC3B,IAAM,WAAW,yBACZ,cAAc,CAAC,WAAW,KAC7B,IAAI,EAAE,QAAQ,CAAC,QAAQ,GACxB,CAAC;IAEF,IAAM,IAAI,GAAG,MAAM,CAAC,SAAS,CAAC,wBAAsB,aAAe,EAAE,WAAW,CAAC,CAAC;IAClF,IAAI,CAAC,YAAY,CAAC,cAAc,EAAE,mBAAmB,CAAC,CAAC;IAEvD,IAAI,UAAU,GAAG,cAAc,CAAC,WAAW,IAAI,EAAE,CAAC;IAClD,IAAI,IAAI,CAAC,WAAW,EAAE,EAAE;QACtB,UAAU,yBACL,cAAc,CAAC,WAAW,KAC7B,MAAM,EAAE,IAAI,CAAC,OAAO,EAAE,EACtB,UAAU,wBACL,WAAW,CAAC,UAAU,KACzB,cAAc,EAAE,mBAAmB,MAEtC,CAAC;KACH;IAED,OAAO;QACL,IAAI,MAAA;QACJ,WAAW,EAAE,UAAU;KACxB,CAAC;AACJ,CAAC","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { getTracer, OperationTracingOptions, SpanOptions } from \"@azure/core-tracing\";\nimport { Span, SpanOptions as OTSpanOptions, SpanKind } from \"@opentelemetry/api\";\n\n/**\n * Creates a span using the global tracer.\n * @param name The name of the operation being performed.\n * @param tracingOptions The options for the underlying http request.\n */\nexport function createSpan(\n  operationName: string,\n  tracingOptions: OperationTracingOptions = {}\n): { span: Span; spanOptions: SpanOptions } {\n  const tracer = getTracer();\n  const spanOptions: OTSpanOptions = {\n    ...tracingOptions.spanOptions,\n    kind: SpanKind.INTERNAL\n  };\n\n  const span = tracer.startSpan(`Azure.Storage.Blob.${operationName}`, spanOptions);\n  span.setAttribute(\"az.namespace\", \"Microsoft.Storage\");\n\n  let newOptions = tracingOptions.spanOptions || {};\n  if (span.isRecording()) {\n    newOptions = {\n      ...tracingOptions.spanOptions,\n      parent: span.context(),\n      attributes: {\n        ...spanOptions.attributes,\n        \"az.namespace\": \"Microsoft.Storage\"\n      }\n    };\n  }\n\n  return {\n    span,\n    spanOptions: newOptions\n  };\n}\n"]}