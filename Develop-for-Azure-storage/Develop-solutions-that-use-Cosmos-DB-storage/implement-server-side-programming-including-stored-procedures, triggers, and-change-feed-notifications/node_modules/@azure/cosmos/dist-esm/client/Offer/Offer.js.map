{"version":3,"file":"Offer.js","sourceRoot":"","sources":["../../../src/client/Offer/Offer.ts"],"names":[],"mappings":";AAGA,OAAO,EAAE,SAAS,EAAE,eAAe,EAAE,YAAY,EAAE,MAAM,cAAc,CAAC;AAIxE,OAAO,EAAE,aAAa,EAAE,MAAM,iBAAiB,CAAC;AAEhD;;;;GAIG;AACH,MAAM,OAAO,KAAK;IAOhB;;;;OAIG;IACH,YACkB,MAAoB,EACpB,EAAU,EACT,aAA4B;QAF7B,WAAM,GAAN,MAAM,CAAc;QACpB,OAAE,GAAF,EAAE,CAAQ;QACT,kBAAa,GAAb,aAAa,CAAe;IAC5C,CAAC;IAfJ;;OAEG;IACH,IAAW,GAAG;QACZ,OAAO,IAAI,SAAS,CAAC,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,EAAE,EAAE,CAAC;IAC3D,CAAC;IAYD;;;OAGG;IACU,IAAI,CAAC,OAAwB;;YACxC,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,CAAkB;gBAC9D,IAAI,EAAE,IAAI,CAAC,GAAG;gBACd,YAAY,EAAE,YAAY,CAAC,KAAK;gBAChC,UAAU,EAAE,IAAI,CAAC,EAAE;gBACnB,OAAO;aACR,CAAC,CAAC;YACH,OAAO,IAAI,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACnF,CAAC;KAAA;IAED;;;;OAIG;IACU,OAAO,CAAC,IAAqB,EAAE,OAAwB;;YAClE,MAAM,GAAG,GAAG,EAAE,CAAC;YACf,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,GAAG,CAAC,EAAE;gBAC/B,MAAM,GAAG,CAAC;aACX;YACD,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAkB;gBACjE,IAAI;gBACJ,IAAI,EAAE,IAAI,CAAC,GAAG;gBACd,YAAY,EAAE,YAAY,CAAC,KAAK;gBAChC,UAAU,EAAE,IAAI,CAAC,EAAE;gBACnB,OAAO;aACR,CAAC,CAAC;YACH,OAAO,IAAI,aAAa,CAAC,QAAQ,CAAC,MAAM,EAAE,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;QACnF,CAAC;KAAA;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ClientContext } from \"../../ClientContext\";\nimport { Constants, isResourceValid, ResourceType } from \"../../common\";\nimport { CosmosClient } from \"../../CosmosClient\";\nimport { RequestOptions } from \"../../request\";\nimport { OfferDefinition } from \"./OfferDefinition\";\nimport { OfferResponse } from \"./OfferResponse\";\n\n/**\n * Use to read or replace an existing {@link Offer} by id.\n *\n * @see {@link Offers} to query or read all offers.\n */\nexport class Offer {\n  /**\n   * Returns a reference URL to the resource. Used for linking in Permissions.\n   */\n  public get url() {\n    return `/${Constants.Path.OffersPathSegment}/${this.id}`;\n  }\n  /**\n   * @hidden\n   * @param client The parent {@link CosmosClient} for the Database Account.\n   * @param id The id of the given {@link Offer}.\n   */\n  constructor(\n    public readonly client: CosmosClient,\n    public readonly id: string,\n    private readonly clientContext: ClientContext\n  ) {}\n\n  /**\n   * Read the {@link OfferDefinition} for the given {@link Offer}.\n   * @param options\n   */\n  public async read(options?: RequestOptions): Promise<OfferResponse> {\n    const response = await this.clientContext.read<OfferDefinition>({\n      path: this.url,\n      resourceType: ResourceType.offer,\n      resourceId: this.id,\n      options\n    });\n    return new OfferResponse(response.result, response.headers, response.code, this);\n  }\n\n  /**\n   * Replace the given {@link Offer} with the specified {@link OfferDefinition}.\n   * @param body The specified {@link OfferDefinition}\n   * @param options\n   */\n  public async replace(body: OfferDefinition, options?: RequestOptions): Promise<OfferResponse> {\n    const err = {};\n    if (!isResourceValid(body, err)) {\n      throw err;\n    }\n    const response = await this.clientContext.replace<OfferDefinition>({\n      body,\n      path: this.url,\n      resourceType: ResourceType.offer,\n      resourceId: this.id,\n      options\n    });\n    return new OfferResponse(response.result, response.headers, response.code, this);\n  }\n}\n"]}