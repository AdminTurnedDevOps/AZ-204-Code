{"version":3,"file":"orderByQueryExecutionContext.js","sourceRoot":"","sources":["../../src/queryExecutionContext/orderByQueryExecutionContext.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AACxF,OAAO,EAAE,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AAExF,cAAc;AACd,MAAM,OAAO,4BAA6B,SAAQ,iCAAiC;IAGjF;;;;;;;;;;;;;OAaG;IACH,YACE,aAA4B,EAC5B,cAAsB,EACtB,KAAU,EAAE,kBAAkB;IAC9B,OAAY,EAAE,oBAAoB;IAClC,6BAA4D;QAE5D,oCAAoC;QACpC,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,EAAE,6BAA6B,CAAC,CAAC;QACpF,IAAI,CAAC,iBAAiB,GAAG,IAAI,iCAAiC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAClF,CAAC;IACD,iCAAiC;IAEjC,0EAA0E;IAC1E;;;;OAIG;IACI,0BAA0B,CAAC,QAA0B,EAAE,QAA0B;QACtF,OAAO,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC5D,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ClientContext } from \"../ClientContext\";\nimport { PartitionedQueryExecutionInfo } from \"../request/ErrorResponse\";\nimport { DocumentProducer } from \"./documentProducer\";\nimport { ExecutionContext } from \"./ExecutionContext\";\nimport { OrderByDocumentProducerComparator } from \"./orderByDocumentProducerComparator\";\nimport { ParallelQueryExecutionContextBase } from \"./parallelQueryExecutionContextBase\";\n\n/** @hidden */\nexport class OrderByQueryExecutionContext extends ParallelQueryExecutionContextBase\n  implements ExecutionContext {\n  private orderByComparator: any;\n  /**\n   * Provides the OrderByQueryExecutionContext.\n   * This class is capable of handling orderby queries and dervives from ParallelQueryExecutionContextBase.\n   *\n   * When handling a parallelized query, it instantiates one instance of\n   * DocumentProcuder per target partition key range and aggregates the result of each.\n   *\n   * @constructor ParallelQueryExecutionContext\n   * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n   * @param {string} collectionLink                - The Collection Link\n   * @param {FeedOptions} [options]                - Represents the feed options.\n   * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n   * @ignore\n   */\n  constructor(\n    clientContext: ClientContext,\n    collectionLink: string,\n    query: any, // TODO: any query\n    options: any, // TODO: any options\n    partitionedQueryExecutionInfo: PartitionedQueryExecutionInfo\n  ) {\n    // Calling on base class constructor\n    super(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo);\n    this.orderByComparator = new OrderByDocumentProducerComparator(this.sortOrders);\n  }\n  // Instance members are inherited\n\n  // Overriding documentProducerComparator for OrderByQueryExecutionContexts\n  /**\n   * Provides a Comparator for document producers which respects orderby sort order.\n   * @returns {object}        - Comparator Function\n   * @ignore\n   */\n  public documentProducerComparator(docProd1: DocumentProducer, docProd2: DocumentProducer) {\n    return this.orderByComparator.compare(docProd1, docProd2);\n  }\n}\n"]}