{"version":3,"file":"parallelQueryExecutionContext.js","sourceRoot":"","sources":["../../src/queryExecutionContext/parallelQueryExecutionContext.ts"],"names":[],"mappings":"AAMA,OAAO,EAAE,iCAAiC,EAAE,MAAM,qCAAqC,CAAC;AAExF,cAAc;AACd,MAAM,OAAO,6BAA8B,SAAQ,iCAAiC;IAElF;;;;;;;;;;OAUG;IACH,YACE,aAA4B,EAC5B,cAAsB,EACtB,KAAU,EACV,OAAY,EACZ,6BAA4D;QAE5D,oCAAoC;QACpC,KAAK,CAAC,aAAa,EAAE,cAAc,EAAE,KAAK,EAAE,OAAO,EAAE,6BAA6B,CAAC,CAAC;IACtF,CAAC;IACD,iCAAiC;IAEjC,2EAA2E;IAC3E;;;;OAIG;IACI,0BAA0B,CAAC,QAA0B,EAAE,QAA0B;QACtF,OAAO,QAAQ,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU,CAAC;IACnD,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ClientContext } from \"../ClientContext\";\nimport { PartitionedQueryExecutionInfo } from \"../request/ErrorResponse\";\nimport { DocumentProducer } from \"./documentProducer\";\nimport { ExecutionContext } from \"./ExecutionContext\";\nimport { ParallelQueryExecutionContextBase } from \"./parallelQueryExecutionContextBase\";\n\n/** @hidden */\nexport class ParallelQueryExecutionContext extends ParallelQueryExecutionContextBase\n  implements ExecutionContext {\n  /**\n   * Provides the ParallelQueryExecutionContext.\n   * This class is capable of handling parallelized queries and dervives from ParallelQueryExecutionContextBase.\n   *\n   * @constructor ParallelQueryExecutionContext\n   * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n   * @param {string} collectionLink                - The Collection Link\n   * @param {FeedOptions} [options]                - Represents the feed options.\n   * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n   * @ignore\n   */\n  constructor(\n    clientContext: ClientContext,\n    collectionLink: string,\n    query: any,\n    options: any,\n    partitionedQueryExecutionInfo: PartitionedQueryExecutionInfo\n  ) {\n    // Calling on base class constructor\n    super(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo);\n  }\n  // Instance members are inherited\n\n  // Overriding documentProducerComparator for ParallelQueryExecutionContexts\n  /**\n   * Provides a Comparator for document producers using the min value of the corresponding target partition.\n   * @returns {object}        - Comparator Function\n   * @ignore\n   */\n  public documentProducerComparator(docProd1: DocumentProducer, docProd2: DocumentProducer) {\n    return docProd1.generation - docProd2.generation;\n  }\n}\n"]}