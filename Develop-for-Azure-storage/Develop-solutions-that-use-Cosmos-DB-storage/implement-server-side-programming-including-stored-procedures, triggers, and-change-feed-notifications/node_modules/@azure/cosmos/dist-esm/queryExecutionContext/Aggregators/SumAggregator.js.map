{"version":3,"file":"SumAggregator.js","sourceRoot":"","sources":["../../../src/queryExecutionContext/Aggregators/SumAggregator.ts"],"names":[],"mappings":"AAIA,cAAc;AACd,MAAM,OAAO,aAAa;IAExB;;;;;OAKG;IACI,SAAS,CAAC,KAAa;QAC5B,IAAI,KAAK,KAAK,SAAS,EAAE;YACvB,OAAO;SACR;QACD,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;YAC1B,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC;SAClB;aAAM;YACL,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC;SACnB;IACH,CAAC;IAED;;;;OAIG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,GAAG,CAAC;IAClB,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Aggregator } from \"./Aggregator\";\n\n/** @hidden */\nexport class SumAggregator implements Aggregator {\n  public sum: number;\n  /**\n   * Add the provided item to aggregation result.\n   * @memberof SumAggregator\n   * @instance\n   * @param other\n   */\n  public aggregate(other: number) {\n    if (other === undefined) {\n      return;\n    }\n    if (this.sum === undefined) {\n      this.sum = other;\n    } else {\n      this.sum += other;\n    }\n  }\n\n  /**\n   * Get the aggregation result.\n   * @memberof SumAggregator\n   * @instance\n   */\n  public getResult() {\n    return this.sum;\n  }\n}\n"]}