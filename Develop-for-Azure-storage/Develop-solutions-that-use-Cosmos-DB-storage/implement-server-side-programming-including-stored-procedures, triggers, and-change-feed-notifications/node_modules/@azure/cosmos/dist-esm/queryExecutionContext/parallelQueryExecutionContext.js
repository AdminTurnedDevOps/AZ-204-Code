import { ParallelQueryExecutionContextBase } from "./parallelQueryExecutionContextBase";
/** @hidden */
export class ParallelQueryExecutionContext extends ParallelQueryExecutionContextBase {
    /**
     * Provides the ParallelQueryExecutionContext.
     * This class is capable of handling parallelized queries and dervives from ParallelQueryExecutionContextBase.
     *
     * @constructor ParallelQueryExecutionContext
     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.
     * @param {string} collectionLink                - The Collection Link
     * @param {FeedOptions} [options]                - Represents the feed options.
     * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo
     * @ignore
     */
    constructor(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo) {
        // Calling on base class constructor
        super(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo);
    }
    // Instance members are inherited
    // Overriding documentProducerComparator for ParallelQueryExecutionContexts
    /**
     * Provides a Comparator for document producers using the min value of the corresponding target partition.
     * @returns {object}        - Comparator Function
     * @ignore
     */
    documentProducerComparator(docProd1, docProd2) {
        return docProd1.generation - docProd2.generation;
    }
}
//# sourceMappingURL=parallelQueryExecutionContext.js.map