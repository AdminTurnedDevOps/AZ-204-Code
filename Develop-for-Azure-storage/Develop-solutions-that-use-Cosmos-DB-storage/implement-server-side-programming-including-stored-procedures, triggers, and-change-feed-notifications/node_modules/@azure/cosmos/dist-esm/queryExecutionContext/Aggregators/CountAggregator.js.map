{"version":3,"file":"CountAggregator.js","sourceRoot":"","sources":["../../../src/queryExecutionContext/Aggregators/CountAggregator.ts"],"names":[],"mappings":"AAIA,cAAc;AACd,MAAM,OAAO,eAAe;IAE1B;;;;OAIG;IACH;QACE,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACjB,CAAC;IACD;;;;;OAKG;IACI,SAAS,CAAC,KAAa;QAC5B,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;IACtB,CAAC;IAED;;;;OAIG;IACI,SAAS;QACd,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CACF","sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Aggregator } from \"./Aggregator\";\n\n/** @hidden */\nexport class CountAggregator implements Aggregator {\n  public value: number;\n  /**\n   * Represents an aggregator for COUNT operator.\n   * @constructor CountAggregator\n   * @ignore\n   */\n  constructor() {\n    this.value = 0;\n  }\n  /**\n   * Add the provided item to aggregation result.\n   * @memberof CountAggregator\n   * @instance\n   * @param other\n   */\n  public aggregate(other: number) {\n    this.value += other;\n  }\n\n  /**\n   * Get the aggregation result.\n   * @memberof CountAggregator\n   * @instance\n   */\n  public getResult() {\n    return this.value;\n  }\n}\n"]}