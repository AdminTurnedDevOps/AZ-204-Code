import { __awaiter } from "tslib";
/** @hidden */
export class OrderByEndpointComponent {
    /**
     * Represents an endpoint in handling an order by query. For each processed orderby \
     * result it returns 'payload' item of the result
     * @constructor OrderByEndpointComponent
     * @param {object} executionContext              - Underlying Execution Context
     * @ignore
     */
    constructor(executionContext) {
        this.executionContext = executionContext;
    }
    /**
     * Execute a provided function on the next element in the OrderByEndpointComponent.
     * @memberof OrderByEndpointComponent
     * @instance
     */
    nextItem() {
        return __awaiter(this, void 0, void 0, function* () {
            const { result: item, headers } = yield this.executionContext.nextItem();
            return {
                result: item !== undefined ? item.payload : undefined,
                headers
            };
        });
    }
    /**
     * Determine if there are still remaining resources to processs.
     * @memberof OrderByEndpointComponent
     * @instance
     * @returns {Boolean} true if there is other elements to process in the OrderByEndpointComponent.
     */
    hasMoreResults() {
        return this.executionContext.hasMoreResults();
    }
}
//# sourceMappingURL=OrderByEndpointComponent.js.map