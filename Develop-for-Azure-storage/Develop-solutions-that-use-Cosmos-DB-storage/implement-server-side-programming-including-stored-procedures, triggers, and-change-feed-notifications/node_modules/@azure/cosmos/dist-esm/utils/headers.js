import { __awaiter } from "tslib";
import { hmac } from "./hmac";
import { ResourceType } from "../common";
export function generateHeaders(masterKey, method, resourceType = ResourceType.none, resourceId = "", date = new Date()) {
    return __awaiter(this, void 0, void 0, function* () {
        const sig = yield signature(masterKey, method, resourceType, resourceId, date);
        return {
            Authorization: sig,
            "x-ms-date": date.toUTCString()
        };
    });
}
function signature(masterKey, method, resourceType, resourceId = "", date = new Date()) {
    return __awaiter(this, void 0, void 0, function* () {
        const type = "master";
        const version = "1.0";
        const text = method.toLowerCase() +
            "\n" +
            resourceType.toLowerCase() +
            "\n" +
            resourceId +
            "\n" +
            date.toUTCString().toLowerCase() +
            "\n" +
            "" +
            "\n";
        const signed = yield hmac(masterKey, text);
        return encodeURIComponent("type=" + type + "&ver=" + version + "&sig=" + signed);
    });
}
//# sourceMappingURL=headers.js.map