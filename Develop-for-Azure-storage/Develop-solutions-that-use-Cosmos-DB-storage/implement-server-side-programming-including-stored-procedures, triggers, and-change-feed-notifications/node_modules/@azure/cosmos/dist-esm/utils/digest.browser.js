import { __awaiter } from "tslib";
import { encodeUTF8 } from "./encode";
const globalThis = typeof self === "undefined" ? window : self;
export function digest(str) {
    return __awaiter(this, void 0, void 0, function* () {
        if (!globalThis || !globalThis.crypto || !globalThis.crypto.subtle) {
            throw new Error("Browser does not support cryptography functions");
        }
        const data = encodeUTF8(str);
        const hash = yield globalThis.crypto.subtle.digest("SHA-256", data);
        return bufferToHex(hash);
    });
}
function bufferToHex(buffer) {
    return Array.prototype.map
        .call(new Uint8Array(buffer), (item) => ("00" + item.toString(16)).slice(-2))
        .join("");
}
//# sourceMappingURL=digest.browser.js.map