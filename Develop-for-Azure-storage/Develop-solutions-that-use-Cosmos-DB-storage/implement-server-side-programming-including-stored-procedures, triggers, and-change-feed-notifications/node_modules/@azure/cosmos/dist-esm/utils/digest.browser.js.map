{"version":3,"file":"digest.browser.js","sourceRoot":"","sources":["../../src/utils/digest.browser.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,UAAU,CAAC;AAEtC,MAAM,UAAU,GAAG,OAAO,IAAI,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC;AAE/D,MAAM,UAAgB,MAAM,CAAC,GAAW;;QACtC,IAAI,CAAC,UAAU,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,EAAE;YAClE,MAAM,IAAI,KAAK,CAAC,iDAAiD,CAAC,CAAC;SACpE;QAED,MAAM,IAAI,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;QAC7B,MAAM,IAAI,GAAG,MAAM,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACpE,OAAO,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3B,CAAC;CAAA;AAED,SAAS,WAAW,CAAC,MAAmB;IACtC,OAAO,KAAK,CAAC,SAAS,CAAC,GAAG;SACvB,IAAI,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC,IAAY,EAAE,EAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SACpF,IAAI,CAAC,EAAE,CAAC,CAAC;AACd,CAAC","sourcesContent":["import { encodeUTF8 } from \"./encode\";\n\nconst globalThis = typeof self === \"undefined\" ? window : self;\n\nexport async function digest(str: string) {\n  if (!globalThis || !globalThis.crypto || !globalThis.crypto.subtle) {\n    throw new Error(\"Browser does not support cryptography functions\");\n  }\n\n  const data = encodeUTF8(str);\n  const hash = await globalThis.crypto.subtle.digest(\"SHA-256\", data);\n  return bufferToHex(hash);\n}\n\nfunction bufferToHex(buffer: ArrayBuffer) {\n  return Array.prototype.map\n    .call(new Uint8Array(buffer), (item: number) => (\"00\" + item.toString(16)).slice(-2))\n    .join(\"\");\n}\n"]}