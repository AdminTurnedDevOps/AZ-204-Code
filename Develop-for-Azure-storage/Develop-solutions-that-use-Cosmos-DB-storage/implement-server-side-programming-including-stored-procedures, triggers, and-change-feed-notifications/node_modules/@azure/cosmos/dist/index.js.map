{"version":3,"file":"index.js","sources":["../dist-esm/common/partitionKeys.js","../dist-esm/common/constants.js","../dist-esm/common/helper.js","../dist-esm/common/statusCodes.js","../dist-esm/common/uriFactory.js","../dist-esm/utils/user-agent.js","../dist-esm/common/platform.js","../dist-esm/extractPartitionKey.js","../dist-esm/utils/hmac.js","../dist-esm/utils/headers.js","../dist-esm/auth.js","../dist-esm/documents/ConnectionMode.js","../dist-esm/documents/ConnectionPolicy.js","../dist-esm/documents/ConsistencyLevel.js","../dist-esm/documents/DatabaseAccount.js","../dist-esm/documents/DataType.js","../dist-esm/documents/IndexingMode.js","../dist-esm/documents/IndexingPolicy.js","../dist-esm/documents/IndexKind.js","../dist-esm/documents/PermissionMode.js","../dist-esm/documents/TriggerOperation.js","../dist-esm/documents/TriggerType.js","../dist-esm/documents/UserDefinedFunctionType.js","../dist-esm/request/ResourceResponse.js","../dist-esm/request/FeedResponse.js","../dist-esm/queryMetrics/clientSideMetrics.js","../dist-esm/queryMetrics/queryMetricsConstants.js","../dist-esm/queryMetrics/timeSpan.js","../dist-esm/queryMetrics/queryMetricsUtils.js","../dist-esm/queryMetrics/queryPreparationTime.js","../dist-esm/queryMetrics/runtimeExecutionTimes.js","../dist-esm/queryMetrics/queryMetrics.js","../dist-esm/queryExecutionContext/headerUtils.js","../dist-esm/common/logger.js","../dist-esm/queryExecutionContext/defaultQueryExecutionContext.js","../dist-esm/queryExecutionContext/Aggregators/AverageAggregator.js","../dist-esm/queryExecutionContext/Aggregators/CountAggregator.js","../dist-esm/queryExecutionContext/orderByDocumentProducerComparator.js","../dist-esm/queryExecutionContext/Aggregators/MaxAggregator.js","../dist-esm/queryExecutionContext/Aggregators/MinAggregator.js","../dist-esm/queryExecutionContext/Aggregators/SumAggregator.js","../dist-esm/queryExecutionContext/Aggregators/StaticValueAggregator.js","../dist-esm/queryExecutionContext/Aggregators/index.js","../dist-esm/queryExecutionContext/FetchResult.js","../dist-esm/queryExecutionContext/documentProducer.js","../dist-esm/routing/QueryRange.js","../dist-esm/routing/inMemoryCollectionRoutingMap.js","../dist-esm/routing/CollectionRoutingMapFactory.js","../dist-esm/routing/partitionKeyRangeCache.js","../dist-esm/routing/smartRoutingMapProvider.js","../dist-esm/queryExecutionContext/parallelQueryExecutionContextBase.js","../dist-esm/queryExecutionContext/parallelQueryExecutionContext.js","../dist-esm/queryExecutionContext/orderByQueryExecutionContext.js","../dist-esm/queryExecutionContext/EndpointComponent/OffsetLimitEndpointComponent.js","../dist-esm/queryExecutionContext/EndpointComponent/OrderByEndpointComponent.js","../dist-esm/utils/digest.js","../dist-esm/utils/hashObject.js","../dist-esm/queryExecutionContext/EndpointComponent/OrderedDistinctEndpointComponent.js","../dist-esm/queryExecutionContext/EndpointComponent/UnorderedDistinctEndpointComponent.js","../dist-esm/queryExecutionContext/EndpointComponent/emptyGroup.js","../dist-esm/queryExecutionContext/EndpointComponent/GroupByEndpointComponent.js","../dist-esm/queryExecutionContext/EndpointComponent/GroupByValueEndpointComponent.js","../dist-esm/queryExecutionContext/pipelinedQueryExecutionContext.js","../dist-esm/queryIterator.js","../dist-esm/client/Conflict/ConflictResponse.js","../dist-esm/client/Conflict/Conflict.js","../dist-esm/client/Conflict/Conflicts.js","../dist-esm/client/Conflict/ConflictResolutionMode.js","../dist-esm/client/Item/ItemResponse.js","../dist-esm/client/Item/Item.js","../dist-esm/ChangeFeedResponse.js","../dist-esm/ChangeFeedIterator.js","../dist-esm/client/Item/Items.js","../dist-esm/client/StoredProcedure/StoredProcedureResponse.js","../dist-esm/client/StoredProcedure/StoredProcedure.js","../dist-esm/client/StoredProcedure/StoredProcedures.js","../dist-esm/client/Trigger/TriggerResponse.js","../dist-esm/client/Trigger/Trigger.js","../dist-esm/client/Trigger/Triggers.js","../dist-esm/client/UserDefinedFunction/UserDefinedFunctionResponse.js","../dist-esm/client/UserDefinedFunction/UserDefinedFunction.js","../dist-esm/client/UserDefinedFunction/UserDefinedFunctions.js","../dist-esm/client/Script/Scripts.js","../dist-esm/client/Container/ContainerResponse.js","../dist-esm/client/Container/Container.js","../dist-esm/client/Container/Containers.js","../dist-esm/client/Permission/PermissionResponse.js","../dist-esm/client/Permission/Permission.js","../dist-esm/client/Permission/Permissions.js","../dist-esm/client/User/UserResponse.js","../dist-esm/client/User/User.js","../dist-esm/client/User/Users.js","../dist-esm/client/Database/DatabaseResponse.js","../dist-esm/client/Database/Database.js","../dist-esm/client/Database/Databases.js","../dist-esm/client/Offer/OfferResponse.js","../dist-esm/client/Offer/Offer.js","../dist-esm/client/Offer/Offers.js","../dist-esm/plugins/Plugin.js","../dist-esm/request/request.js","../dist-esm/request/TimeoutError.js","../dist-esm/retry/defaultRetryPolicy.js","../dist-esm/retry/endpointDiscoveryRetryPolicy.js","../dist-esm/retry/resourceThrottleRetryPolicy.js","../dist-esm/retry/sessionRetryPolicy.js","../dist-esm/retry/retryUtility.js","../dist-esm/request/defaultAgent.js","../dist-esm/request/RequestHandler.js","../dist-esm/utils/atob.js","../dist-esm/session/VectorSessionToken.js","../dist-esm/session/sessionContainer.js","../dist-esm/ClientContext.js","../dist-esm/globalEndpointManager.js","../dist-esm/CosmosClient.js"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const DEFAULT_PARTITION_KEY_PATH = \"/_partitionKey\";\n//# sourceMappingURL=partitionKeys.js.map","/**\n * @ignore\n */\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport const Constants = {\n    HttpHeaders: {\n        Authorization: \"authorization\",\n        ETag: \"etag\",\n        MethodOverride: \"X-HTTP-Method\",\n        Slug: \"Slug\",\n        ContentType: \"Content-Type\",\n        LastModified: \"Last-Modified\",\n        ContentEncoding: \"Content-Encoding\",\n        CharacterSet: \"CharacterSet\",\n        UserAgent: \"User-Agent\",\n        IfModifiedSince: \"If-Modified-Since\",\n        IfMatch: \"If-Match\",\n        IfNoneMatch: \"If-None-Match\",\n        ContentLength: \"Content-Length\",\n        AcceptEncoding: \"Accept-Encoding\",\n        KeepAlive: \"Keep-Alive\",\n        CacheControl: \"Cache-Control\",\n        TransferEncoding: \"Transfer-Encoding\",\n        ContentLanguage: \"Content-Language\",\n        ContentLocation: \"Content-Location\",\n        ContentMd5: \"Content-Md5\",\n        ContentRange: \"Content-Range\",\n        Accept: \"Accept\",\n        AcceptCharset: \"Accept-Charset\",\n        AcceptLanguage: \"Accept-Language\",\n        IfRange: \"If-Range\",\n        IfUnmodifiedSince: \"If-Unmodified-Since\",\n        MaxForwards: \"Max-Forwards\",\n        ProxyAuthorization: \"Proxy-Authorization\",\n        AcceptRanges: \"Accept-Ranges\",\n        ProxyAuthenticate: \"Proxy-Authenticate\",\n        RetryAfter: \"Retry-After\",\n        SetCookie: \"Set-Cookie\",\n        WwwAuthenticate: \"Www-Authenticate\",\n        Origin: \"Origin\",\n        Host: \"Host\",\n        AccessControlAllowOrigin: \"Access-Control-Allow-Origin\",\n        AccessControlAllowHeaders: \"Access-Control-Allow-Headers\",\n        KeyValueEncodingFormat: \"application/x-www-form-urlencoded\",\n        WrapAssertionFormat: \"wrap_assertion_format\",\n        WrapAssertion: \"wrap_assertion\",\n        WrapScope: \"wrap_scope\",\n        SimpleToken: \"SWT\",\n        HttpDate: \"date\",\n        Prefer: \"Prefer\",\n        Location: \"Location\",\n        Referer: \"referer\",\n        A_IM: \"A-IM\",\n        // Query\n        Query: \"x-ms-documentdb-query\",\n        IsQuery: \"x-ms-documentdb-isquery\",\n        IsQueryPlan: \"x-ms-cosmos-is-query-plan-request\",\n        SupportedQueryFeatures: \"x-ms-cosmos-supported-query-features\",\n        QueryVersion: \"x-ms-cosmos-query-version\",\n        // Our custom Azure Cosmos DB headers\n        Continuation: \"x-ms-continuation\",\n        PageSize: \"x-ms-max-item-count\",\n        ItemCount: \"x-ms-item-count\",\n        // Request sender generated. Simply echoed by backend.\n        ActivityId: \"x-ms-activity-id\",\n        PreTriggerInclude: \"x-ms-documentdb-pre-trigger-include\",\n        PreTriggerExclude: \"x-ms-documentdb-pre-trigger-exclude\",\n        PostTriggerInclude: \"x-ms-documentdb-post-trigger-include\",\n        PostTriggerExclude: \"x-ms-documentdb-post-trigger-exclude\",\n        IndexingDirective: \"x-ms-indexing-directive\",\n        SessionToken: \"x-ms-session-token\",\n        ConsistencyLevel: \"x-ms-consistency-level\",\n        XDate: \"x-ms-date\",\n        CollectionPartitionInfo: \"x-ms-collection-partition-info\",\n        CollectionServiceInfo: \"x-ms-collection-service-info\",\n        // Deprecated, use RetryAfterInMs instead.\n        RetryAfterInMilliseconds: \"x-ms-retry-after-ms\",\n        RetryAfterInMs: \"x-ms-retry-after-ms\",\n        IsFeedUnfiltered: \"x-ms-is-feed-unfiltered\",\n        ResourceTokenExpiry: \"x-ms-documentdb-expiry-seconds\",\n        EnableScanInQuery: \"x-ms-documentdb-query-enable-scan\",\n        EmitVerboseTracesInQuery: \"x-ms-documentdb-query-emit-traces\",\n        EnableCrossPartitionQuery: \"x-ms-documentdb-query-enablecrosspartition\",\n        ParallelizeCrossPartitionQuery: \"x-ms-documentdb-query-parallelizecrosspartitionquery\",\n        ResponseContinuationTokenLimitInKB: \"x-ms-documentdb-responsecontinuationtokenlimitinkb\",\n        // QueryMetrics\n        // Request header to tell backend to give you query metrics.\n        PopulateQueryMetrics: \"x-ms-documentdb-populatequerymetrics\",\n        // Response header that holds the serialized version of query metrics.\n        QueryMetrics: \"x-ms-documentdb-query-metrics\",\n        // Version headers and values\n        Version: \"x-ms-version\",\n        // Owner name\n        OwnerFullName: \"x-ms-alt-content-path\",\n        // Owner ID used for name based request in session token.\n        OwnerId: \"x-ms-content-path\",\n        // Partition Key\n        PartitionKey: \"x-ms-documentdb-partitionkey\",\n        PartitionKeyRangeID: \"x-ms-documentdb-partitionkeyrangeid\",\n        // Quota Info\n        MaxEntityCount: \"x-ms-root-entity-max-count\",\n        CurrentEntityCount: \"x-ms-root-entity-current-count\",\n        CollectionQuotaInMb: \"x-ms-collection-quota-mb\",\n        CollectionCurrentUsageInMb: \"x-ms-collection-usage-mb\",\n        MaxMediaStorageUsageInMB: \"x-ms-max-media-storage-usage-mb\",\n        CurrentMediaStorageUsageInMB: \"x-ms-media-storage-usage-mb\",\n        RequestCharge: \"x-ms-request-charge\",\n        PopulateQuotaInfo: \"x-ms-documentdb-populatequotainfo\",\n        MaxResourceQuota: \"x-ms-resource-quota\",\n        // Offer header\n        OfferType: \"x-ms-offer-type\",\n        OfferThroughput: \"x-ms-offer-throughput\",\n        // Custom RUs/minute headers\n        DisableRUPerMinuteUsage: \"x-ms-documentdb-disable-ru-per-minute-usage\",\n        IsRUPerMinuteUsed: \"x-ms-documentdb-is-ru-per-minute-used\",\n        OfferIsRUPerMinuteThroughputEnabled: \"x-ms-offer-is-ru-per-minute-throughput-enabled\",\n        // Index progress headers\n        IndexTransformationProgress: \"x-ms-documentdb-collection-index-transformation-progress\",\n        LazyIndexingProgress: \"x-ms-documentdb-collection-lazy-indexing-progress\",\n        // Upsert header\n        IsUpsert: \"x-ms-documentdb-is-upsert\",\n        // Sub status of the error\n        SubStatus: \"x-ms-substatus\",\n        // StoredProcedure related headers\n        EnableScriptLogging: \"x-ms-documentdb-script-enable-logging\",\n        ScriptLogResults: \"x-ms-documentdb-script-log-results\",\n        // Multi-Region Write\n        ALLOW_MULTIPLE_WRITES: \"x-ms-cosmos-allow-tentative-writes\"\n    },\n    // GlobalDB related constants\n    WritableLocations: \"writableLocations\",\n    ReadableLocations: \"readableLocations\",\n    // ServiceDocument Resource\n    ENABLE_MULTIPLE_WRITABLE_LOCATIONS: \"enableMultipleWriteLocations\",\n    // Background refresh time\n    DefaultUnavailableLocationExpirationTimeMS: 5 * 60 * 1000,\n    // Client generated retry count response header\n    ThrottleRetryCount: \"x-ms-throttle-retry-count\",\n    ThrottleRetryWaitTimeInMs: \"x-ms-throttle-retry-wait-time-ms\",\n    CurrentVersion: \"2018-12-31\",\n    SDKName: \"azure-cosmos-js\",\n    SDKVersion: \"3.6.3\",\n    Quota: {\n        CollectionSize: \"collectionSize\"\n    },\n    Path: {\n        DatabasesPathSegment: \"dbs\",\n        CollectionsPathSegment: \"colls\",\n        UsersPathSegment: \"users\",\n        DocumentsPathSegment: \"docs\",\n        PermissionsPathSegment: \"permissions\",\n        StoredProceduresPathSegment: \"sprocs\",\n        TriggersPathSegment: \"triggers\",\n        UserDefinedFunctionsPathSegment: \"udfs\",\n        ConflictsPathSegment: \"conflicts\",\n        AttachmentsPathSegment: \"attachments\",\n        PartitionKeyRangesPathSegment: \"pkranges\",\n        SchemasPathSegment: \"schemas\",\n        OffersPathSegment: \"offers\",\n        TopologyPathSegment: \"topology\",\n        DatabaseAccountPathSegment: \"databaseaccount\"\n    },\n    PartitionKeyRange: {\n        // Partition Key Range Constants\n        MinInclusive: \"minInclusive\",\n        MaxExclusive: \"maxExclusive\",\n        Id: \"id\"\n    },\n    QueryRangeConstants: {\n        // Partition Key Range Constants\n        MinInclusive: \"minInclusive\",\n        MaxExclusive: \"maxExclusive\",\n        min: \"min\"\n    },\n    EffectiveParitionKeyConstants: {\n        MinimumInclusiveEffectivePartitionKey: \"\",\n        MaximumExclusiveEffectivePartitionKey: \"FF\"\n    }\n};\n/**\n * @ignore\n */\nexport var ResourceType;\n(function (ResourceType) {\n    ResourceType[\"none\"] = \"\";\n    ResourceType[\"database\"] = \"dbs\";\n    ResourceType[\"offer\"] = \"offers\";\n    ResourceType[\"user\"] = \"users\";\n    ResourceType[\"permission\"] = \"permissions\";\n    ResourceType[\"container\"] = \"colls\";\n    ResourceType[\"conflicts\"] = \"conflicts\";\n    ResourceType[\"sproc\"] = \"sprocs\";\n    ResourceType[\"udf\"] = \"udfs\";\n    ResourceType[\"trigger\"] = \"triggers\";\n    ResourceType[\"item\"] = \"docs\";\n    ResourceType[\"pkranges\"] = \"pkranges\";\n})(ResourceType || (ResourceType = {}));\n/**\n * @ignore\n */\nexport var HTTPMethod;\n(function (HTTPMethod) {\n    HTTPMethod[\"get\"] = \"GET\";\n    HTTPMethod[\"post\"] = \"POST\";\n    HTTPMethod[\"put\"] = \"PUT\";\n    HTTPMethod[\"delete\"] = \"DELETE\";\n})(HTTPMethod || (HTTPMethod = {}));\n/**\n * @ignore\n */\nexport var OperationType;\n(function (OperationType) {\n    OperationType[\"Create\"] = \"create\";\n    OperationType[\"Replace\"] = \"replace\";\n    OperationType[\"Upsert\"] = \"upsert\";\n    OperationType[\"Delete\"] = \"delete\";\n    OperationType[\"Read\"] = \"read\";\n    OperationType[\"Query\"] = \"query\";\n    OperationType[\"Execute\"] = \"execute\";\n})(OperationType || (OperationType = {}));\n//# sourceMappingURL=constants.js.map","import { OperationType } from \"./constants\";\nconst trimLeftSlashes = new RegExp(\"^[/]+\");\nconst trimRightSlashes = new RegExp(\"[/]+$\");\nconst illegalResourceIdCharacters = new RegExp(\"[/\\\\\\\\?#]\");\n/** @hidden */\nexport function jsonStringifyAndEscapeNonASCII(arg) {\n    // TODO: better way for this? Not sure.\n    // escapes non-ASCII characters as \\uXXXX\n    return JSON.stringify(arg).replace(/[\\u0080-\\uFFFF]/g, (m) => {\n        return \"\\\\u\" + (\"0000\" + m.charCodeAt(0).toString(16)).slice(-4);\n    });\n}\n/**\n * @ignore\n */\nexport function parseLink(resourcePath) {\n    if (resourcePath.length === 0) {\n        /* for DatabaseAccount case, both type and objectBody will be undefined. */\n        return {\n            type: undefined,\n            objectBody: undefined\n        };\n    }\n    if (resourcePath[resourcePath.length - 1] !== \"/\") {\n        resourcePath = resourcePath + \"/\";\n    }\n    if (resourcePath[0] !== \"/\") {\n        resourcePath = \"/\" + resourcePath;\n    }\n    /*\n           The path will be in the form of /[resourceType]/[resourceId]/ ....\n           /[resourceType]//[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/\n           or /[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId]/[resourceType]/[resourceId]/ ....\n            /[resourceType]/[resourceId]/\n           The result of split will be in the form of\n           [[[resourceType], [resourceId] ... ,[resourceType], [resourceId], \"\"]\n           In the first case, to extract the resourceId it will the element before last ( at length -2 )\n           and the type will be before it ( at length -3 )\n           In the second case, to extract the resource type it will the element before last ( at length -2 )\n          */\n    const pathParts = resourcePath.split(\"/\");\n    let id;\n    let type;\n    if (pathParts.length % 2 === 0) {\n        // request in form /[resourceType]/[resourceId]/ .... /[resourceType]/[resourceId].\n        id = pathParts[pathParts.length - 2];\n        type = pathParts[pathParts.length - 3];\n    }\n    else {\n        // request in form /[resourceType]/[resourceId]/ .... /[resourceType]/.\n        id = pathParts[pathParts.length - 3];\n        type = pathParts[pathParts.length - 2];\n    }\n    const result = {\n        type,\n        objectBody: {\n            id,\n            self: resourcePath\n        }\n    };\n    return result;\n}\n/**\n * @ignore\n */\nexport function isReadRequest(operationType) {\n    return operationType === OperationType.Read || operationType === OperationType.Query;\n}\n/**\n * @ignore\n */\nexport function sleep(time) {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve();\n        }, time);\n    });\n}\n/**\n * @ignore\n */\nexport function getContainerLink(link) {\n    return link\n        .split(\"/\")\n        .slice(0, 4)\n        .join(\"/\");\n}\n/**\n * @ignore\n */\nexport function trimSlashes(source) {\n    return source.replace(trimLeftSlashes, \"\").replace(trimRightSlashes, \"\");\n}\n/**\n * @ignore\n */\nexport function getHexaDigit() {\n    return Math.floor(Math.random() * 16).toString(16);\n}\n/**\n * @ignore\n */\nexport function parsePath(path) {\n    const pathParts = [];\n    let currentIndex = 0;\n    const throwError = () => {\n        throw new Error(\"Path \" + path + \" is invalid at index \" + currentIndex);\n    };\n    const getEscapedToken = () => {\n        const quote = path[currentIndex];\n        let newIndex = ++currentIndex;\n        while (true) {\n            newIndex = path.indexOf(quote, newIndex);\n            if (newIndex === -1) {\n                throwError();\n            }\n            if (path[newIndex - 1] !== \"\\\\\") {\n                break;\n            }\n            ++newIndex;\n        }\n        const token = path.substr(currentIndex, newIndex - currentIndex);\n        currentIndex = newIndex + 1;\n        return token;\n    };\n    const getToken = () => {\n        const newIndex = path.indexOf(\"/\", currentIndex);\n        let token = null;\n        if (newIndex === -1) {\n            token = path.substr(currentIndex);\n            currentIndex = path.length;\n        }\n        else {\n            token = path.substr(currentIndex, newIndex - currentIndex);\n            currentIndex = newIndex;\n        }\n        token = token.trim();\n        return token;\n    };\n    while (currentIndex < path.length) {\n        if (path[currentIndex] !== \"/\") {\n            throwError();\n        }\n        if (++currentIndex === path.length) {\n            break;\n        }\n        if (path[currentIndex] === '\"' || path[currentIndex] === \"'\") {\n            pathParts.push(getEscapedToken());\n        }\n        else {\n            pathParts.push(getToken());\n        }\n    }\n    return pathParts;\n}\n/**\n * @ignore\n */\nexport function isResourceValid(resource, err) {\n    // TODO: any TODO: code smell\n    if (resource.id) {\n        if (typeof resource.id !== \"string\") {\n            err.message = \"Id must be a string.\";\n            return false;\n        }\n        if (resource.id.indexOf(\"/\") !== -1 ||\n            resource.id.indexOf(\"\\\\\") !== -1 ||\n            resource.id.indexOf(\"?\") !== -1 ||\n            resource.id.indexOf(\"#\") !== -1) {\n            err.message = \"Id contains illegal chars.\";\n            return false;\n        }\n        if (resource.id[resource.id.length - 1] === \" \") {\n            err.message = \"Id ends with a space.\";\n            return false;\n        }\n    }\n    return true;\n}\n/** @ignore */\nexport function getIdFromLink(resourceLink) {\n    resourceLink = trimSlashes(resourceLink);\n    return resourceLink;\n}\n/** @ignore */\nexport function getPathFromLink(resourceLink, resourceType) {\n    resourceLink = trimSlashes(resourceLink);\n    if (resourceType) {\n        return \"/\" + encodeURI(resourceLink) + \"/\" + resourceType;\n    }\n    else {\n        return \"/\" + encodeURI(resourceLink);\n    }\n}\n/**\n * @ignore\n */\nexport function isStringNullOrEmpty(inputString) {\n    // checks whether string is null, undefined, empty or only contains space\n    return !inputString || /^\\s*$/.test(inputString);\n}\n/**\n * @ignore\n */\nexport function trimSlashFromLeftAndRight(inputString) {\n    if (typeof inputString !== \"string\") {\n        throw new Error(\"invalid input: input is not string\");\n    }\n    return inputString.replace(trimLeftSlashes, \"\").replace(trimRightSlashes, \"\");\n}\n/**\n * @ignore\n */\nexport function validateResourceId(resourceId) {\n    // if resourceId is not a string or is empty throw an error\n    if (typeof resourceId !== \"string\" || isStringNullOrEmpty(resourceId)) {\n        throw new Error(\"Resource Id must be a string and cannot be undefined, null or empty\");\n    }\n    // if resourceId starts or ends with space throw an error\n    if (resourceId[resourceId.length - 1] === \" \") {\n        throw new Error(\"Resource Id cannot end with space\");\n    }\n    // if resource id contains illegal characters throw an error\n    if (illegalResourceIdCharacters.test(resourceId)) {\n        throw new Error(\"Illegal characters ['/', '\\\\', '?', '#'] cannot be used in resourceId\");\n    }\n    return true;\n}\n/**\n * @ignore\n * @param resourcePath\n */\nexport function getResourceIdFromPath(resourcePath) {\n    if (!resourcePath || typeof resourcePath !== \"string\") {\n        return null;\n    }\n    const trimmedPath = trimSlashFromLeftAndRight(resourcePath);\n    const pathSegments = trimmedPath.split(\"/\");\n    // number of segments of a path must always be even\n    if (pathSegments.length % 2 !== 0) {\n        return null;\n    }\n    return pathSegments[pathSegments.length - 1];\n}\n/**\n * @ignore\n */\nexport function parseConnectionString(connectionString) {\n    const keyValueStrings = connectionString.split(\";\");\n    const { AccountEndpoint, AccountKey } = keyValueStrings.reduce((connectionObject, keyValueString) => {\n        const [key, ...value] = keyValueString.split(\"=\");\n        connectionObject[key] = value.join(\"=\");\n        return connectionObject;\n    }, {});\n    if (!AccountEndpoint || !AccountKey) {\n        throw new Error(\"Could not parse the provided connection string\");\n    }\n    return {\n        endpoint: AccountEndpoint,\n        key: AccountKey\n    };\n}\n/**\n * @ignore\n */\n// https://github.com/iliakan/detect-node/blob/master/index.js\nexport const isNode = Object.prototype.toString.call(typeof process !== \"undefined\" ? process : 0) ===\n    \"[object process]\";\n//# sourceMappingURL=helper.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * @ignore\n */\nexport const StatusCodes = {\n    // Success\n    Ok: 200,\n    Created: 201,\n    Accepted: 202,\n    NoContent: 204,\n    NotModified: 304,\n    // Client error\n    BadRequest: 400,\n    Unauthorized: 401,\n    Forbidden: 403,\n    NotFound: 404,\n    MethodNotAllowed: 405,\n    RequestTimeout: 408,\n    Conflict: 409,\n    Gone: 410,\n    PreconditionFailed: 412,\n    RequestEntityTooLarge: 413,\n    TooManyRequests: 429,\n    RetryWith: 449,\n    // Server Error\n    InternalServerError: 500,\n    ServiceUnavailable: 503,\n    // Operation pause and cancel. These are FAKE status codes for QOS logging purpose only.\n    OperationPaused: 1200,\n    OperationCancelled: 1201\n};\n/**\n * @ignore\n */\nexport const SubStatusCodes = {\n    Unknown: 0,\n    // 400: Bad Request Substatus\n    CrossPartitionQueryNotServable: 1004,\n    // 410: StatusCodeType_Gone: substatus\n    PartitionKeyRangeGone: 1002,\n    // 404: NotFound Substatus\n    ReadSessionNotAvailable: 1002,\n    // 403: Forbidden Substatus\n    WriteForbidden: 3,\n    DatabaseAccountNotFound: 1008\n};\n//# sourceMappingURL=statusCodes.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"./constants\";\nimport { trimSlashFromLeftAndRight, validateResourceId } from \"./helper\";\n/**\n * @ignore\n * Given a database id, this creates a database link.\n * @param {string} databaseId -The database id\n * @returns {string}          -A database link in the format of dbs/{0} \\\n * with {0} being a Uri escaped version of the databaseId\n * @description Would be used when creating or deleting a DocumentCollection \\\n * or a User in Azure Cosmos DB database service\n */\nexport function createDatabaseUri(databaseId) {\n    databaseId = trimSlashFromLeftAndRight(databaseId);\n    validateResourceId(databaseId);\n    return Constants.Path.DatabasesPathSegment + \"/\" + databaseId;\n}\n/**\n * Given a database and collection id, this creates a collection link.\n * @param {string} databaseId        -The database id\n * @param {string} collectionId      -The collection id\n * @returns {string}                 A collection link in the format of dbs/{0}/colls/{1} \\\n * with {0} being a Uri escaped version of the databaseId and {1} being collectionId\n * @description Would be used when updating or deleting a DocumentCollection, creating a \\\n * Document, a StoredProcedure, a Trigger, a UserDefinedFunction, or when executing a query \\\n * with CreateDocumentQuery in Azure Cosmos DB database service.\n * @ignore\n */\nexport function createDocumentCollectionUri(databaseId, collectionId) {\n    collectionId = trimSlashFromLeftAndRight(collectionId);\n    validateResourceId(collectionId);\n    return (createDatabaseUri(databaseId) + \"/\" + Constants.Path.CollectionsPathSegment + \"/\" + collectionId);\n}\n/**\n * Given a database and user id, this creates a user link.\n * @param {string} databaseId        -The database id\n * @param {string} userId            -The user id\n * @returns {string}                 A user link in the format of dbs/{0}/users/{1} \\\n * with {0} being a Uri escaped version of the databaseId and {1} being userId\n * @description Would be used when creating a Permission, or when replacing or deleting \\\n * a User in Azure Cosmos DB database service\n * @ignore\n */\nexport function createUserUri(databaseId, userId) {\n    userId = trimSlashFromLeftAndRight(userId);\n    validateResourceId(userId);\n    return createDatabaseUri(databaseId) + \"/\" + Constants.Path.UsersPathSegment + \"/\" + userId;\n}\n/**\n * Given a database and collection id, this creates a collection link.\n * @param {string} databaseId        -The database id\n * @param {string} collectionId      -The collection id\n * @param {string} documentId        -The document id\n * @returns {string}                 -A document link in the format of \\\n * dbs/{0}/colls/{1}/docs/{2} with {0} being a Uri escaped version of \\\n * the databaseId, {1} being collectionId and {2} being the documentId\n * @description Would be used when creating an Attachment, or when replacing \\\n * or deleting a Document in Azure Cosmos DB database service\n * @ignore\n */\nexport function createDocumentUri(databaseId, collectionId, documentId) {\n    documentId = trimSlashFromLeftAndRight(documentId);\n    validateResourceId(documentId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        Constants.Path.DocumentsPathSegment +\n        \"/\" +\n        documentId);\n}\n/**\n * Given a database, collection and document id, this creates a document link.\n * @param {string} databaseId    -The database Id\n * @param {string} userId        -The user Id\n * @param {string} permissionId  - The permissionId\n * @returns {string} A permission link in the format of dbs/{0}/users/{1}/permissions/{2} \\\n * with {0} being a Uri escaped version of the databaseId, {1} being userId and {2} being permissionId\n * @description Would be used when replacing or deleting a Permission in Azure Cosmos DB database service.\n * @ignore\n */\nexport function createPermissionUri(databaseId, userId, permissionId) {\n    permissionId = trimSlashFromLeftAndRight(permissionId);\n    validateResourceId(permissionId);\n    return (createUserUri(databaseId, userId) +\n        \"/\" +\n        Constants.Path.PermissionsPathSegment +\n        \"/\" +\n        permissionId);\n}\n/**\n * Given a database, collection and stored proc id, this creates a stored proc link.\n * @param {string} databaseId        -The database Id\n * @param {string} collectionId      -The collection Id\n * @param {string} storedProcedureId -The stored procedure Id\n * @returns {string}                 -A stored procedure link in the format of \\\n * dbs/{0}/colls/{1}/sprocs/{2} with {0} being a Uri escaped version of the databaseId, \\\n * {1} being collectionId and {2} being the storedProcedureId\n * @description Would be used when replacing, executing, or deleting a StoredProcedure in \\\n * Azure Cosmos DB database service.\n * @ignore\n */\nexport function createStoredProcedureUri(databaseId, collectionId, storedProcedureId) {\n    storedProcedureId = trimSlashFromLeftAndRight(storedProcedureId);\n    validateResourceId(storedProcedureId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        Constants.Path.StoredProceduresPathSegment +\n        \"/\" +\n        storedProcedureId);\n}\n/**\n * @summary Given a database, collection and trigger id, this creates a trigger link.\n * @param {string} databaseId        -The database Id\n * @param {string} collectionId      -The collection Id\n * @param {string} triggerId         -The trigger Id\n * @returns {string}                 -A trigger link in the format of \\\n * dbs/{0}/colls/{1}/triggers/{2} with {0} being a Uri escaped version of the databaseId, \\\n * {1} being collectionId and {2} being the triggerId\n * @description Would be used when replacing, executing, or deleting a Trigger in Azure Cosmos DB database service\n * @ignore\n */\nexport function createTriggerUri(databaseId, collectionId, triggerId) {\n    triggerId = trimSlashFromLeftAndRight(triggerId);\n    validateResourceId(triggerId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        Constants.Path.TriggersPathSegment +\n        \"/\" +\n        triggerId);\n}\n/**\n * @summary Given a database, collection and udf id, this creates a udf link.\n * @param {string} databaseId        -The database Id\n * @param {string} collectionId      -The collection Id\n * @param {string} udfId             -The User Defined Function Id\n * @returns {string}                 -A udf link in the format of dbs/{0}/colls/{1}/udfs/{2} \\\n * with {0} being a Uri escaped version of the databaseId, {1} being collectionId and {2} being the udfId\n * @description Would be used when replacing, executing, or deleting a UserDefinedFunction in \\\n * Azure Cosmos DB database service\n * @ignore\n */\nexport function createUserDefinedFunctionUri(databaseId, collectionId, udfId) {\n    udfId = trimSlashFromLeftAndRight(udfId);\n    validateResourceId(udfId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        Constants.Path.UserDefinedFunctionsPathSegment +\n        \"/\" +\n        udfId);\n}\n/**\n * @summary Given a database, collection and conflict id, this creates a conflict link.\n * @param {string} databaseId        -The database Id\n * @param {string} collectionId      -The collection Id\n * @param {string} conflictId        -The conflict Id\n * @returns {string}                 -A conflict link in the format of dbs/{0}/colls/{1}/conflicts/{2} \\\n * with {0} being a Uri escaped version of the databaseId, {1} being collectionId and {2} being the conflictId\n * @description Would be used when creating a Conflict in Azure Cosmos DB database service.\n * @ignore\n */\nexport function createConflictUri(databaseId, collectionId, conflictId) {\n    conflictId = trimSlashFromLeftAndRight(conflictId);\n    validateResourceId(conflictId);\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        Constants.Path.ConflictsPathSegment +\n        \"/\" +\n        conflictId);\n}\n/**\n * @summary Given a database, collection and conflict id, this creates a conflict link.\n * @param {string} databaseId        -The database Id\n * @param {string} collectionId      -The collection Id\n * @param {string} documentId        -The document Id\\\n * @param {string} attachmentId      -The attachment Id\n * @returns {string}                 -A conflict link in the format of dbs/{0}/colls/{1}/conflicts/{2} \\\n * with {0} being a Uri escaped version of the databaseId, {1} being collectionId and {2} being the conflictId\n * @description Would be used when creating a Conflict in Azure Cosmos DB database service.\n * @ignore\n */\nexport function createAttachmentUri(databaseId, collectionId, documentId, attachmentId) {\n    attachmentId = trimSlashFromLeftAndRight(attachmentId);\n    validateResourceId(attachmentId);\n    return (createDocumentUri(databaseId, collectionId, documentId) +\n        \"/\" +\n        Constants.Path.AttachmentsPathSegment +\n        \"/\" +\n        attachmentId);\n}\n/**\n * @summary Given a database and collection, this creates a partition key ranges link in\\\n *  the Azure Cosmos DB database service.\n * @param {string} databaseId        -The database Id\n * @param {string} collectionId      -The collection Id\n * @returns {string}                 -A partition key ranges link in the format of \\\n * dbs/{0}/colls/{1}/pkranges with {0} being a Uri escaped version of the databaseId and {1} being collectionId\n * @ignore\n */\nexport function createPartitionKeyRangesUri(databaseId, collectionId) {\n    return (createDocumentCollectionUri(databaseId, collectionId) +\n        \"/\" +\n        Constants.Path.PartitionKeyRangesPathSegment);\n}\n//# sourceMappingURL=uriFactory.js.map","import osName from \"os-name\";\nexport function userAgent() {\n    try {\n        return `Node.js/${process.version.substr(1)} (${osName()}; ${process.arch})`;\n    }\n    catch (error) {\n        if (/wmic os get Caption/.test(error.message)) {\n            return \"Windows <version undetectable>\";\n        }\n        throw error;\n    }\n}\n//# sourceMappingURL=user-agent.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { userAgent } from \"../utils/user-agent\";\nimport { Constants } from \"./constants\";\n/**\n * @ignore\n */\nexport function getUserAgent(suffix) {\n    const ua = `${userAgent()} ${Constants.SDKName}/${Constants.SDKVersion}`;\n    if (suffix) {\n        return ua + \" \" + suffix;\n    }\n    return ua;\n}\n//# sourceMappingURL=platform.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { parsePath } from \"./common\";\n/**\n * @ignore\n * @param document\n * @param partitionKeyDefinition\n */\nexport function extractPartitionKey(document, partitionKeyDefinition) {\n    if (partitionKeyDefinition &&\n        partitionKeyDefinition.paths &&\n        partitionKeyDefinition.paths.length > 0) {\n        const partitionKey = [];\n        partitionKeyDefinition.paths.forEach((path) => {\n            const pathParts = parsePath(path);\n            let obj = document;\n            for (const part of pathParts) {\n                if (!(typeof obj === \"object\" && part in obj)) {\n                    obj = undefined;\n                    break;\n                }\n                obj = obj[part];\n            }\n            partitionKey.push(obj);\n        });\n        if (partitionKey.length === 1 && partitionKey[0] === undefined) {\n            return undefinedPartitionKey(partitionKeyDefinition);\n        }\n        return partitionKey;\n    }\n}\n/**\n * @ignore\n * @param partitionKeyDefinition\n */\nexport function undefinedPartitionKey(partitionKeyDefinition) {\n    if (partitionKeyDefinition.systemKey === true) {\n        return [];\n    }\n    else {\n        return [{}];\n    }\n}\n//# sourceMappingURL=extractPartitionKey.js.map","import { __awaiter } from \"tslib\";\nimport { createHmac } from \"crypto\";\nexport function hmac(key, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return createHmac(\"sha256\", Buffer.from(key, \"base64\"))\n            .update(message)\n            .digest(\"base64\");\n    });\n}\n//# sourceMappingURL=hmac.js.map","import { __awaiter } from \"tslib\";\nimport { hmac } from \"./hmac\";\nimport { ResourceType } from \"../common\";\nexport function generateHeaders(masterKey, method, resourceType = ResourceType.none, resourceId = \"\", date = new Date()) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const sig = yield signature(masterKey, method, resourceType, resourceId, date);\n        return {\n            Authorization: sig,\n            \"x-ms-date\": date.toUTCString()\n        };\n    });\n}\nfunction signature(masterKey, method, resourceType, resourceId = \"\", date = new Date()) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const type = \"master\";\n        const version = \"1.0\";\n        const text = method.toLowerCase() +\n            \"\\n\" +\n            resourceType.toLowerCase() +\n            \"\\n\" +\n            resourceId +\n            \"\\n\" +\n            date.toUTCString().toLowerCase() +\n            \"\\n\" +\n            \"\" +\n            \"\\n\";\n        const signed = yield hmac(masterKey, text);\n        return encodeURIComponent(\"type=\" + type + \"&ver=\" + version + \"&sig=\" + signed);\n    });\n}\n//# sourceMappingURL=headers.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { generateHeaders } from \"./utils/headers\";\nimport { Constants, getResourceIdFromPath, ResourceType } from \"./common\";\n/**\n * @ignore\n * @param clientOptions\n * @param verb\n * @param path\n * @param resourceId\n * @param resourceType\n * @param headers\n */\nexport function setAuthorizationHeader(clientOptions, verb, path, resourceId, resourceType, headers) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (clientOptions.permissionFeed) {\n            clientOptions.resourceTokens = {};\n            for (const permission of clientOptions.permissionFeed) {\n                const id = getResourceIdFromPath(permission.resource);\n                if (!id) {\n                    throw new Error(`authorization error: ${id} \\\n                          is an invalid resourceId in permissionFeed`);\n                }\n                clientOptions.resourceTokens[id] = permission._token; // TODO: any\n            }\n        }\n        if (clientOptions.key) {\n            yield setAuthorizationTokenHeaderUsingMasterKey(verb, resourceId, resourceType, headers, clientOptions.key);\n        }\n        else if (clientOptions.resourceTokens) {\n            headers[Constants.HttpHeaders.Authorization] = encodeURIComponent(getAuthorizationTokenUsingResourceTokens(clientOptions.resourceTokens, path, resourceId));\n        }\n        else if (clientOptions.tokenProvider) {\n            headers[Constants.HttpHeaders.Authorization] = encodeURIComponent(yield clientOptions.tokenProvider({ verb, path, resourceId, resourceType, headers }));\n        }\n    });\n}\n/**\n * The default function for setting header token using the masterKey\n * @ignore\n */\nexport function setAuthorizationTokenHeaderUsingMasterKey(verb, resourceId, resourceType, headers, masterKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO This should live in cosmos-sign\n        if (resourceType === ResourceType.offer) {\n            resourceId = resourceId && resourceId.toLowerCase();\n        }\n        headers = Object.assign(headers, yield generateHeaders(masterKey, verb, resourceType, resourceId));\n    });\n}\n/**\n * @ignore\n * @param resourceTokens\n * @param path\n * @param resourceId\n */\n// TODO: Resource tokens\nfunction getAuthorizationTokenUsingResourceTokens(resourceTokens, path, resourceId) {\n    if (resourceTokens && Object.keys(resourceTokens).length > 0) {\n        // For database account access(through getDatabaseAccount API), path and resourceId are \"\",\n        // so in this case we return the first token to be used for creating the auth header as the\n        // service will accept any token in this case\n        if (!path && !resourceId) {\n            return resourceTokens[Object.keys(resourceTokens)[0]];\n        }\n        if (resourceId && resourceTokens[resourceId]) {\n            return resourceTokens[resourceId];\n        }\n        // minimum valid path /dbs\n        if (!path || path.length < 4) {\n            return null;\n        }\n        // remove '/' from left and right of path\n        path = path[0] === \"/\" ? path.substring(1) : path;\n        path = path[path.length - 1] === \"/\" ? path.substring(0, path.length - 1) : path;\n        const pathSegments = (path && path.split(\"/\")) || [];\n        // if it's an incomplete path like /dbs/db1/colls/, start from the paretn resource\n        let index = pathSegments.length % 2 === 0 ? pathSegments.length - 1 : pathSegments.length - 2;\n        for (; index > 0; index -= 2) {\n            const id = decodeURI(pathSegments[index]);\n            if (resourceTokens[id]) {\n                return resourceTokens[id];\n            }\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=auth.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/** Determines the connection behavior of the CosmosClient. Note, we currently only support Gateway Mode. */\nexport var ConnectionMode;\n(function (ConnectionMode) {\n    /** Gateway mode talks to a intermediate gateway which handles the direct communicationi with your individual partitions. */\n    ConnectionMode[ConnectionMode[\"Gateway\"] = 0] = \"Gateway\";\n})(ConnectionMode || (ConnectionMode = {}));\n//# sourceMappingURL=ConnectionMode.js.map","import { ConnectionMode } from \"./ConnectionMode\";\n/**\n * @ignore\n */\nexport const defaultConnectionPolicy = Object.freeze({\n    connectionMode: ConnectionMode.Gateway,\n    requestTimeout: 60000,\n    enableEndpointDiscovery: true,\n    preferredLocations: [],\n    retryOptions: {},\n    useMultipleWriteLocations: true\n});\n//# sourceMappingURL=ConnectionPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Represents the consistency levels supported for Azure Cosmos DB client operations.<br>\n * The requested ConsistencyLevel must match or be weaker than that provisioned for the database account.\n * Consistency levels.\n *\n * Consistency levels by order of strength are Strong, BoundedStaleness, Session, Consistent Prefix, and Eventual.\n *\n * See https://aka.ms/cosmos-consistency for more detailed documentation on Consistency Levels.\n */\nexport var ConsistencyLevel;\n(function (ConsistencyLevel) {\n    /**\n     * Strong Consistency guarantees that read operations always return the value that was last written.\n     */\n    ConsistencyLevel[\"Strong\"] = \"Strong\";\n    /**\n     * Bounded Staleness guarantees that reads are not too out-of-date.\n     * This can be configured based on number of operations (MaxStalenessPrefix) or time (MaxStalenessIntervalInSeconds).\n     */\n    ConsistencyLevel[\"BoundedStaleness\"] = \"BoundedStaleness\";\n    /**\n     * Session Consistency guarantees monotonic reads (you never read old data, then new, then old again),\n     * monotonic writes (writes are ordered) and read your writes (your writes are immediately visible to your reads)\n     * within any single session.\n     */\n    ConsistencyLevel[\"Session\"] = \"Session\";\n    /**\n     * Eventual Consistency guarantees that reads will return a subset of writes.\n     * All writes will be eventually be available for reads.\n     */\n    ConsistencyLevel[\"Eventual\"] = \"Eventual\";\n    /**\n     * ConsistentPrefix Consistency guarantees that reads will return some prefix of all writes with no gaps.\n     * All writes will be eventually be available for reads.`\n     */\n    ConsistencyLevel[\"ConsistentPrefix\"] = \"ConsistentPrefix\";\n})(ConsistencyLevel || (ConsistencyLevel = {}));\n//# sourceMappingURL=ConsistencyLevel.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common\";\nimport { ConsistencyLevel } from \"./ConsistencyLevel\";\n/**\n * Represents a DatabaseAccount in the Azure Cosmos DB database service.\n */\nexport class DatabaseAccount {\n    // TODO: body - any\n    constructor(body, headers) {\n        /** The list of writable locations for a geo-replicated database account. */\n        this.writableLocations = [];\n        /** The list of readable locations for a geo-replicated database account. */\n        this.readableLocations = [];\n        this.databasesLink = \"/dbs/\";\n        this.mediaLink = \"/media/\";\n        this.maxMediaStorageUsageInMB = headers[Constants.HttpHeaders.MaxMediaStorageUsageInMB];\n        this.currentMediaStorageUsageInMB = headers[Constants.HttpHeaders.CurrentMediaStorageUsageInMB];\n        this.consistencyPolicy = body.UserConsistencyPolicy\n            ? body.UserConsistencyPolicy.defaultConsistencyLevel\n            : ConsistencyLevel.Session;\n        if (body[Constants.WritableLocations] && body.id !== \"localhost\") {\n            this.writableLocations = body[Constants.WritableLocations];\n        }\n        if (body[Constants.ReadableLocations] && body.id !== \"localhost\") {\n            this.readableLocations = body[Constants.ReadableLocations];\n        }\n        if (body[Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS]) {\n            this.enableMultipleWritableLocations =\n                body[Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS] === true ||\n                    body[Constants.ENABLE_MULTIPLE_WRITABLE_LOCATIONS] === \"true\";\n        }\n    }\n    /**\n     * The self-link for Databases in the databaseAccount.\n     * @deprecated Use `databasesLink`\n     */\n    get DatabasesLink() {\n        return this.databasesLink;\n    }\n    /**\n     * The self-link for Media in the databaseAccount.\n     * @deprecated Use `mediaLink`\n     */\n    get MediaLink() {\n        return this.mediaLink;\n    }\n    /**\n     * Attachment content (media) storage quota in MBs ( Retrieved from gateway ).\n     * @deprecated use `maxMediaStorageUsageInMB\n     */\n    get MaxMediaStorageUsageInMB() {\n        return this.maxMediaStorageUsageInMB;\n    }\n    /**\n     * Current attachment content (media) usage in MBs (Retrieved from gateway )\n     *\n     * Value is returned from cached information updated periodically and is not guaranteed\n     * to be real time.\n     *\n     * @deprecated use `currentMediaStorageUsageInMB`\n     */\n    get CurrentMediaStorageUsageInMB() {\n        return this.currentMediaStorageUsageInMB;\n    }\n    /**\n     * Gets the UserConsistencyPolicy settings.\n     * @deprecated use `consistencyPolicy`\n     */\n    get ConsistencyPolicy() {\n        return this.consistencyPolicy;\n    }\n}\n//# sourceMappingURL=DatabaseAccount.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/** Defines a target data type of an index path specification in the Azure Cosmos DB service. */\nexport var DataType;\n(function (DataType) {\n    /** Represents a numeric data type. */\n    DataType[\"Number\"] = \"Number\";\n    /** Represents a string data type. */\n    DataType[\"String\"] = \"String\";\n    /** Represents a point data type. */\n    DataType[\"Point\"] = \"Point\";\n    /** Represents a line string data type. */\n    DataType[\"LineString\"] = \"LineString\";\n    /** Represents a polygon data type. */\n    DataType[\"Polygon\"] = \"Polygon\";\n    /** Represents a multi-polygon data type. */\n    DataType[\"MultiPolygon\"] = \"MultiPolygon\";\n})(DataType || (DataType = {}));\n//# sourceMappingURL=DataType.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Specifies the supported indexing modes.\n * @property Consistent\n * @property Lazy\n */\nexport var IndexingMode;\n(function (IndexingMode) {\n    /**\n     * Index is updated synchronously with a create or update operation.\n     *\n     * With consistent indexing, query behavior is the same as the default consistency level for the container.\n     * The index is always kept up to date with the data.\n     */\n    IndexingMode[\"consistent\"] = \"consistent\";\n    /**\n     * Index is updated asynchronously with respect to a create or update operation.\n     *\n     * With lazy indexing, queries are eventually consistent. The index is updated when the container is idle.\n     */\n    IndexingMode[\"lazy\"] = \"lazy\";\n    /** No Index is provided. */\n    IndexingMode[\"none\"] = \"none\";\n})(IndexingMode || (IndexingMode = {}));\n//# sourceMappingURL=IndexingMode.js.map","/* The target data type of a spatial path */\nexport var SpatialType;\n(function (SpatialType) {\n    SpatialType[\"LineString\"] = \"LineString\";\n    SpatialType[\"MultiPolygon\"] = \"MultiPolygon\";\n    SpatialType[\"Point\"] = \"Point\";\n    SpatialType[\"Polygon\"] = \"Polygon\";\n})(SpatialType || (SpatialType = {}));\n//# sourceMappingURL=IndexingPolicy.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Specifies the supported Index types.\n */\nexport var IndexKind;\n(function (IndexKind) {\n    /**\n     * This is supplied for a path which requires sorting.\n     */\n    IndexKind[\"Range\"] = \"Range\";\n    /**\n     * This is supplied for a path which requires geospatial indexing.\n     */\n    IndexKind[\"Spatial\"] = \"Spatial\";\n})(IndexKind || (IndexKind = {}));\n//# sourceMappingURL=IndexKind.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Enum for permission mode values.\n */\nexport var PermissionMode;\n(function (PermissionMode) {\n    /** Permission not valid. */\n    PermissionMode[\"None\"] = \"none\";\n    /** Permission applicable for read operations only. */\n    PermissionMode[\"Read\"] = \"read\";\n    /** Permission applicable for all operations. */\n    PermissionMode[\"All\"] = \"all\";\n})(PermissionMode || (PermissionMode = {}));\n//# sourceMappingURL=PermissionMode.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Enum for trigger operation values.\n * specifies the operations on which a trigger should be executed.\n */\nexport var TriggerOperation;\n(function (TriggerOperation) {\n    /** All operations. */\n    TriggerOperation[\"All\"] = \"all\";\n    /** Create operations only. */\n    TriggerOperation[\"Create\"] = \"create\";\n    /** Update operations only. */\n    TriggerOperation[\"Update\"] = \"update\";\n    /** Delete operations only. */\n    TriggerOperation[\"Delete\"] = \"delete\";\n    /** Replace operations only. */\n    TriggerOperation[\"Replace\"] = \"replace\";\n})(TriggerOperation || (TriggerOperation = {}));\n//# sourceMappingURL=TriggerOperation.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Enum for trigger type values.\n * Specifies the type of the trigger.\n */\nexport var TriggerType;\n(function (TriggerType) {\n    /** Trigger should be executed before the associated operation(s). */\n    TriggerType[\"Pre\"] = \"pre\";\n    /** Trigger should be executed after the associated operation(s). */\n    TriggerType[\"Post\"] = \"post\";\n})(TriggerType || (TriggerType = {}));\n//# sourceMappingURL=TriggerType.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Enum for udf type values.\n * Specifies the types of user defined functions.\n */\nexport var UserDefinedFunctionType;\n(function (UserDefinedFunctionType) {\n    /** The User Defined Function is written in JavaScript. This is currently the only option. */\n    UserDefinedFunctionType[\"Javascript\"] = \"Javascript\";\n})(UserDefinedFunctionType || (UserDefinedFunctionType = {}));\n//# sourceMappingURL=UserDefinedFunctionType.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common\";\nexport class ResourceResponse {\n    constructor(resource, headers, statusCode, substatus) {\n        this.resource = resource;\n        this.headers = headers;\n        this.statusCode = statusCode;\n        this.substatus = substatus;\n    }\n    get requestCharge() {\n        return Number(this.headers[Constants.HttpHeaders.RequestCharge]) || 0;\n    }\n    get activityId() {\n        return this.headers[Constants.HttpHeaders.ActivityId];\n    }\n    get etag() {\n        return this.headers[Constants.HttpHeaders.ETag];\n    }\n}\n//# sourceMappingURL=ResourceResponse.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common\";\nexport class FeedResponse {\n    constructor(resources, headers, hasMoreResults) {\n        this.resources = resources;\n        this.headers = headers;\n        this.hasMoreResults = hasMoreResults;\n    }\n    get continuation() {\n        return this.continuationToken;\n    }\n    get continuationToken() {\n        return this.headers[Constants.HttpHeaders.Continuation];\n    }\n    get queryMetrics() {\n        return this.headers[Constants.HttpHeaders.QueryMetrics];\n    }\n    get requestCharge() {\n        return this.headers[Constants.HttpHeaders.RequestCharge];\n    }\n    get activityId() {\n        return this.headers[Constants.HttpHeaders.ActivityId];\n    }\n}\n//# sourceMappingURL=FeedResponse.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport class ClientSideMetrics {\n    constructor(requestCharge) {\n        this.requestCharge = requestCharge;\n    }\n    /**\n     * Adds one or more ClientSideMetrics to a copy of this instance and returns the result.\n     */\n    add(...clientSideMetricsArray) {\n        let requestCharge = this.requestCharge;\n        for (const clientSideMetrics of clientSideMetricsArray) {\n            if (clientSideMetrics == null) {\n                throw new Error(\"clientSideMetrics has null or undefined item(s)\");\n            }\n            requestCharge += clientSideMetrics.requestCharge;\n        }\n        return new ClientSideMetrics(requestCharge);\n    }\n    static createFromArray(...clientSideMetricsArray) {\n        if (clientSideMetricsArray == null) {\n            throw new Error(\"clientSideMetricsArray is null or undefined item(s)\");\n        }\n        return this.zero.add(...clientSideMetricsArray);\n    }\n}\nClientSideMetrics.zero = new ClientSideMetrics(0);\n//# sourceMappingURL=clientSideMetrics.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport default {\n    // QueryMetrics\n    RetrievedDocumentCount: \"retrievedDocumentCount\",\n    RetrievedDocumentSize: \"retrievedDocumentSize\",\n    OutputDocumentCount: \"outputDocumentCount\",\n    OutputDocumentSize: \"outputDocumentSize\",\n    IndexHitRatio: \"indexUtilizationRatio\",\n    IndexHitDocumentCount: \"indexHitDocumentCount\",\n    TotalQueryExecutionTimeInMs: \"totalExecutionTimeInMs\",\n    // QueryPreparationTimes\n    QueryCompileTimeInMs: \"queryCompileTimeInMs\",\n    LogicalPlanBuildTimeInMs: \"queryLogicalPlanBuildTimeInMs\",\n    PhysicalPlanBuildTimeInMs: \"queryPhysicalPlanBuildTimeInMs\",\n    QueryOptimizationTimeInMs: \"queryOptimizationTimeInMs\",\n    // QueryTimes\n    IndexLookupTimeInMs: \"indexLookupTimeInMs\",\n    DocumentLoadTimeInMs: \"documentLoadTimeInMs\",\n    VMExecutionTimeInMs: \"VMExecutionTimeInMs\",\n    DocumentWriteTimeInMs: \"writeOutputTimeInMs\",\n    // RuntimeExecutionTimes\n    QueryEngineTimes: \"queryEngineTimes\",\n    SystemFunctionExecuteTimeInMs: \"systemFunctionExecuteTimeInMs\",\n    UserDefinedFunctionExecutionTimeInMs: \"userFunctionExecuteTimeInMs\",\n    // QueryMetrics Text\n    RetrievedDocumentCountText: \"Retrieved Document Count\",\n    RetrievedDocumentSizeText: \"Retrieved Document Size\",\n    OutputDocumentCountText: \"Output Document Count\",\n    OutputDocumentSizeText: \"Output Document Size\",\n    IndexUtilizationText: \"Index Utilization\",\n    TotalQueryExecutionTimeText: \"Total Query Execution Time\",\n    // QueryPreparationTimes Text\n    QueryPreparationTimesText: \"Query Preparation Times\",\n    QueryCompileTimeText: \"Query Compilation Time\",\n    LogicalPlanBuildTimeText: \"Logical Plan Build Time\",\n    PhysicalPlanBuildTimeText: \"Physical Plan Build Time\",\n    QueryOptimizationTimeText: \"Query Optimization Time\",\n    // QueryTimes Text\n    QueryEngineTimesText: \"Query Engine Times\",\n    IndexLookupTimeText: \"Index Lookup Time\",\n    DocumentLoadTimeText: \"Document Load Time\",\n    WriteOutputTimeText: \"Document Write Time\",\n    // RuntimeExecutionTimes Text\n    RuntimeExecutionTimesText: \"Runtime Execution Times\",\n    TotalExecutionTimeText: \"Query Engine Execution Time\",\n    SystemFunctionExecuteTimeText: \"System Function Execution Time\",\n    UserDefinedFunctionExecutionTimeText: \"User-defined Function Execution Time\",\n    // ClientSideQueryMetrics Text\n    ClientSideQueryMetricsText: \"Client Side Metrics\",\n    RetriesText: \"Retry Count\",\n    RequestChargeText: \"Request Charge\",\n    FetchExecutionRangesText: \"Partition Execution Timeline\",\n    SchedulingMetricsText: \"Scheduling Metrics\"\n};\n//# sourceMappingURL=queryMetricsConstants.js.map","// Ported this implementation to javascript:\n// https://referencesource.microsoft.com/#mscorlib/system/timespan.cs,83e476c1ae112117\n/** @hidden */\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nconst ticksPerMillisecond = 10000;\n/** @hidden */\nconst millisecondsPerTick = 1.0 / ticksPerMillisecond;\n/** @hidden */\nconst ticksPerSecond = ticksPerMillisecond * 1000; // 10,000,000\n/** @hidden */\nconst secondsPerTick = 1.0 / ticksPerSecond; // 0.0001\n/** @hidden */\nconst ticksPerMinute = ticksPerSecond * 60; // 600,000,000\n/** @hidden */\nconst minutesPerTick = 1.0 / ticksPerMinute; // 1.6666666666667e-9\n/** @hidden */\nconst ticksPerHour = ticksPerMinute * 60; // 36,000,000,000\n/** @hidden */\nconst hoursPerTick = 1.0 / ticksPerHour; // 2.77777777777777778e-11\n/** @hidden */\nconst ticksPerDay = ticksPerHour * 24; // 864,000,000,000\n/** @hidden */\nconst daysPerTick = 1.0 / ticksPerDay; // 1.1574074074074074074e-12\n/** @hidden */\nconst millisPerSecond = 1000;\n/** @hidden */\nconst millisPerMinute = millisPerSecond * 60; //     60,000\n/** @hidden */\nconst millisPerHour = millisPerMinute * 60; //  3,600,000\n/** @hidden */\nconst millisPerDay = millisPerHour * 24; // 86,400,000\n/** @hidden */\nconst maxMilliSeconds = Number.MAX_SAFE_INTEGER / ticksPerMillisecond;\n/** @hidden */\nconst minMilliSeconds = Number.MIN_SAFE_INTEGER / ticksPerMillisecond;\n/**\n * Represents a time interval.\n *\n * @constructor TimeSpan\n * @param {number} days                 - Number of days.\n * @param {number} hours                - Number of hours.\n * @param {number} minutes              - Number of minutes.\n * @param {number} seconds              - Number of seconds.\n * @param {number} milliseconds         - Number of milliseconds.\n * @ignore\n */\nexport class TimeSpan {\n    constructor(days, hours, minutes, seconds, milliseconds) {\n        // Constructor\n        if (!Number.isInteger(days)) {\n            throw new Error(\"days is not an integer\");\n        }\n        if (!Number.isInteger(hours)) {\n            throw new Error(\"hours is not an integer\");\n        }\n        if (!Number.isInteger(minutes)) {\n            throw new Error(\"minutes is not an integer\");\n        }\n        if (!Number.isInteger(seconds)) {\n            throw new Error(\"seconds is not an integer\");\n        }\n        if (!Number.isInteger(milliseconds)) {\n            throw new Error(\"milliseconds is not an integer\");\n        }\n        const totalMilliSeconds = (days * 3600 * 24 + hours * 3600 + minutes * 60 + seconds) * 1000 + milliseconds;\n        if (totalMilliSeconds > maxMilliSeconds || totalMilliSeconds < minMilliSeconds) {\n            throw new Error(\"Total number of milliseconds was either too large or too small\");\n        }\n        this._ticks = totalMilliSeconds * ticksPerMillisecond;\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the sum of the specified TimeSpan object and this instance.\n     * @param {TimeSpan} ts              - The time interval to add.\n     * @memberof TimeSpan\n     * @instance\n     */\n    add(ts) {\n        if (TimeSpan.additionDoesOverflow(this._ticks, ts._ticks)) {\n            throw new Error(\"Adding the two timestamps causes an overflow.\");\n        }\n        const results = this._ticks + ts._ticks;\n        return TimeSpan.fromTicks(results);\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the difference of the specified TimeSpan object and this instance.\n     * @param {TimeSpan} ts              - The time interval to subtract.\n     * @memberof TimeSpan\n     * @instance\n     */\n    subtract(ts) {\n        if (TimeSpan.subtractionDoesUnderflow(this._ticks, ts._ticks)) {\n            throw new Error(\"Subtracting the two timestamps causes an underflow.\");\n        }\n        const results = this._ticks - ts._ticks;\n        return TimeSpan.fromTicks(results);\n    }\n    /**\n     * Compares this instance to a specified object and returns an integer that indicates whether this\n     * instance is shorter than, equal to, or longer than the specified object.\n     * @param {TimeSpan} value              - The time interval to add.\n     * @memberof TimeSpan\n     * @instance\n     */\n    compareTo(value) {\n        if (value == null) {\n            return 1;\n        }\n        if (!TimeSpan.isTimeSpan(value)) {\n            throw new Error(\"Argument must be a TimeSpan object\");\n        }\n        return TimeSpan.compare(this, value);\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the absolute value of the current TimeSpan object.\n     * @memberof TimeSpan\n     * @instance\n     */\n    duration() {\n        return TimeSpan.fromTicks(this._ticks >= 0 ? this._ticks : -this._ticks);\n    }\n    /**\n     * Returns a value indicating whether this instance is equal to a specified object.\n     * @memberof TimeSpan\n     * @param {TimeSpan} value              - The time interval to check for equality.\n     * @instance\n     */\n    equals(value) {\n        if (TimeSpan.isTimeSpan(value)) {\n            return this._ticks === value._ticks;\n        }\n        return false;\n    }\n    /**\n     * Returns a new TimeSpan object whose value is the negated value of this instance.\n     * @memberof TimeSpan\n     * @param {TimeSpan} value              - The time interval to check for equality.\n     * @instance\n     */\n    negate() {\n        return TimeSpan.fromTicks(-this._ticks);\n    }\n    days() {\n        return Math.floor(this._ticks / ticksPerDay);\n    }\n    hours() {\n        return Math.floor(this._ticks / ticksPerHour);\n    }\n    milliseconds() {\n        return Math.floor(this._ticks / ticksPerMillisecond);\n    }\n    seconds() {\n        return Math.floor(this._ticks / ticksPerSecond);\n    }\n    ticks() {\n        return this._ticks;\n    }\n    totalDays() {\n        return this._ticks * daysPerTick;\n    }\n    totalHours() {\n        return this._ticks * hoursPerTick;\n    }\n    totalMilliseconds() {\n        return this._ticks * millisecondsPerTick;\n    }\n    totalMinutes() {\n        return this._ticks * minutesPerTick;\n    }\n    totalSeconds() {\n        return this._ticks * secondsPerTick;\n    }\n    static fromTicks(value) {\n        const timeSpan = new TimeSpan(0, 0, 0, 0, 0);\n        timeSpan._ticks = value;\n        return timeSpan;\n    }\n    static isTimeSpan(timespan) {\n        return timespan._ticks;\n    }\n    static additionDoesOverflow(a, b) {\n        const c = a + b;\n        return a !== c - b || b !== c - a;\n    }\n    static subtractionDoesUnderflow(a, b) {\n        const c = a - b;\n        return a !== c + b || b !== a - c;\n    }\n    static compare(t1, t2) {\n        if (t1._ticks > t2._ticks) {\n            return 1;\n        }\n        if (t1._ticks < t2._ticks) {\n            return -1;\n        }\n        return 0;\n    }\n    static interval(value, scale) {\n        if (isNaN(value)) {\n            throw new Error(\"value must be a number\");\n        }\n        const milliseconds = value * scale;\n        if (milliseconds > maxMilliSeconds || milliseconds < minMilliSeconds) {\n            throw new Error(\"timespan too long\");\n        }\n        return TimeSpan.fromTicks(Math.floor(milliseconds * ticksPerMillisecond));\n    }\n    static fromMilliseconds(value) {\n        return TimeSpan.interval(value, 1);\n    }\n    static fromSeconds(value) {\n        return TimeSpan.interval(value, millisPerSecond);\n    }\n    static fromMinutes(value) {\n        return TimeSpan.interval(value, millisPerMinute);\n    }\n    static fromHours(value) {\n        return TimeSpan.interval(value, millisPerHour);\n    }\n    static fromDays(value) {\n        return TimeSpan.interval(value, millisPerDay);\n    }\n}\nTimeSpan.zero = new TimeSpan(0, 0, 0, 0, 0);\nTimeSpan.maxValue = TimeSpan.fromTicks(Number.MAX_SAFE_INTEGER);\nTimeSpan.minValue = TimeSpan.fromTicks(Number.MIN_SAFE_INTEGER);\n//# sourceMappingURL=timeSpan.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { TimeSpan } from \"./timeSpan\";\n/**\n * @ignore\n * @param delimitedString\n */\nexport function parseDelimitedString(delimitedString) {\n    if (delimitedString == null) {\n        throw new Error(\"delimitedString is null or undefined\");\n    }\n    const metrics = {};\n    const headerAttributes = delimitedString.split(\";\");\n    for (const attribute of headerAttributes) {\n        const attributeKeyValue = attribute.split(\"=\");\n        if (attributeKeyValue.length !== 2) {\n            throw new Error(\"recieved a malformed delimited string\");\n        }\n        const attributeKey = attributeKeyValue[0];\n        const attributeValue = parseFloat(attributeKeyValue[1]);\n        metrics[attributeKey] = attributeValue;\n    }\n    return metrics;\n}\n/**\n * @ignore\n * @param metrics\n * @param key\n */\nexport function timeSpanFromMetrics(metrics /* TODO: any */, key) {\n    if (key in metrics) {\n        return TimeSpan.fromMilliseconds(metrics[key]);\n    }\n    return TimeSpan.zero;\n}\n/**\n * @ignore\n * @param input\n */\nexport function isNumeric(input) {\n    return !isNaN(parseFloat(input)) && isFinite(input);\n}\n//# sourceMappingURL=queryMetricsUtils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport QueryMetricsConstants from \"./queryMetricsConstants\";\nimport { parseDelimitedString, timeSpanFromMetrics } from \"./queryMetricsUtils\";\nimport { TimeSpan } from \"./timeSpan\";\nexport class QueryPreparationTimes {\n    constructor(queryCompilationTime, logicalPlanBuildTime, physicalPlanBuildTime, queryOptimizationTime) {\n        this.queryCompilationTime = queryCompilationTime;\n        this.logicalPlanBuildTime = logicalPlanBuildTime;\n        this.physicalPlanBuildTime = physicalPlanBuildTime;\n        this.queryOptimizationTime = queryOptimizationTime;\n    }\n    /**\n     * returns a new QueryPreparationTimes instance that is the addition of this and the arguments.\n     */\n    add(...queryPreparationTimesArray) {\n        let queryCompilationTime = this.queryCompilationTime;\n        let logicalPlanBuildTime = this.logicalPlanBuildTime;\n        let physicalPlanBuildTime = this.physicalPlanBuildTime;\n        let queryOptimizationTime = this.queryOptimizationTime;\n        for (const queryPreparationTimes of queryPreparationTimesArray) {\n            if (queryPreparationTimes == null) {\n                throw new Error(\"queryPreparationTimesArray has null or undefined item(s)\");\n            }\n            queryCompilationTime = queryCompilationTime.add(queryPreparationTimes.queryCompilationTime);\n            logicalPlanBuildTime = logicalPlanBuildTime.add(queryPreparationTimes.logicalPlanBuildTime);\n            physicalPlanBuildTime = physicalPlanBuildTime.add(queryPreparationTimes.physicalPlanBuildTime);\n            queryOptimizationTime = queryOptimizationTime.add(queryPreparationTimes.queryOptimizationTime);\n        }\n        return new QueryPreparationTimes(queryCompilationTime, logicalPlanBuildTime, physicalPlanBuildTime, queryOptimizationTime);\n    }\n    /**\n     * Output the QueryPreparationTimes as a delimited string.\n     */\n    toDelimitedString() {\n        return (`${QueryMetricsConstants.QueryCompileTimeInMs}=${this.queryCompilationTime.totalMilliseconds()};` +\n            `${QueryMetricsConstants.LogicalPlanBuildTimeInMs}=${this.logicalPlanBuildTime.totalMilliseconds()};` +\n            `${QueryMetricsConstants.PhysicalPlanBuildTimeInMs}=${this.physicalPlanBuildTime.totalMilliseconds()};` +\n            `${QueryMetricsConstants.QueryOptimizationTimeInMs}=${this.queryOptimizationTime.totalMilliseconds()}`);\n    }\n    /**\n     * Returns a new instance of the QueryPreparationTimes class that is the\n     * aggregation of an array of QueryPreparationTimes.\n     * @memberof QueryMetrics\n     * @instance\n     */\n    static createFromArray(queryPreparationTimesArray) {\n        if (queryPreparationTimesArray == null) {\n            throw new Error(\"queryPreparationTimesArray is null or undefined item(s)\");\n        }\n        return QueryPreparationTimes.zero.add(...queryPreparationTimesArray);\n    }\n    /**\n     * Returns a new instance of the QueryPreparationTimes class this is deserialized from a delimited string.\n     * @memberof QueryMetrics\n     * @instance\n     */\n    static createFromDelimitedString(delimitedString) {\n        const metrics = parseDelimitedString(delimitedString);\n        return new QueryPreparationTimes(timeSpanFromMetrics(metrics, QueryMetricsConstants.QueryCompileTimeInMs), timeSpanFromMetrics(metrics, QueryMetricsConstants.LogicalPlanBuildTimeInMs), timeSpanFromMetrics(metrics, QueryMetricsConstants.PhysicalPlanBuildTimeInMs), timeSpanFromMetrics(metrics, QueryMetricsConstants.QueryOptimizationTimeInMs));\n    }\n}\nQueryPreparationTimes.zero = new QueryPreparationTimes(TimeSpan.zero, TimeSpan.zero, TimeSpan.zero, TimeSpan.zero);\n//# sourceMappingURL=queryPreparationTime.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport QueryMetricsConstants from \"./queryMetricsConstants\";\nimport { parseDelimitedString, timeSpanFromMetrics } from \"./queryMetricsUtils\";\nimport { TimeSpan } from \"./timeSpan\";\nexport class RuntimeExecutionTimes {\n    constructor(queryEngineExecutionTime, systemFunctionExecutionTime, userDefinedFunctionExecutionTime) {\n        this.queryEngineExecutionTime = queryEngineExecutionTime;\n        this.systemFunctionExecutionTime = systemFunctionExecutionTime;\n        this.userDefinedFunctionExecutionTime = userDefinedFunctionExecutionTime;\n    }\n    /**\n     * returns a new RuntimeExecutionTimes instance that is the addition of this and the arguments.\n     */\n    add(...runtimeExecutionTimesArray) {\n        let queryEngineExecutionTime = this.queryEngineExecutionTime;\n        let systemFunctionExecutionTime = this.systemFunctionExecutionTime;\n        let userDefinedFunctionExecutionTime = this.userDefinedFunctionExecutionTime;\n        for (const runtimeExecutionTimes of runtimeExecutionTimesArray) {\n            if (runtimeExecutionTimes == null) {\n                throw new Error(\"runtimeExecutionTimes has null or undefined item(s)\");\n            }\n            queryEngineExecutionTime = queryEngineExecutionTime.add(runtimeExecutionTimes.queryEngineExecutionTime);\n            systemFunctionExecutionTime = systemFunctionExecutionTime.add(runtimeExecutionTimes.systemFunctionExecutionTime);\n            userDefinedFunctionExecutionTime = userDefinedFunctionExecutionTime.add(runtimeExecutionTimes.userDefinedFunctionExecutionTime);\n        }\n        return new RuntimeExecutionTimes(queryEngineExecutionTime, systemFunctionExecutionTime, userDefinedFunctionExecutionTime);\n    }\n    /**\n     * Output the RuntimeExecutionTimes as a delimited string.\n     */\n    toDelimitedString() {\n        // tslint:disable-next-line:max-line-length\n        return (`${QueryMetricsConstants.SystemFunctionExecuteTimeInMs}=${this.systemFunctionExecutionTime.totalMilliseconds()};` +\n            // tslint:disable-next-line:max-line-length\n            `${QueryMetricsConstants.UserDefinedFunctionExecutionTimeInMs}=${this.userDefinedFunctionExecutionTime.totalMilliseconds()}`);\n    }\n    /**\n     * Returns a new instance of the RuntimeExecutionTimes class that is\n     *  the aggregation of an array of RuntimeExecutionTimes.\n     */\n    static createFromArray(runtimeExecutionTimesArray) {\n        if (runtimeExecutionTimesArray == null) {\n            throw new Error(\"runtimeExecutionTimesArray is null or undefined item(s)\");\n        }\n        return RuntimeExecutionTimes.zero.add(...runtimeExecutionTimesArray);\n    }\n    /**\n     * Returns a new instance of the RuntimeExecutionTimes class this is deserialized from a delimited string.\n     */\n    static createFromDelimitedString(delimitedString) {\n        const metrics = parseDelimitedString(delimitedString);\n        const vmExecutionTime = timeSpanFromMetrics(metrics, QueryMetricsConstants.VMExecutionTimeInMs);\n        const indexLookupTime = timeSpanFromMetrics(metrics, QueryMetricsConstants.IndexLookupTimeInMs);\n        const documentLoadTime = timeSpanFromMetrics(metrics, QueryMetricsConstants.DocumentLoadTimeInMs);\n        const documentWriteTime = timeSpanFromMetrics(metrics, QueryMetricsConstants.DocumentWriteTimeInMs);\n        let queryEngineExecutionTime = TimeSpan.zero;\n        queryEngineExecutionTime = queryEngineExecutionTime.add(vmExecutionTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(indexLookupTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(documentLoadTime);\n        queryEngineExecutionTime = queryEngineExecutionTime.subtract(documentWriteTime);\n        return new RuntimeExecutionTimes(queryEngineExecutionTime, timeSpanFromMetrics(metrics, QueryMetricsConstants.SystemFunctionExecuteTimeInMs), timeSpanFromMetrics(metrics, QueryMetricsConstants.UserDefinedFunctionExecutionTimeInMs));\n    }\n}\nRuntimeExecutionTimes.zero = new RuntimeExecutionTimes(TimeSpan.zero, TimeSpan.zero, TimeSpan.zero);\n//# sourceMappingURL=runtimeExecutionTimes.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { ClientSideMetrics } from \"./clientSideMetrics\";\nimport QueryMetricsConstants from \"./queryMetricsConstants\";\nimport { parseDelimitedString, timeSpanFromMetrics } from \"./queryMetricsUtils\";\nimport { QueryPreparationTimes } from \"./queryPreparationTime\";\nimport { RuntimeExecutionTimes } from \"./runtimeExecutionTimes\";\nimport { TimeSpan } from \"./timeSpan\";\nexport class QueryMetrics {\n    constructor(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitDocumentCount, totalQueryExecutionTime, queryPreparationTimes, indexLookupTime, documentLoadTime, vmExecutionTime, runtimeExecutionTimes, documentWriteTime, clientSideMetrics) {\n        this.retrievedDocumentCount = retrievedDocumentCount;\n        this.retrievedDocumentSize = retrievedDocumentSize;\n        this.outputDocumentCount = outputDocumentCount;\n        this.outputDocumentSize = outputDocumentSize;\n        this.indexHitDocumentCount = indexHitDocumentCount;\n        this.totalQueryExecutionTime = totalQueryExecutionTime;\n        this.queryPreparationTimes = queryPreparationTimes;\n        this.indexLookupTime = indexLookupTime;\n        this.documentLoadTime = documentLoadTime;\n        this.vmExecutionTime = vmExecutionTime;\n        this.runtimeExecutionTimes = runtimeExecutionTimes;\n        this.documentWriteTime = documentWriteTime;\n        this.clientSideMetrics = clientSideMetrics;\n    }\n    /**\n     * Gets the IndexHitRatio\n     * @memberof QueryMetrics\n     * @instance\n     * @ignore\n     */\n    get indexHitRatio() {\n        return this.retrievedDocumentCount === 0\n            ? 1\n            : this.indexHitDocumentCount / this.retrievedDocumentCount;\n    }\n    /**\n     * returns a new QueryMetrics instance that is the addition of this and the arguments.\n     */\n    add(queryMetricsArray) {\n        let retrievedDocumentCount = 0;\n        let retrievedDocumentSize = 0;\n        let outputDocumentCount = 0;\n        let outputDocumentSize = 0;\n        let indexHitDocumentCount = 0;\n        let totalQueryExecutionTime = TimeSpan.zero;\n        const queryPreparationTimesArray = [];\n        let indexLookupTime = TimeSpan.zero;\n        let documentLoadTime = TimeSpan.zero;\n        let vmExecutionTime = TimeSpan.zero;\n        const runtimeExecutionTimesArray = [];\n        let documentWriteTime = TimeSpan.zero;\n        const clientSideQueryMetricsArray = [];\n        queryMetricsArray.push(this);\n        for (const queryMetrics of queryMetricsArray) {\n            if (queryMetrics) {\n                retrievedDocumentCount += queryMetrics.retrievedDocumentCount;\n                retrievedDocumentSize += queryMetrics.retrievedDocumentSize;\n                outputDocumentCount += queryMetrics.outputDocumentCount;\n                outputDocumentSize += queryMetrics.outputDocumentSize;\n                indexHitDocumentCount += queryMetrics.indexHitDocumentCount;\n                totalQueryExecutionTime = totalQueryExecutionTime.add(queryMetrics.totalQueryExecutionTime);\n                queryPreparationTimesArray.push(queryMetrics.queryPreparationTimes);\n                indexLookupTime = indexLookupTime.add(queryMetrics.indexLookupTime);\n                documentLoadTime = documentLoadTime.add(queryMetrics.documentLoadTime);\n                vmExecutionTime = vmExecutionTime.add(queryMetrics.vmExecutionTime);\n                runtimeExecutionTimesArray.push(queryMetrics.runtimeExecutionTimes);\n                documentWriteTime = documentWriteTime.add(queryMetrics.documentWriteTime);\n                clientSideQueryMetricsArray.push(queryMetrics.clientSideMetrics);\n            }\n        }\n        return new QueryMetrics(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitDocumentCount, totalQueryExecutionTime, QueryPreparationTimes.createFromArray(queryPreparationTimesArray), indexLookupTime, documentLoadTime, vmExecutionTime, RuntimeExecutionTimes.createFromArray(runtimeExecutionTimesArray), documentWriteTime, ClientSideMetrics.createFromArray(...clientSideQueryMetricsArray));\n    }\n    /**\n     * Output the QueryMetrics as a delimited string.\n     * @memberof QueryMetrics\n     * @instance\n     * @ignore\n     */\n    toDelimitedString() {\n        return (QueryMetricsConstants.RetrievedDocumentCount +\n            \"=\" +\n            this.retrievedDocumentCount +\n            \";\" +\n            QueryMetricsConstants.RetrievedDocumentSize +\n            \"=\" +\n            this.retrievedDocumentSize +\n            \";\" +\n            QueryMetricsConstants.OutputDocumentCount +\n            \"=\" +\n            this.outputDocumentCount +\n            \";\" +\n            QueryMetricsConstants.OutputDocumentSize +\n            \"=\" +\n            this.outputDocumentSize +\n            \";\" +\n            QueryMetricsConstants.IndexHitRatio +\n            \"=\" +\n            this.indexHitRatio +\n            \";\" +\n            QueryMetricsConstants.TotalQueryExecutionTimeInMs +\n            \"=\" +\n            this.totalQueryExecutionTime.totalMilliseconds() +\n            \";\" +\n            this.queryPreparationTimes.toDelimitedString() +\n            \";\" +\n            QueryMetricsConstants.IndexLookupTimeInMs +\n            \"=\" +\n            this.indexLookupTime.totalMilliseconds() +\n            \";\" +\n            QueryMetricsConstants.DocumentLoadTimeInMs +\n            \"=\" +\n            this.documentLoadTime.totalMilliseconds() +\n            \";\" +\n            QueryMetricsConstants.VMExecutionTimeInMs +\n            \"=\" +\n            this.vmExecutionTime.totalMilliseconds() +\n            \";\" +\n            this.runtimeExecutionTimes.toDelimitedString() +\n            \";\" +\n            QueryMetricsConstants.DocumentWriteTimeInMs +\n            \"=\" +\n            this.documentWriteTime.totalMilliseconds());\n    }\n    /**\n     * Returns a new instance of the QueryMetrics class that is the aggregation of an array of query metrics.\n     * @memberof QueryMetrics\n     * @instance\n     */\n    static createFromArray(queryMetricsArray) {\n        if (!queryMetricsArray) {\n            throw new Error(\"queryMetricsArray is null or undefined item(s)\");\n        }\n        return QueryMetrics.zero.add(queryMetricsArray);\n    }\n    /**\n     * Returns a new instance of the QueryMetrics class this is deserialized from a delimited string.\n     * @memberof QueryMetrics\n     * @instance\n     */\n    static createFromDelimitedString(delimitedString, clientSideMetrics) {\n        const metrics = parseDelimitedString(delimitedString);\n        const indexHitRatio = metrics[QueryMetricsConstants.IndexHitRatio] || 0;\n        const retrievedDocumentCount = metrics[QueryMetricsConstants.RetrievedDocumentCount] || 0;\n        const indexHitCount = indexHitRatio * retrievedDocumentCount;\n        const outputDocumentCount = metrics[QueryMetricsConstants.OutputDocumentCount] || 0;\n        const outputDocumentSize = metrics[QueryMetricsConstants.OutputDocumentSize] || 0;\n        const retrievedDocumentSize = metrics[QueryMetricsConstants.RetrievedDocumentSize] || 0;\n        const totalQueryExecutionTime = timeSpanFromMetrics(metrics, QueryMetricsConstants.TotalQueryExecutionTimeInMs);\n        return new QueryMetrics(retrievedDocumentCount, retrievedDocumentSize, outputDocumentCount, outputDocumentSize, indexHitCount, totalQueryExecutionTime, QueryPreparationTimes.createFromDelimitedString(delimitedString), timeSpanFromMetrics(metrics, QueryMetricsConstants.IndexLookupTimeInMs), timeSpanFromMetrics(metrics, QueryMetricsConstants.DocumentLoadTimeInMs), timeSpanFromMetrics(metrics, QueryMetricsConstants.VMExecutionTimeInMs), RuntimeExecutionTimes.createFromDelimitedString(delimitedString), timeSpanFromMetrics(metrics, QueryMetricsConstants.DocumentWriteTimeInMs), clientSideMetrics || ClientSideMetrics.zero);\n    }\n}\nQueryMetrics.zero = new QueryMetrics(0, 0, 0, 0, 0, TimeSpan.zero, QueryPreparationTimes.zero, TimeSpan.zero, TimeSpan.zero, TimeSpan.zero, RuntimeExecutionTimes.zero, TimeSpan.zero, ClientSideMetrics.zero);\n//# sourceMappingURL=queryMetrics.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common\";\nimport { QueryMetrics } from \"../queryMetrics/queryMetrics\";\n/** @hidden */\n// TODO: docs\nexport function getRequestChargeIfAny(headers) {\n    if (typeof headers === \"number\") {\n        return headers;\n    }\n    else if (typeof headers === \"string\") {\n        return parseFloat(headers);\n    }\n    if (headers) {\n        const rc = headers[Constants.HttpHeaders.RequestCharge];\n        if (rc) {\n            return parseFloat(rc);\n        }\n        else {\n            return 0;\n        }\n    }\n    else {\n        return 0;\n    }\n}\n/**\n * @ignore\n */\nexport function getInitialHeader() {\n    const headers = {};\n    headers[Constants.HttpHeaders.RequestCharge] = 0;\n    headers[Constants.HttpHeaders.QueryMetrics] = {};\n    return headers;\n}\n/**\n * @ignore\n * @param headers\n * @param toBeMergedHeaders\n */\n// TODO: The name of this method isn't very accurate to what it does\nexport function mergeHeaders(headers, toBeMergedHeaders) {\n    if (headers[Constants.HttpHeaders.RequestCharge] === undefined) {\n        headers[Constants.HttpHeaders.RequestCharge] = 0;\n    }\n    if (headers[Constants.HttpHeaders.QueryMetrics] === undefined) {\n        headers[Constants.HttpHeaders.QueryMetrics] = QueryMetrics.zero;\n    }\n    if (!toBeMergedHeaders) {\n        return;\n    }\n    headers[Constants.HttpHeaders.RequestCharge] += getRequestChargeIfAny(toBeMergedHeaders);\n    if (toBeMergedHeaders[Constants.HttpHeaders.IsRUPerMinuteUsed]) {\n        headers[Constants.HttpHeaders.IsRUPerMinuteUsed] =\n            toBeMergedHeaders[Constants.HttpHeaders.IsRUPerMinuteUsed];\n    }\n    if (Constants.HttpHeaders.QueryMetrics in toBeMergedHeaders) {\n        const headerQueryMetrics = headers[Constants.HttpHeaders.QueryMetrics];\n        const toBeMergedHeaderQueryMetrics = toBeMergedHeaders[Constants.HttpHeaders.QueryMetrics];\n        for (const partitionId in toBeMergedHeaderQueryMetrics) {\n            if (partitionId in headerQueryMetrics) {\n                const combinedQueryMetrics = headerQueryMetrics[partitionId].add([\n                    toBeMergedHeaderQueryMetrics[partitionId]\n                ]);\n                headerQueryMetrics[partitionId] = combinedQueryMetrics;\n            }\n            else {\n                headerQueryMetrics[partitionId] = toBeMergedHeaderQueryMetrics[partitionId];\n            }\n        }\n    }\n}\n//# sourceMappingURL=headerUtils.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport debugLib from \"debug\";\n/** @hidden */\nlet cosmosLevelFilter = \"warn|error\";\nif (typeof process !== \"undefined\" && process.env && process.env.COSMOS_LOG_LEVEL) {\n    cosmosLevelFilter = process.env.COSMOS_LOG_LEVEL;\n}\n/** @hidden */\nconst cosmosDebug = debugLib(\"cosmos\");\n/** @hidden */\nconst levelLogger = (namespaceLogger, level) => {\n    return (message) => {\n        if (cosmosLevelFilter.includes(level)) {\n            namespaceLogger(\"[\" + new Date().toISOString() + \"][\" + level + \"]: %o\", message);\n        }\n    };\n};\n/** @hidden */\nexport const logger = (namespace) => {\n    const namespaceLogger = cosmosDebug.extend(namespace);\n    return {\n        silly: levelLogger(namespaceLogger, \"silly\"),\n        debug: levelLogger(namespaceLogger, \"debug\"),\n        info: levelLogger(namespaceLogger, \"info\"),\n        warn: levelLogger(namespaceLogger, \"warn\"),\n        error: levelLogger(namespaceLogger, \"error\")\n    };\n};\n//# sourceMappingURL=logger.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common\";\nimport { logger } from \"../common/logger\";\nimport { ClientSideMetrics, QueryMetrics } from \"../queryMetrics\";\nimport { getInitialHeader } from \"./headerUtils\";\n/** @hidden */\nconst log = logger(\"defaultQueryExecutionContext\");\n/** @hidden */\nvar STATES;\n(function (STATES) {\n    STATES[\"start\"] = \"start\";\n    STATES[\"inProgress\"] = \"inProgress\";\n    STATES[\"ended\"] = \"ended\";\n})(STATES || (STATES = {}));\n/** @hidden */\nexport class DefaultQueryExecutionContext {\n    /**\n     * Provides the basic Query Execution Context.\n     * This wraps the internal logic query execution using provided fetch functions\n     * @constructor DefaultQueryExecutionContext\n     * @param {ClientContext} clientContext          - Is used to read the partitionKeyRanges for split proofing\n     * @param {SqlQuerySpec | string} query          - A SQL query.\n     * @param {FeedOptions} [options]                - Represents the feed options.\n     * @param {callback | callback[]} fetchFunctions - A function to retrieve each page of data.\n     *                          An array of functions may be used to query more than one partition.\n     * @ignore\n     */\n    constructor(options, fetchFunctions) {\n        // TODO: any options\n        this.resources = [];\n        this.currentIndex = 0;\n        this.currentPartitionIndex = 0;\n        this.fetchFunctions = Array.isArray(fetchFunctions) ? fetchFunctions : [fetchFunctions];\n        this.options = options || {};\n        this.continuationToken = this.options.continuationToken || this.options.continuation || null;\n        this.state = DefaultQueryExecutionContext.STATES.start;\n    }\n    get continuation() {\n        return this.continuationToken;\n    }\n    /**\n     * Execute a provided callback on the next element in the execution context.\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     */\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            ++this.currentIndex;\n            const response = yield this.current();\n            return response;\n        });\n    }\n    /**\n     * Retrieve the current element on the execution context.\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     */\n    current() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.currentIndex < this.resources.length) {\n                return {\n                    result: this.resources[this.currentIndex],\n                    headers: getInitialHeader()\n                };\n            }\n            if (this._canFetchMore()) {\n                const { result: resources, headers } = yield this.fetchMore();\n                this.resources = resources;\n                if (this.resources.length === 0) {\n                    if (!this.continuationToken && this.currentPartitionIndex >= this.fetchFunctions.length) {\n                        this.state = DefaultQueryExecutionContext.STATES.ended;\n                        return { result: undefined, headers };\n                    }\n                    else {\n                        return this.current();\n                    }\n                }\n                return { result: this.resources[this.currentIndex], headers };\n            }\n            else {\n                this.state = DefaultQueryExecutionContext.STATES.ended;\n                return { result: undefined, headers: getInitialHeader() };\n            }\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs based on\n     * the value of the continuation token or the elements remaining on the current batch in the execution context.\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the DefaultQueryExecutionContext.\n     */\n    hasMoreResults() {\n        return (this.state === DefaultQueryExecutionContext.STATES.start ||\n            this.continuationToken !== undefined ||\n            this.currentIndex < this.resources.length - 1 ||\n            this.currentPartitionIndex < this.fetchFunctions.length);\n    }\n    /**\n     * Fetches the next batch of the feed and pass them as an array to a callback\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     */\n    /**\n     * Fetches the next batch of the feed and pass them as an array to a callback\n     * @memberof DefaultQueryExecutionContext\n     * @instance\n     */\n    fetchMore() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.currentPartitionIndex >= this.fetchFunctions.length) {\n                return { headers: getInitialHeader(), result: undefined };\n            }\n            // Keep to the original continuation and to restore the value after fetchFunction call\n            const originalContinuation = this.options.continuationToken || this.options.continuation;\n            this.options.continuationToken = this.continuationToken;\n            // Return undefined if there is no more results\n            if (this.currentPartitionIndex >= this.fetchFunctions.length) {\n                return { headers: getInitialHeader(), result: undefined };\n            }\n            let resources;\n            let responseHeaders;\n            try {\n                let p;\n                if (this.nextFetchFunction !== undefined) {\n                    log.debug(\"using prefetch\");\n                    p = this.nextFetchFunction;\n                    this.nextFetchFunction = undefined;\n                }\n                else {\n                    log.debug(\"using fresh fetch\");\n                    p = this.fetchFunctions[this.currentPartitionIndex](this.options);\n                }\n                const response = yield p;\n                resources = response.result;\n                responseHeaders = response.headers;\n                this.continuationToken = responseHeaders[Constants.HttpHeaders.Continuation];\n                if (!this.continuationToken) {\n                    ++this.currentPartitionIndex;\n                }\n                if (this.options && this.options.bufferItems === true) {\n                    const fetchFunction = this.fetchFunctions[this.currentPartitionIndex];\n                    this.nextFetchFunction = fetchFunction\n                        ? fetchFunction(Object.assign(Object.assign({}, this.options), { continuationToken: this.continuationToken }))\n                        : undefined;\n                }\n            }\n            catch (err) {\n                this.state = DefaultQueryExecutionContext.STATES.ended;\n                // return callback(err, undefined, responseHeaders);\n                // TODO: Error and data being returned is an antipattern, this might broken\n                throw err;\n            }\n            this.state = DefaultQueryExecutionContext.STATES.inProgress;\n            this.currentIndex = 0;\n            this.options.continuationToken = originalContinuation;\n            this.options.continuation = originalContinuation;\n            // deserializing query metrics so that we aren't working with delimited strings in the rest of the code base\n            if (Constants.HttpHeaders.QueryMetrics in responseHeaders) {\n                const delimitedString = responseHeaders[Constants.HttpHeaders.QueryMetrics];\n                let queryMetrics = QueryMetrics.createFromDelimitedString(delimitedString);\n                // Add the request charge to the query metrics so that we can have per partition request charge.\n                if (Constants.HttpHeaders.RequestCharge in responseHeaders) {\n                    const requestCharge = Number(responseHeaders[Constants.HttpHeaders.RequestCharge]) || 0;\n                    queryMetrics = new QueryMetrics(queryMetrics.retrievedDocumentCount, queryMetrics.retrievedDocumentSize, queryMetrics.outputDocumentCount, queryMetrics.outputDocumentSize, queryMetrics.indexHitDocumentCount, queryMetrics.totalQueryExecutionTime, queryMetrics.queryPreparationTimes, queryMetrics.indexLookupTime, queryMetrics.documentLoadTime, queryMetrics.vmExecutionTime, queryMetrics.runtimeExecutionTimes, queryMetrics.documentWriteTime, new ClientSideMetrics(requestCharge));\n                }\n                // Wraping query metrics in a object where the key is '0' just so single partition\n                // and partition queries have the same response schema\n                responseHeaders[Constants.HttpHeaders.QueryMetrics] = {};\n                responseHeaders[Constants.HttpHeaders.QueryMetrics][\"0\"] = queryMetrics;\n            }\n            return { result: resources, headers: responseHeaders };\n        });\n    }\n    _canFetchMore() {\n        const res = this.state === DefaultQueryExecutionContext.STATES.start ||\n            (this.continuationToken && this.state === DefaultQueryExecutionContext.STATES.inProgress) ||\n            (this.currentPartitionIndex < this.fetchFunctions.length &&\n                this.state === DefaultQueryExecutionContext.STATES.inProgress);\n        return res;\n    }\n}\nDefaultQueryExecutionContext.STATES = STATES;\n//# sourceMappingURL=defaultQueryExecutionContext.js.map","/** @hidden */\nexport class AverageAggregator {\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof AverageAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        if (other == null || other.sum == null) {\n            return;\n        }\n        if (this.sum == null) {\n            this.sum = 0.0;\n            this.count = 0;\n        }\n        this.sum += other.sum;\n        this.count += other.count;\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof AverageAggregator\n     * @instance\n     */\n    getResult() {\n        if (this.sum == null || this.count <= 0) {\n            return undefined;\n        }\n        return this.sum / this.count;\n    }\n}\n//# sourceMappingURL=AverageAggregator.js.map","/** @hidden */\nexport class CountAggregator {\n    /**\n     * Represents an aggregator for COUNT operator.\n     * @constructor CountAggregator\n     * @ignore\n     */\n    constructor() {\n        this.value = 0;\n    }\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof CountAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        this.value += other;\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof CountAggregator\n     * @instance\n     */\n    getResult() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=CountAggregator.js.map","// TODO: this smells funny\n/** @hidden */\nconst TYPEORDCOMPARATOR = Object.freeze({\n    NoValue: {\n        ord: 0\n    },\n    undefined: {\n        ord: 1\n    },\n    boolean: {\n        ord: 2,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        }\n    },\n    number: {\n        ord: 4,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        }\n    },\n    string: {\n        ord: 5,\n        compFunc: (a, b) => {\n            return a === b ? 0 : a > b ? 1 : -1;\n        }\n    }\n});\n/** @hidden */\nexport class OrderByDocumentProducerComparator {\n    constructor(sortOrder) {\n        this.sortOrder = sortOrder;\n    } // TODO: This should be an enum\n    targetPartitionKeyRangeDocProdComparator(docProd1, docProd2) {\n        const a = docProd1.getTargetParitionKeyRange()[\"minInclusive\"];\n        const b = docProd2.getTargetParitionKeyRange()[\"minInclusive\"];\n        return a === b ? 0 : a > b ? 1 : -1;\n    }\n    compare(docProd1, docProd2) {\n        // Need to check for split, since we don't want to dereference \"item\" of undefined / exception\n        if (docProd1.gotSplit()) {\n            return -1;\n        }\n        if (docProd2.gotSplit()) {\n            return 1;\n        }\n        const orderByItemsRes1 = this.getOrderByItems(docProd1.peekBufferedItems()[0]);\n        const orderByItemsRes2 = this.getOrderByItems(docProd2.peekBufferedItems()[0]);\n        // validate order by items and types\n        // TODO: once V1 order by on different types is fixed this need to change\n        this.validateOrderByItems(orderByItemsRes1, orderByItemsRes2);\n        // no async call in the for loop\n        for (let i = 0; i < orderByItemsRes1.length; i++) {\n            // compares the orderby items one by one\n            const compRes = this.compareOrderByItem(orderByItemsRes1[i], orderByItemsRes2[i]);\n            if (compRes !== 0) {\n                if (this.sortOrder[i] === \"Ascending\") {\n                    return compRes;\n                }\n                else if (this.sortOrder[i] === \"Descending\") {\n                    return -compRes;\n                }\n            }\n        }\n        return this.targetPartitionKeyRangeDocProdComparator(docProd1, docProd2);\n    }\n    // TODO: This smells funny\n    compareValue(item1, type1, item2, type2) {\n        if (type1 === \"object\" || type2 === \"object\") {\n            throw new Error(\"Tried to compare an object type\");\n        }\n        const type1Ord = TYPEORDCOMPARATOR[type1].ord;\n        const type2Ord = TYPEORDCOMPARATOR[type2].ord;\n        const typeCmp = type1Ord - type2Ord;\n        if (typeCmp !== 0) {\n            // if the types are different, use type ordinal\n            return typeCmp;\n        }\n        // both are of the same type\n        if (type1Ord === TYPEORDCOMPARATOR[\"undefined\"].ord ||\n            type1Ord === TYPEORDCOMPARATOR[\"NoValue\"].ord) {\n            // if both types are undefined or Null they are equal\n            return 0;\n        }\n        const compFunc = TYPEORDCOMPARATOR[type1].compFunc;\n        if (typeof compFunc === \"undefined\") {\n            throw new Error(\"Cannot find the comparison function\");\n        }\n        // same type and type is defined compare the items\n        return compFunc(item1, item2);\n    }\n    compareOrderByItem(orderByItem1, orderByItem2) {\n        const type1 = this.getType(orderByItem1);\n        const type2 = this.getType(orderByItem2);\n        return this.compareValue(orderByItem1[\"item\"], type1, orderByItem2[\"item\"], type2);\n    }\n    validateOrderByItems(res1, res2) {\n        if (res1.length !== res2.length) {\n            throw new Error(`Expected ${res1.length}, but got ${res2.length}.`);\n        }\n        if (res1.length !== this.sortOrder.length) {\n            throw new Error(\"orderByItems cannot have a different size than sort orders.\");\n        }\n        for (let i = 0; i < this.sortOrder.length; i++) {\n            const type1 = this.getType(res1[i]);\n            const type2 = this.getType(res2[i]);\n            if (type1 !== type2) {\n                throw new Error(`Expected ${type1}, but got ${type2}. Cannot execute cross partition order-by queries on mixed types. Consider filtering your query using IS_STRING or IS_NUMBER to get around this exception.`);\n            }\n        }\n    }\n    getType(orderByItem) {\n        // TODO: any item?\n        if (orderByItem === undefined || orderByItem.item === undefined) {\n            return \"NoValue\";\n        }\n        const type = typeof orderByItem.item;\n        if (TYPEORDCOMPARATOR[type] === undefined) {\n            throw new Error(`unrecognizable type ${type}`);\n        }\n        return type;\n    }\n    getOrderByItems(res) {\n        // TODO: any res?\n        return res[\"orderByItems\"];\n    }\n}\n//# sourceMappingURL=orderByDocumentProducerComparator.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { OrderByDocumentProducerComparator } from \"../orderByDocumentProducerComparator\";\n/** @hidden */\nexport class MaxAggregator {\n    /**\n     * Represents an aggregator for MAX operator.\n     * @constructor MaxAggregator\n     * @ignore\n     */\n    constructor() {\n        this.value = undefined;\n        this.comparer = new OrderByDocumentProducerComparator([\"Ascending\"]);\n    }\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof MaxAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        if (this.value === undefined) {\n            this.value = other.max;\n        }\n        else if (this.comparer.compareValue(other.max, typeof other.max, this.value, typeof this.value) > 0) {\n            this.value = other.max;\n        }\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof MaxAggregator\n     * @instance\n     */\n    getResult() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=MaxAggregator.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { OrderByDocumentProducerComparator } from \"../orderByDocumentProducerComparator\";\n/** @hidden */\nexport class MinAggregator {\n    /**\n     * Represents an aggregator for MIN operator.\n     * @constructor MinAggregator\n     * @ignore\n     */\n    constructor() {\n        this.value = undefined;\n        this.comparer = new OrderByDocumentProducerComparator([\"Ascending\"]);\n    }\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof MinAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        if (this.value === undefined) {\n            // || typeof this.value === \"object\"\n            this.value = other.min;\n        }\n        else {\n            const otherType = other.min === null ? \"NoValue\" : typeof other.min; // || typeof other === \"object\"\n            const thisType = this.value === null ? \"NoValue\" : typeof this.value;\n            if (this.comparer.compareValue(other.min, otherType, this.value, thisType) < 0) {\n                this.value = other.min;\n            }\n        }\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof MinAggregator\n     * @instance\n     */\n    getResult() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=MinAggregator.js.map","/** @hidden */\nexport class SumAggregator {\n    /**\n     * Add the provided item to aggregation result.\n     * @memberof SumAggregator\n     * @instance\n     * @param other\n     */\n    aggregate(other) {\n        if (other === undefined) {\n            return;\n        }\n        if (this.sum === undefined) {\n            this.sum = other;\n        }\n        else {\n            this.sum += other;\n        }\n    }\n    /**\n     * Get the aggregation result.\n     * @memberof SumAggregator\n     * @instance\n     */\n    getResult() {\n        return this.sum;\n    }\n}\n//# sourceMappingURL=SumAggregator.js.map","/** @hidden */\nexport class StaticValueAggregator {\n    aggregate(other) {\n        if (this.value === undefined) {\n            this.value = other;\n        }\n    }\n    getResult() {\n        return this.value;\n    }\n}\n//# sourceMappingURL=StaticValueAggregator.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { AverageAggregator } from \"./AverageAggregator\";\nimport { CountAggregator } from \"./CountAggregator\";\nimport { MaxAggregator } from \"./MaxAggregator\";\nimport { MinAggregator } from \"./MinAggregator\";\nimport { SumAggregator } from \"./SumAggregator\";\nimport { StaticValueAggregator } from \"./StaticValueAggregator\";\nexport function createAggregator(aggregateType) {\n    switch (aggregateType) {\n        case \"Average\":\n            return new AverageAggregator();\n        case \"Count\":\n            return new CountAggregator();\n        case \"Max\":\n            return new MaxAggregator();\n        case \"Min\":\n            return new MinAggregator();\n        case \"Sum\":\n            return new SumAggregator();\n        default:\n            return new StaticValueAggregator();\n    }\n}\nexport { AverageAggregator, CountAggregator, MaxAggregator, MinAggregator, SumAggregator };\n//# sourceMappingURL=index.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/** @hidden */\nexport var FetchResultType;\n(function (FetchResultType) {\n    FetchResultType[FetchResultType[\"Done\"] = 0] = \"Done\";\n    FetchResultType[FetchResultType[\"Exception\"] = 1] = \"Exception\";\n    FetchResultType[FetchResultType[\"Result\"] = 2] = \"Result\";\n})(FetchResultType || (FetchResultType = {}));\n/** @hidden */\nexport class FetchResult {\n    /**\n     * Wraps fetch results for the document producer.\n     * This allows the document producer to buffer exceptions so that actual results don't get flushed during splits.\n     * @constructor DocumentProducer\n     * @param {object} feedReponse                  - The response the document producer got back on a successful fetch\n     * @param {object} error                        - The exception meant to be buffered on an unsuccessful fetch\n     * @ignore\n     */\n    constructor(feedResponse, error) {\n        // TODO: feedResponse/error\n        if (feedResponse) {\n            this.feedResponse = feedResponse;\n            this.fetchResultType = FetchResultType.Result;\n        }\n        else {\n            this.error = error;\n            this.fetchResultType = FetchResultType.Exception;\n        }\n    }\n}\n//# sourceMappingURL=FetchResult.js.map","import { __awaiter } from \"tslib\";\nimport { Constants, getIdFromLink, getPathFromLink, ResourceType, StatusCodes, SubStatusCodes } from \"../common\";\nimport { DefaultQueryExecutionContext } from \"./defaultQueryExecutionContext\";\nimport { FetchResult, FetchResultType } from \"./FetchResult\";\nimport { getInitialHeader, mergeHeaders } from \"./headerUtils\";\n/** @hidden */\nexport class DocumentProducer {\n    /**\n     * Provides the Target Partition Range Query Execution Context.\n     * @constructor DocumentProducer\n     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n     * @param {String} collectionLink                - Represents collection link\n     * @param {SqlQuerySpec | string} query          - A SQL query.\n     * @param {object} targetPartitionKeyRange       - Query Target Partition key Range\n     * @ignore\n     */\n    constructor(clientContext, collectionLink, query, targetPartitionKeyRange, // TODO: any partition key range\n    options) {\n        this.clientContext = clientContext;\n        this.generation = 0;\n        this.fetchFunction = (options) => __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.collectionLink, ResourceType.item);\n            const id = getIdFromLink(this.collectionLink);\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.item,\n                resourceId: id,\n                resultFn: (result) => result.Documents,\n                query: this.query,\n                options,\n                partitionKeyRangeId: this.targetPartitionKeyRange[\"id\"]\n            });\n        });\n        // TODO: any options\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.targetPartitionKeyRange = targetPartitionKeyRange;\n        this.fetchResults = [];\n        this.allFetched = false;\n        this.err = undefined;\n        this.previousContinuationToken = undefined;\n        this.continuationToken = undefined;\n        this.respHeaders = getInitialHeader();\n        // tslint:disable-next-line:no-shadowed-variable\n        this.internalExecutionContext = new DefaultQueryExecutionContext(options, this.fetchFunction);\n    }\n    /**\n     * Synchronously gives the contiguous buffered results (stops at the first non result) if any\n     * @returns {Object}       - buffered current items if any\n     * @ignore\n     */\n    peekBufferedItems() {\n        const bufferedResults = [];\n        for (let i = 0, done = false; i < this.fetchResults.length && !done; i++) {\n            const fetchResult = this.fetchResults[i];\n            switch (fetchResult.fetchResultType) {\n                case FetchResultType.Done:\n                    done = true;\n                    break;\n                case FetchResultType.Exception:\n                    done = true;\n                    break;\n                case FetchResultType.Result:\n                    bufferedResults.push(fetchResult.feedResponse);\n                    break;\n            }\n        }\n        return bufferedResults;\n    }\n    hasMoreResults() {\n        return this.internalExecutionContext.hasMoreResults() || this.fetchResults.length !== 0;\n    }\n    gotSplit() {\n        const fetchResult = this.fetchResults[0];\n        if (fetchResult.fetchResultType === FetchResultType.Exception) {\n            if (DocumentProducer._needPartitionKeyRangeCacheRefresh(fetchResult.error)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    _getAndResetActiveResponseHeaders() {\n        const ret = this.respHeaders;\n        this.respHeaders = getInitialHeader();\n        return ret;\n    }\n    _updateStates(err, allFetched) {\n        // TODO: any Error\n        if (err) {\n            this.err = err;\n            return;\n        }\n        if (allFetched) {\n            this.allFetched = true;\n        }\n        if (this.internalExecutionContext.continuationToken === this.continuationToken) {\n            // nothing changed\n            return;\n        }\n        this.previousContinuationToken = this.continuationToken;\n        this.continuationToken = this.internalExecutionContext.continuationToken;\n    }\n    static _needPartitionKeyRangeCacheRefresh(error) {\n        // TODO: error\n        return (error.code === StatusCodes.Gone &&\n            \"substatus\" in error &&\n            error[\"substatus\"] === SubStatusCodes.PartitionKeyRangeGone);\n    }\n    /**\n     * Fetches and bufferes the next page of results and executes the given callback\n     * @memberof DocumentProducer\n     * @instance\n     */\n    bufferMore() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.err) {\n                throw this.err;\n            }\n            try {\n                const { result: resources, headers: headerResponse } = yield this.internalExecutionContext.fetchMore();\n                ++this.generation;\n                this._updateStates(undefined, resources === undefined);\n                if (resources !== undefined) {\n                    // some more results\n                    resources.forEach((element) => {\n                        // TODO: resources any\n                        this.fetchResults.push(new FetchResult(element, undefined));\n                    });\n                }\n                // need to modify the header response so that the query metrics are per partition\n                if (headerResponse != null && Constants.HttpHeaders.QueryMetrics in headerResponse) {\n                    // \"0\" is the default partition before one is actually assigned.\n                    const queryMetrics = headerResponse[Constants.HttpHeaders.QueryMetrics][\"0\"];\n                    // Wraping query metrics in a object where the keys are the partition key range.\n                    headerResponse[Constants.HttpHeaders.QueryMetrics] = {};\n                    headerResponse[Constants.HttpHeaders.QueryMetrics][this.targetPartitionKeyRange.id] = queryMetrics;\n                }\n                return { result: resources, headers: headerResponse };\n            }\n            catch (err) {\n                // TODO: any error\n                if (DocumentProducer._needPartitionKeyRangeCacheRefresh(err)) {\n                    // Split just happend\n                    // Buffer the error so the execution context can still get the feedResponses in the itemBuffer\n                    const bufferedError = new FetchResult(undefined, err);\n                    this.fetchResults.push(bufferedError);\n                    // Putting a dummy result so that the rest of code flows\n                    return { result: [bufferedError], headers: err.headers };\n                }\n                else {\n                    this._updateStates(err, err.resources === undefined);\n                    throw err;\n                }\n            }\n        });\n    }\n    /**\n     * Synchronously gives the bufferend current item if any\n     * @returns {Object}       - buffered current item if any\n     * @ignore\n     */\n    getTargetParitionKeyRange() {\n        return this.targetPartitionKeyRange;\n    }\n    /**\n     * Execute a provided function on the next element in the DocumentProducer.\n     * @memberof DocumentProducer\n     * @instance\n     * @param {callback} callback - Function to execute for each element. the function \\\n     * takes two parameters error, element.\n     */\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.err) {\n                this._updateStates(this.err, undefined);\n                throw this.err;\n            }\n            try {\n                const { result, headers } = yield this.current();\n                const fetchResult = this.fetchResults.shift();\n                this._updateStates(undefined, result === undefined);\n                if (fetchResult.feedResponse !== result) {\n                    throw new Error(`Expected ${fetchResult.feedResponse} to equal ${result}`);\n                }\n                switch (fetchResult.fetchResultType) {\n                    case FetchResultType.Done:\n                        return { result: undefined, headers };\n                    case FetchResultType.Exception:\n                        fetchResult.error.headers = headers;\n                        throw fetchResult.error;\n                    case FetchResultType.Result:\n                        return { result: fetchResult.feedResponse, headers };\n                }\n            }\n            catch (err) {\n                this._updateStates(err, err.item === undefined);\n                throw err;\n            }\n        });\n    }\n    /**\n     * Retrieve the current element on the DocumentProducer.\n     * @memberof DocumentProducer\n     * @instance\n     * @param {callback} callback - Function to execute for the current element. \\\n     * the function takes two parameters error, element.\n     */\n    current() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // If something is buffered just give that\n            if (this.fetchResults.length > 0) {\n                const fetchResult = this.fetchResults[0];\n                // Need to unwrap fetch results\n                switch (fetchResult.fetchResultType) {\n                    case FetchResultType.Done:\n                        return {\n                            result: undefined,\n                            headers: this._getAndResetActiveResponseHeaders()\n                        };\n                    case FetchResultType.Exception:\n                        fetchResult.error.headers = this._getAndResetActiveResponseHeaders();\n                        throw fetchResult.error;\n                    case FetchResultType.Result:\n                        return {\n                            result: fetchResult.feedResponse,\n                            headers: this._getAndResetActiveResponseHeaders()\n                        };\n                }\n            }\n            // If there isn't anymore items left to fetch then let the user know.\n            if (this.allFetched) {\n                return {\n                    result: undefined,\n                    headers: this._getAndResetActiveResponseHeaders()\n                };\n            }\n            // If there are no more bufferd items and there are still items to be fetched then buffer more\n            const { result, headers } = yield this.bufferMore();\n            mergeHeaders(this.respHeaders, headers);\n            if (result === undefined) {\n                return { result: undefined, headers: this.respHeaders };\n            }\n            return this.current();\n        });\n    }\n}\n//# sourceMappingURL=documentProducer.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common\";\n/** @hidden */\nexport class QueryRange {\n    /**\n     * Represents a QueryRange.\n     * @constructor QueryRange\n     * @param {string} rangeMin                - min\n     * @param {string} rangeMin                - max\n     * @param {boolean} isMinInclusive         - isMinInclusive\n     * @param {boolean} isMaxInclusive         - isMaxInclusive\n     * @ignore\n     */\n    constructor(rangeMin, rangeMax, isMinInclusive, isMaxInclusive) {\n        this.min = rangeMin;\n        this.max = rangeMax;\n        this.isMinInclusive = isMinInclusive;\n        this.isMaxInclusive = isMaxInclusive;\n    }\n    overlaps(other) {\n        // tslint:disable-next-line:no-this-assignment\n        const range1 = this;\n        const range2 = other;\n        if (range1 === undefined || range2 === undefined) {\n            return false;\n        }\n        if (range1.isEmpty() || range2.isEmpty()) {\n            return false;\n        }\n        if (range1.min <= range2.max || range2.min <= range1.max) {\n            if ((range1.min === range2.max && !(range1.isMinInclusive && range2.isMaxInclusive)) ||\n                (range2.min === range1.max && !(range2.isMinInclusive && range1.isMaxInclusive))) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    }\n    isFullRange() {\n        return (this.min === Constants.EffectiveParitionKeyConstants.MinimumInclusiveEffectivePartitionKey &&\n            this.max === Constants.EffectiveParitionKeyConstants.MaximumExclusiveEffectivePartitionKey &&\n            this.isMinInclusive === true &&\n            this.isMaxInclusive === false);\n    }\n    isEmpty() {\n        return !(this.isMinInclusive && this.isMaxInclusive) && this.min === this.max;\n    }\n    /**\n     * Parse a QueryRange from a partitionKeyRange\n     * @returns QueryRange\n     * @ignore\n     */\n    static parsePartitionKeyRange(partitionKeyRange) {\n        // TODO: paritionkeyrange\n        return new QueryRange(partitionKeyRange[Constants.PartitionKeyRange.MinInclusive], partitionKeyRange[Constants.PartitionKeyRange.MaxExclusive], true, false);\n    }\n    /**\n     * Parse a QueryRange from a dictionary\n     * @returns QueryRange\n     * @ignore\n     */\n    static parseFromDict(queryRangeDict) {\n        // TODO: queryRangeDictionary\n        return new QueryRange(queryRangeDict.min, queryRangeDict.max, queryRangeDict.isMinInclusive, queryRangeDict.isMaxInclusive);\n    }\n}\n//# sourceMappingURL=QueryRange.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common\";\nimport { QueryRange } from \"./QueryRange\";\n/** @hidden */\nexport class InMemoryCollectionRoutingMap {\n    /**\n     * Represents a InMemoryCollectionRoutingMap Object,\n     * Stores partition key ranges in an efficient way with some additional information and provides\n     * convenience methods for working with set of ranges.\n     */\n    constructor(orderedPartitionKeyRanges, orderedPartitionInfo) {\n        this.orderedPartitionKeyRanges = orderedPartitionKeyRanges;\n        this.orderedRanges = orderedPartitionKeyRanges.map((pkr) => {\n            return new QueryRange(pkr[Constants.PartitionKeyRange.MinInclusive], pkr[Constants.PartitionKeyRange.MaxExclusive], true, false);\n        });\n        this.orderedPartitionInfo = orderedPartitionInfo;\n    }\n    getOrderedParitionKeyRanges() {\n        return this.orderedPartitionKeyRanges;\n    }\n    getOverlappingRanges(providedQueryRanges) {\n        // TODO This code has all kinds of smells. Multiple iterations and sorts just to grab overlapping ranges\n        // stfaul attempted to bring it down to one for-loop and failed\n        const pqr = Array.isArray(providedQueryRanges)\n            ? providedQueryRanges\n            : [providedQueryRanges];\n        const minToPartitionRange = {}; // TODO: any\n        // this for loop doesn't invoke any async callback\n        for (const queryRange of pqr) {\n            if (queryRange.isEmpty()) {\n                continue;\n            }\n            if (queryRange.isFullRange()) {\n                return this.orderedPartitionKeyRanges;\n            }\n            const minIndex = this.orderedRanges.findIndex((range) => {\n                if (queryRange.min > range.min && queryRange.min < range.max) {\n                    return true;\n                }\n                if (queryRange.min === range.min) {\n                    return true;\n                }\n                if (queryRange.min === range.max) {\n                    return true;\n                }\n            });\n            if (minIndex < 0) {\n                throw new Error(\"error in collection routing map, queried value is less than the start range.\");\n            }\n            // Start at the end and work backwards\n            let maxIndex;\n            for (let i = this.orderedRanges.length - 1; i >= 0; i--) {\n                const range = this.orderedRanges[i];\n                if (queryRange.max > range.min && queryRange.max < range.max) {\n                    maxIndex = i;\n                    break;\n                }\n                if (queryRange.max === range.min) {\n                    maxIndex = i;\n                    break;\n                }\n                if (queryRange.max === range.max) {\n                    maxIndex = i;\n                    break;\n                }\n            }\n            if (maxIndex > this.orderedRanges.length) {\n                throw new Error(\"error in collection routing map, queried value is greater than the end range.\");\n            }\n            for (let j = minIndex; j < maxIndex + 1; j++) {\n                if (queryRange.overlaps(this.orderedRanges[j])) {\n                    minToPartitionRange[this.orderedPartitionKeyRanges[j][Constants.PartitionKeyRange.MinInclusive]] = this.orderedPartitionKeyRanges[j];\n                }\n            }\n        }\n        const overlappingPartitionKeyRanges = Object.keys(minToPartitionRange).map((k) => minToPartitionRange[k]);\n        return overlappingPartitionKeyRanges.sort((a, b) => {\n            return a[Constants.PartitionKeyRange.MinInclusive].localeCompare(b[Constants.PartitionKeyRange.MinInclusive]);\n        });\n    }\n}\n//# sourceMappingURL=inMemoryCollectionRoutingMap.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common/constants\";\nimport { InMemoryCollectionRoutingMap } from \"./inMemoryCollectionRoutingMap\";\n/**\n * @ignore\n */\nfunction compareRanges(a, b) {\n    const aVal = a[0][Constants.PartitionKeyRange.MinInclusive];\n    const bVal = b[0][Constants.PartitionKeyRange.MinInclusive];\n    if (aVal > bVal) {\n        return 1;\n    }\n    if (aVal < bVal) {\n        return -1;\n    }\n    return 0;\n}\n/** @hidden */\nexport function createCompleteRoutingMap(partitionKeyRangeInfoTuppleList) {\n    const rangeById = {}; // TODO: any\n    const rangeByInfo = {}; // TODO: any\n    let sortedRanges = [];\n    // the for loop doesn't invoke any async callback\n    for (const r of partitionKeyRangeInfoTuppleList) {\n        rangeById[r[0][Constants.PartitionKeyRange.Id]] = r;\n        rangeByInfo[r[1]] = r[0];\n        sortedRanges.push(r);\n    }\n    sortedRanges = sortedRanges.sort(compareRanges);\n    const partitionKeyOrderedRange = sortedRanges.map((r) => r[0]);\n    const orderedPartitionInfo = sortedRanges.map((r) => r[1]);\n    if (!isCompleteSetOfRange(partitionKeyOrderedRange)) {\n        return undefined;\n    }\n    return new InMemoryCollectionRoutingMap(partitionKeyOrderedRange, orderedPartitionInfo);\n}\n/**\n * @ignore\n */\nfunction isCompleteSetOfRange(partitionKeyOrderedRange) {\n    // TODO: any\n    let isComplete = false;\n    if (partitionKeyOrderedRange.length > 0) {\n        const firstRange = partitionKeyOrderedRange[0];\n        const lastRange = partitionKeyOrderedRange[partitionKeyOrderedRange.length - 1];\n        isComplete =\n            firstRange[Constants.PartitionKeyRange.MinInclusive] ===\n                Constants.EffectiveParitionKeyConstants.MinimumInclusiveEffectivePartitionKey;\n        isComplete =\n            isComplete &&\n                lastRange[Constants.PartitionKeyRange.MaxExclusive] ===\n                    Constants.EffectiveParitionKeyConstants.MaximumExclusiveEffectivePartitionKey;\n        for (let i = 1; i < partitionKeyOrderedRange.length; i++) {\n            const previousRange = partitionKeyOrderedRange[i - 1];\n            const currentRange = partitionKeyOrderedRange[i];\n            isComplete =\n                isComplete &&\n                    previousRange[Constants.PartitionKeyRange.MaxExclusive] ===\n                        currentRange[Constants.PartitionKeyRange.MinInclusive];\n            if (!isComplete) {\n                if (previousRange[Constants.PartitionKeyRange.MaxExclusive] >\n                    currentRange[Constants.PartitionKeyRange.MinInclusive]) {\n                    throw Error(\"Ranges overlap\");\n                }\n                break;\n            }\n        }\n    }\n    return isComplete;\n}\n//# sourceMappingURL=CollectionRoutingMapFactory.js.map","import { __awaiter } from \"tslib\";\nimport { getIdFromLink } from \"../common/helper\";\nimport { createCompleteRoutingMap } from \"./CollectionRoutingMapFactory\";\n/** @hidden */\nexport class PartitionKeyRangeCache {\n    constructor(clientContext) {\n        this.clientContext = clientContext;\n        this.collectionRoutingMapByCollectionId = {};\n    }\n    /**\n     * Finds or Instantiates the requested Collection Routing Map\n     * @param {string} collectionLink            - Requested collectionLink\n     * @ignore\n     */\n    onCollectionRoutingMap(collectionLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const collectionId = getIdFromLink(collectionLink);\n            if (this.collectionRoutingMapByCollectionId[collectionId] === undefined) {\n                this.collectionRoutingMapByCollectionId[collectionId] = this.requestCollectionRoutingMap(collectionLink);\n            }\n            return this.collectionRoutingMapByCollectionId[collectionId];\n        });\n    }\n    /**\n     * Given the query ranges and a collection, invokes the callback on the list of overlapping partition key ranges\n     * @param collectionLink\n     * @param queryRange\n     * @ignore\n     */\n    getOverlappingRanges(collectionLink, queryRange) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const crm = yield this.onCollectionRoutingMap(collectionLink);\n            return crm.getOverlappingRanges(queryRange);\n        });\n    }\n    requestCollectionRoutingMap(collectionLink) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { resources } = yield this.clientContext\n                .queryPartitionKeyRanges(collectionLink)\n                .fetchAll();\n            return createCompleteRoutingMap(resources.map((r) => [r, true]));\n        });\n    }\n}\n//# sourceMappingURL=partitionKeyRangeCache.js.map","import { __awaiter } from \"tslib\";\nimport { Constants } from \"../common/constants\";\nimport { PartitionKeyRangeCache } from \"./partitionKeyRangeCache\";\nimport { QueryRange } from \"./QueryRange\";\n/** @hidden */\nexport const PARITIONKEYRANGE = Constants.PartitionKeyRange;\n/** @hidden */\nexport class SmartRoutingMapProvider {\n    constructor(clientContext) {\n        this.partitionKeyRangeCache = new PartitionKeyRangeCache(clientContext);\n    }\n    static _secondRangeIsAfterFirstRange(range1, range2) {\n        if (typeof range1.max === \"undefined\") {\n            throw new Error(\"range1 must have max\");\n        }\n        if (typeof range2.min === \"undefined\") {\n            throw new Error(\"range2 must have min\");\n        }\n        if (range1.max > range2.min) {\n            // r.min < #previous_r.max\n            return false;\n        }\n        else {\n            if (range1.max === range2.min && range1.isMaxInclusive && range2.isMinInclusive) {\n                // the inclusive ending endpoint of previous_r is the same as the inclusive beginning endpoint of r\n                // they share a point\n                return false;\n            }\n            return true;\n        }\n    }\n    static _isSortedAndNonOverlapping(ranges) {\n        for (let idx = 1; idx < ranges.length; idx++) {\n            const previousR = ranges[idx - 1];\n            const r = ranges[idx];\n            if (!this._secondRangeIsAfterFirstRange(previousR, r)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _stringMax(a, b) {\n        return a >= b ? a : b;\n    }\n    static _stringCompare(a, b) {\n        return a === b ? 0 : a > b ? 1 : -1;\n    }\n    static _subtractRange(r, partitionKeyRange) {\n        const left = this._stringMax(partitionKeyRange[PARITIONKEYRANGE.MaxExclusive], r.min);\n        const leftInclusive = this._stringCompare(left, r.min) === 0 ? r.isMinInclusive : false;\n        return new QueryRange(left, r.max, leftInclusive, r.isMaxInclusive);\n    }\n    /**\n     * Given the sorted ranges and a collection, invokes the callback on the list of overlapping partition key ranges\n     * @param {callback} callback - Function execute on the overlapping partition key ranges result,\n     *                              takes two parameters error, partition key ranges\n     * @param collectionLink\n     * @param sortedRanges\n     * @ignore\n     */\n    getOverlappingRanges(collectionLink, sortedRanges) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // validate if the list is non- overlapping and sorted                             TODO: any PartitionKeyRanges\n            if (!SmartRoutingMapProvider._isSortedAndNonOverlapping(sortedRanges)) {\n                throw new Error(\"the list of ranges is not a non-overlapping sorted ranges\");\n            }\n            let partitionKeyRanges = []; // TODO: any ParitionKeyRanges\n            if (sortedRanges.length === 0) {\n                return partitionKeyRanges;\n            }\n            const collectionRoutingMap = yield this.partitionKeyRangeCache.onCollectionRoutingMap(collectionLink);\n            let index = 0;\n            let currentProvidedRange = sortedRanges[index];\n            while (true) {\n                if (currentProvidedRange.isEmpty()) {\n                    // skip and go to the next item\n                    if (++index >= sortedRanges.length) {\n                        return partitionKeyRanges;\n                    }\n                    currentProvidedRange = sortedRanges[index];\n                    continue;\n                }\n                let queryRange;\n                if (partitionKeyRanges.length > 0) {\n                    queryRange = SmartRoutingMapProvider._subtractRange(currentProvidedRange, partitionKeyRanges[partitionKeyRanges.length - 1]);\n                }\n                else {\n                    queryRange = currentProvidedRange;\n                }\n                const overlappingRanges = collectionRoutingMap.getOverlappingRanges(queryRange);\n                if (overlappingRanges.length <= 0) {\n                    throw new Error(`error: returned overlapping ranges for queryRange ${queryRange} is empty`);\n                }\n                partitionKeyRanges = partitionKeyRanges.concat(overlappingRanges);\n                const lastKnownTargetRange = QueryRange.parsePartitionKeyRange(partitionKeyRanges[partitionKeyRanges.length - 1]);\n                if (!lastKnownTargetRange) {\n                    throw new Error(\"expected lastKnowTargetRange to be truthy\");\n                }\n                // the overlapping ranges must contain the requested range\n                if (SmartRoutingMapProvider._stringCompare(currentProvidedRange.max, lastKnownTargetRange.max) >\n                    0) {\n                    throw new Error(`error: returned overlapping ranges ${overlappingRanges} \\\n        does not contain the requested range ${queryRange}`);\n                }\n                // the current range is contained in partitionKeyRanges just move forward\n                if (++index >= sortedRanges.length) {\n                    return partitionKeyRanges;\n                }\n                currentProvidedRange = sortedRanges[index];\n                while (SmartRoutingMapProvider._stringCompare(currentProvidedRange.max, lastKnownTargetRange.max) <= 0) {\n                    // the current range is covered too.just move forward\n                    if (++index >= sortedRanges.length) {\n                        return partitionKeyRanges;\n                    }\n                    currentProvidedRange = sortedRanges[index];\n                }\n            }\n        });\n    }\n}\n//# sourceMappingURL=smartRoutingMapProvider.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport PriorityQueue from \"priorityqueuejs\";\nimport semaphore from \"semaphore\";\nimport { logger } from \"../common/logger\";\nimport { StatusCodes, SubStatusCodes } from \"../common/statusCodes\";\nimport { QueryRange } from \"../routing/QueryRange\";\nimport { SmartRoutingMapProvider } from \"../routing/smartRoutingMapProvider\";\nimport { DocumentProducer } from \"./documentProducer\";\nimport { getInitialHeader, mergeHeaders } from \"./headerUtils\";\n/** @hidden */\nconst log = logger(\"parallelQueryExecutionContextBase\");\n/** @hidden */\nexport var ParallelQueryExecutionContextBaseStates;\n(function (ParallelQueryExecutionContextBaseStates) {\n    ParallelQueryExecutionContextBaseStates[\"started\"] = \"started\";\n    ParallelQueryExecutionContextBaseStates[\"inProgress\"] = \"inProgress\";\n    ParallelQueryExecutionContextBaseStates[\"ended\"] = \"ended\";\n})(ParallelQueryExecutionContextBaseStates || (ParallelQueryExecutionContextBaseStates = {}));\n/** @hidden */\nexport class ParallelQueryExecutionContextBase {\n    /**\n     * Provides the ParallelQueryExecutionContextBase.\n     * This is the base class that ParallelQueryExecutionContext and OrderByQueryExecutionContext will derive from.\n     *\n     * When handling a parallelized query, it instantiates one instance of\n     * DocumentProcuder per target partition key range and aggregates the result of each.\n     *\n     * @constructor ParallelQueryExecutionContext\n     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n     * @param {string} collectionLink                - The Collection Link\n     * @param {FeedOptions} [options]                - Represents the feed options.\n     * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n     * @ignore\n     */\n    constructor(clientContext, collectionLink, query, // TODO: any - It's not SQLQuerySpec\n    options, partitionedQueryExecutionInfo) {\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.err = undefined;\n        this.state = ParallelQueryExecutionContextBase.STATES.started;\n        this.routingProvider = new SmartRoutingMapProvider(this.clientContext);\n        this.sortOrders = this.partitionedQueryExecutionInfo.queryInfo.orderBy;\n        this.requestContinuation = options ? options.continuationToken || options.continuation : null;\n        // response headers of undergoing operation\n        this.respHeaders = getInitialHeader();\n        // Make priority queue for documentProducers\n        // The comparator is supplied by the derived class\n        this.orderByPQ = new PriorityQueue((a, b) => this.documentProducerComparator(b, a));\n        // Creating the documentProducers\n        this.sem = semaphore(1);\n        // Creating callback for semaphore\n        // TODO: Code smell\n        const createDocumentProducersAndFillUpPriorityQueueFunc = () => __awaiter(this, void 0, void 0, function* () {\n            // ensure the lock is released after finishing up\n            try {\n                const targetPartitionRanges = yield this._onTargetPartitionRanges();\n                this.waitingForInternalExecutionContexts = targetPartitionRanges.length;\n                const maxDegreeOfParallelism = options.maxDegreeOfParallelism === undefined || options.maxDegreeOfParallelism < 1\n                    ? targetPartitionRanges.length\n                    : Math.min(options.maxDegreeOfParallelism, targetPartitionRanges.length);\n                log.info(\"Query starting against \" +\n                    targetPartitionRanges.length +\n                    \" ranges with parallelism of \" +\n                    maxDegreeOfParallelism);\n                const parallelismSem = semaphore(maxDegreeOfParallelism);\n                let filteredPartitionKeyRanges = [];\n                // The document producers generated from filteredPartitionKeyRanges\n                const targetPartitionQueryExecutionContextList = [];\n                if (this.requestContinuation) {\n                    throw new Error(\"Continuation tokens are not yet supported for cross partition queries\");\n                }\n                else {\n                    filteredPartitionKeyRanges = targetPartitionRanges;\n                }\n                // Create one documentProducer for each partitionTargetRange\n                filteredPartitionKeyRanges.forEach((partitionTargetRange) => {\n                    // TODO: any partitionTargetRange\n                    // no async callback\n                    targetPartitionQueryExecutionContextList.push(this._createTargetPartitionQueryExecutionContext(partitionTargetRange));\n                });\n                // Fill up our priority queue with documentProducers\n                targetPartitionQueryExecutionContextList.forEach((documentProducer) => {\n                    // has async callback\n                    const throttledFunc = () => __awaiter(this, void 0, void 0, function* () {\n                        try {\n                            const { result: document, headers } = yield documentProducer.current();\n                            this._mergeWithActiveResponseHeaders(headers);\n                            if (document === undefined) {\n                                // no results on this one\n                                return;\n                            }\n                            // if there are matching results in the target ex range add it to the priority queue\n                            try {\n                                this.orderByPQ.enq(documentProducer);\n                            }\n                            catch (e) {\n                                this.err = e;\n                            }\n                        }\n                        catch (err) {\n                            this._mergeWithActiveResponseHeaders(err.headers);\n                            this.err = err;\n                        }\n                        finally {\n                            parallelismSem.leave();\n                            this._decrementInitiationLock();\n                        }\n                    });\n                    parallelismSem.take(throttledFunc);\n                });\n            }\n            catch (err) {\n                this.err = err;\n                // release the lock\n                this.sem.leave();\n                return;\n            }\n        });\n        this.sem.take(createDocumentProducersAndFillUpPriorityQueueFunc);\n    }\n    _decrementInitiationLock() {\n        // decrements waitingForInternalExecutionContexts\n        // if waitingForInternalExecutionContexts reaches 0 releases the semaphore and changes the state\n        this.waitingForInternalExecutionContexts = this.waitingForInternalExecutionContexts - 1;\n        if (this.waitingForInternalExecutionContexts === 0) {\n            this.sem.leave();\n            if (this.orderByPQ.size() === 0) {\n                this.state = ParallelQueryExecutionContextBase.STATES.inProgress;\n            }\n        }\n    }\n    _mergeWithActiveResponseHeaders(headers) {\n        mergeHeaders(this.respHeaders, headers);\n    }\n    _getAndResetActiveResponseHeaders() {\n        const ret = this.respHeaders;\n        this.respHeaders = getInitialHeader();\n        return ret;\n    }\n    _onTargetPartitionRanges() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // invokes the callback when the target partition ranges are ready\n            const parsedRanges = this.partitionedQueryExecutionInfo.queryRanges;\n            const queryRanges = parsedRanges.map((item) => QueryRange.parseFromDict(item));\n            return this.routingProvider.getOverlappingRanges(this.collectionLink, queryRanges);\n        });\n    }\n    /**\n     * Gets the replacement ranges for a partitionkeyrange that has been split\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     */\n    _getReplacementPartitionKeyRanges(documentProducer) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const partitionKeyRange = documentProducer.targetPartitionKeyRange;\n            // Download the new routing map\n            this.routingProvider = new SmartRoutingMapProvider(this.clientContext);\n            // Get the queryRange that relates to this partitionKeyRange\n            const queryRange = QueryRange.parsePartitionKeyRange(partitionKeyRange);\n            return this.routingProvider.getOverlappingRanges(this.collectionLink, [queryRange]);\n        });\n    }\n    // TODO: P0 Code smell - can barely tell what this is doing\n    /**\n     * Removes the current document producer from the priqueue,\n     * replaces that document producer with child document producers,\n     * then reexecutes the originFunction with the corrrected executionContext\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     */\n    _repairExecutionContext(originFunction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: any\n            // Get the replacement ranges\n            // Removing the invalid documentProducer from the orderByPQ\n            const parentDocumentProducer = this.orderByPQ.deq();\n            try {\n                const replacementPartitionKeyRanges = yield this._getReplacementPartitionKeyRanges(parentDocumentProducer);\n                const replacementDocumentProducers = [];\n                // Create the replacement documentProducers\n                replacementPartitionKeyRanges.forEach((partitionKeyRange) => {\n                    // Create replacment document producers with the parent's continuationToken\n                    const replacementDocumentProducer = this._createTargetPartitionQueryExecutionContext(partitionKeyRange, parentDocumentProducer.continuationToken);\n                    replacementDocumentProducers.push(replacementDocumentProducer);\n                });\n                // We need to check if the documentProducers even has anything left to fetch from before enqueing them\n                const checkAndEnqueueDocumentProducer = (documentProducerToCheck, checkNextDocumentProducerCallback) => __awaiter(this, void 0, void 0, function* () {\n                    try {\n                        const { result: afterItem } = yield documentProducerToCheck.current();\n                        if (afterItem === undefined) {\n                            // no more results left in this document producer, so we don't enqueue it\n                        }\n                        else {\n                            // Safe to put document producer back in the queue\n                            this.orderByPQ.enq(documentProducerToCheck);\n                        }\n                        yield checkNextDocumentProducerCallback();\n                    }\n                    catch (err) {\n                        this.err = err;\n                        return;\n                    }\n                });\n                const checkAndEnqueueDocumentProducers = (rdp) => __awaiter(this, void 0, void 0, function* () {\n                    if (rdp.length > 0) {\n                        // We still have a replacementDocumentProducer to check\n                        const replacementDocumentProducer = rdp.shift();\n                        yield checkAndEnqueueDocumentProducer(replacementDocumentProducer, () => __awaiter(this, void 0, void 0, function* () {\n                            yield checkAndEnqueueDocumentProducers(rdp);\n                        }));\n                    }\n                    else {\n                        // reexecutes the originFunction with the corrrected executionContext\n                        return originFunction();\n                    }\n                });\n                // Invoke the recursive function to get the ball rolling\n                yield checkAndEnqueueDocumentProducers(replacementDocumentProducers);\n            }\n            catch (err) {\n                this.err = err;\n                throw err;\n            }\n        });\n    }\n    static _needPartitionKeyRangeCacheRefresh(error) {\n        // TODO: any error\n        return (error.code === StatusCodes.Gone &&\n            \"substatus\" in error &&\n            error[\"substatus\"] === SubStatusCodes.PartitionKeyRangeGone);\n    }\n    /**\n     * Checks to see if the executionContext needs to be repaired.\n     * if so it repairs the execution context and executes the ifCallback,\n     * else it continues with the current execution context and executes the elseCallback\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     */\n    _repairExecutionContextIfNeeded(ifCallback, elseCallback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const documentProducer = this.orderByPQ.peek();\n            // Check if split happened\n            try {\n                yield documentProducer.current();\n                elseCallback();\n            }\n            catch (err) {\n                if (ParallelQueryExecutionContextBase._needPartitionKeyRangeCacheRefresh(err)) {\n                    // Split has happened so we need to repair execution context before continueing\n                    return this._repairExecutionContext(ifCallback);\n                }\n                else {\n                    // Something actually bad happened ...\n                    this.err = err;\n                    throw err;\n                }\n            }\n        });\n    }\n    /**\n     * Execute a provided function on the next element in the ParallelQueryExecutionContextBase.\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     * @param {callback} callback - Function to execute for each element. the function takes two \\\n     * parameters error, element.\n     */\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.err) {\n                // if there is a prior error return error\n                throw this.err;\n            }\n            return new Promise((resolve, reject) => {\n                this.sem.take(() => {\n                    // NOTE: lock must be released before invoking quitting\n                    if (this.err) {\n                        // release the lock before invoking callback\n                        this.sem.leave();\n                        // if there is a prior error return error\n                        this.err.headers = this._getAndResetActiveResponseHeaders();\n                        reject(this.err);\n                        return;\n                    }\n                    if (this.orderByPQ.size() === 0) {\n                        // there is no more results\n                        this.state = ParallelQueryExecutionContextBase.STATES.ended;\n                        // release the lock before invoking callback\n                        this.sem.leave();\n                        return resolve({\n                            result: undefined,\n                            headers: this._getAndResetActiveResponseHeaders()\n                        });\n                    }\n                    const ifCallback = () => {\n                        // Release the semaphore to avoid deadlock\n                        this.sem.leave();\n                        // Reexcute the function\n                        return resolve(this.nextItem());\n                    };\n                    const elseCallback = () => __awaiter(this, void 0, void 0, function* () {\n                        let documentProducer;\n                        try {\n                            documentProducer = this.orderByPQ.deq();\n                        }\n                        catch (e) {\n                            // if comparing elements of the priority queue throws exception\n                            // set that error and return error\n                            this.err = e;\n                            // release the lock before invoking callback\n                            this.sem.leave();\n                            this.err.headers = this._getAndResetActiveResponseHeaders();\n                            reject(this.err);\n                            return;\n                        }\n                        let item;\n                        let headers;\n                        try {\n                            const response = yield documentProducer.nextItem();\n                            item = response.result;\n                            headers = response.headers;\n                            this._mergeWithActiveResponseHeaders(headers);\n                            if (item === undefined) {\n                                // this should never happen\n                                // because the documentProducer already has buffered an item\n                                // assert item !== undefined\n                                this.err = new Error(`Extracted DocumentProducer from the priority queue \\\n                                            doesn't have any buffered item!`);\n                                // release the lock before invoking callback\n                                this.sem.leave();\n                                return resolve({\n                                    result: undefined,\n                                    headers: this._getAndResetActiveResponseHeaders()\n                                });\n                            }\n                        }\n                        catch (err) {\n                            this.err = new Error(`Extracted DocumentProducer from the priority queue fails to get the \\\n                                    buffered item. Due to ${JSON.stringify(err)}`);\n                            this.err.headers = this._getAndResetActiveResponseHeaders();\n                            // release the lock before invoking callback\n                            this.sem.leave();\n                            reject(this.err);\n                            return;\n                        }\n                        // we need to put back the document producer to the queue if it has more elements.\n                        // the lock will be released after we know document producer must be put back in the queue or not\n                        try {\n                            const { result: afterItem, headers: otherHeaders } = yield documentProducer.current();\n                            this._mergeWithActiveResponseHeaders(otherHeaders);\n                            if (afterItem === undefined) {\n                                // no more results is left in this document producer\n                            }\n                            else {\n                                try {\n                                    const headItem = documentProducer.fetchResults[0];\n                                    if (typeof headItem === \"undefined\") {\n                                        throw new Error(\"Extracted DocumentProducer from PQ is invalid state with no result!\");\n                                    }\n                                    this.orderByPQ.enq(documentProducer);\n                                }\n                                catch (e) {\n                                    // if comparing elements in priority queue throws exception\n                                    // set error\n                                    this.err = e;\n                                }\n                            }\n                        }\n                        catch (err) {\n                            if (ParallelQueryExecutionContextBase._needPartitionKeyRangeCacheRefresh(err)) {\n                                // We want the document producer enqueued\n                                // So that later parts of the code can repair the execution context\n                                this.orderByPQ.enq(documentProducer);\n                            }\n                            else {\n                                // Something actually bad happened\n                                this.err = err;\n                                reject(this.err);\n                            }\n                        }\n                        finally {\n                            // release the lock before returning\n                            this.sem.leave();\n                        }\n                        // invoke the callback on the item\n                        return resolve({\n                            result: item,\n                            headers: this._getAndResetActiveResponseHeaders()\n                        });\n                    });\n                    this._repairExecutionContextIfNeeded(ifCallback, elseCallback).catch(reject);\n                });\n            });\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs based on the value of the continuation \\\n     * token or the elements remaining on the current batch in the QueryIterator.\n     * @memberof ParallelQueryExecutionContextBase\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the ParallelQueryExecutionContextBase.\n     */\n    hasMoreResults() {\n        return !(this.state === ParallelQueryExecutionContextBase.STATES.ended || this.err !== undefined);\n    }\n    /**\n     * Creates document producers\n     */\n    _createTargetPartitionQueryExecutionContext(partitionKeyTargetRange, continuationToken) {\n        // TODO: any\n        // creates target partition range Query Execution Context\n        let rewrittenQuery = this.partitionedQueryExecutionInfo.queryInfo.rewrittenQuery;\n        let query = this.query;\n        if (typeof query === \"string\") {\n            query = { query };\n        }\n        const formatPlaceHolder = \"{documentdb-formattableorderbyquery-filter}\";\n        if (rewrittenQuery) {\n            query = JSON.parse(JSON.stringify(query));\n            // We hardcode the formattable filter to true for now\n            rewrittenQuery = rewrittenQuery.replace(formatPlaceHolder, \"true\");\n            query[\"query\"] = rewrittenQuery;\n        }\n        const options = JSON.parse(JSON.stringify(this.options));\n        options.continuationToken = continuationToken;\n        return new DocumentProducer(this.clientContext, this.collectionLink, query, partitionKeyTargetRange, options);\n    }\n}\nParallelQueryExecutionContextBase.STATES = ParallelQueryExecutionContextBaseStates;\n//# sourceMappingURL=parallelQueryExecutionContextBase.js.map","import { ParallelQueryExecutionContextBase } from \"./parallelQueryExecutionContextBase\";\n/** @hidden */\nexport class ParallelQueryExecutionContext extends ParallelQueryExecutionContextBase {\n    /**\n     * Provides the ParallelQueryExecutionContext.\n     * This class is capable of handling parallelized queries and dervives from ParallelQueryExecutionContextBase.\n     *\n     * @constructor ParallelQueryExecutionContext\n     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n     * @param {string} collectionLink                - The Collection Link\n     * @param {FeedOptions} [options]                - Represents the feed options.\n     * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n     * @ignore\n     */\n    constructor(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo) {\n        // Calling on base class constructor\n        super(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo);\n    }\n    // Instance members are inherited\n    // Overriding documentProducerComparator for ParallelQueryExecutionContexts\n    /**\n     * Provides a Comparator for document producers using the min value of the corresponding target partition.\n     * @returns {object}        - Comparator Function\n     * @ignore\n     */\n    documentProducerComparator(docProd1, docProd2) {\n        return docProd1.generation - docProd2.generation;\n    }\n}\n//# sourceMappingURL=parallelQueryExecutionContext.js.map","import { OrderByDocumentProducerComparator } from \"./orderByDocumentProducerComparator\";\nimport { ParallelQueryExecutionContextBase } from \"./parallelQueryExecutionContextBase\";\n/** @hidden */\nexport class OrderByQueryExecutionContext extends ParallelQueryExecutionContextBase {\n    /**\n     * Provides the OrderByQueryExecutionContext.\n     * This class is capable of handling orderby queries and dervives from ParallelQueryExecutionContextBase.\n     *\n     * When handling a parallelized query, it instantiates one instance of\n     * DocumentProcuder per target partition key range and aggregates the result of each.\n     *\n     * @constructor ParallelQueryExecutionContext\n     * @param {ClientContext} clientContext        - The service endpoint to use to create the client.\n     * @param {string} collectionLink                - The Collection Link\n     * @param {FeedOptions} [options]                - Represents the feed options.\n     * @param {object} partitionedQueryExecutionInfo - PartitionedQueryExecutionInfo\n     * @ignore\n     */\n    constructor(clientContext, collectionLink, query, // TODO: any query\n    options, // TODO: any options\n    partitionedQueryExecutionInfo) {\n        // Calling on base class constructor\n        super(clientContext, collectionLink, query, options, partitionedQueryExecutionInfo);\n        this.orderByComparator = new OrderByDocumentProducerComparator(this.sortOrders);\n    }\n    // Instance members are inherited\n    // Overriding documentProducerComparator for OrderByQueryExecutionContexts\n    /**\n     * Provides a Comparator for document producers which respects orderby sort order.\n     * @returns {object}        - Comparator Function\n     * @ignore\n     */\n    documentProducerComparator(docProd1, docProd2) {\n        return this.orderByComparator.compare(docProd1, docProd2);\n    }\n}\n//# sourceMappingURL=orderByQueryExecutionContext.js.map","import { __awaiter } from \"tslib\";\nimport { getInitialHeader, mergeHeaders } from \"../headerUtils\";\n/** @hidden */\nexport class OffsetLimitEndpointComponent {\n    constructor(executionContext, offset, limit) {\n        this.executionContext = executionContext;\n        this.offset = offset;\n        this.limit = limit;\n    }\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const aggregateHeaders = getInitialHeader();\n            while (this.offset > 0) {\n                // Grab next item but ignore the result. We only need the headers\n                const { headers } = yield this.executionContext.nextItem();\n                this.offset--;\n                mergeHeaders(aggregateHeaders, headers);\n            }\n            if (this.limit > 0) {\n                const { result, headers } = yield this.executionContext.nextItem();\n                this.limit--;\n                mergeHeaders(aggregateHeaders, headers);\n                return { result, headers: aggregateHeaders };\n            }\n            // If both limit and offset are 0, return nothing\n            return { result: undefined, headers: getInitialHeader() };\n        });\n    }\n    hasMoreResults() {\n        return (this.offset > 0 || this.limit > 0) && this.executionContext.hasMoreResults();\n    }\n}\n//# sourceMappingURL=OffsetLimitEndpointComponent.js.map","import { __awaiter } from \"tslib\";\n/** @hidden */\nexport class OrderByEndpointComponent {\n    /**\n     * Represents an endpoint in handling an order by query. For each processed orderby \\\n     * result it returns 'payload' item of the result\n     * @constructor OrderByEndpointComponent\n     * @param {object} executionContext              - Underlying Execution Context\n     * @ignore\n     */\n    constructor(executionContext) {\n        this.executionContext = executionContext;\n    }\n    /**\n     * Execute a provided function on the next element in the OrderByEndpointComponent.\n     * @memberof OrderByEndpointComponent\n     * @instance\n     */\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { result: item, headers } = yield this.executionContext.nextItem();\n            return {\n                result: item !== undefined ? item.payload : undefined,\n                headers\n            };\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs.\n     * @memberof OrderByEndpointComponent\n     * @instance\n     * @returns {Boolean} true if there is other elements to process in the OrderByEndpointComponent.\n     */\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n}\n//# sourceMappingURL=OrderByEndpointComponent.js.map","import { __awaiter } from \"tslib\";\nimport { createHash } from \"crypto\";\nexport function digest(str) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const hash = createHash(\"sha256\");\n        hash.update(str, \"utf8\");\n        return hash.digest(\"hex\");\n    });\n}\n//# sourceMappingURL=digest.js.map","import { __awaiter } from \"tslib\";\nimport { digest } from \"./digest\";\nimport stableStringify from \"fast-json-stable-stringify\";\nexport function hashObject(object) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const stringifiedObject = stableStringify(object);\n        return digest(stringifiedObject);\n    });\n}\n//# sourceMappingURL=hashObject.js.map","import { __awaiter } from \"tslib\";\nimport { hashObject } from \"../../utils/hashObject\";\n/** @hidden */\nexport class OrderedDistinctEndpointComponent {\n    constructor(executionContext) {\n        this.executionContext = executionContext;\n    }\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { headers, result } = yield this.executionContext.nextItem();\n            if (result) {\n                const hashedResult = yield hashObject(result);\n                if (hashedResult === this.hashedLastResult) {\n                    return { result: undefined, headers };\n                }\n                this.hashedLastResult = hashedResult;\n            }\n            return { result, headers };\n        });\n    }\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n}\n//# sourceMappingURL=OrderedDistinctEndpointComponent.js.map","import { __awaiter } from \"tslib\";\nimport { hashObject } from \"../../utils/hashObject\";\n/** @hidden */\nexport class UnorderedDistinctEndpointComponent {\n    constructor(executionContext) {\n        this.executionContext = executionContext;\n        this.hashedResults = new Set();\n    }\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { headers, result } = yield this.executionContext.nextItem();\n            if (result) {\n                const hashedResult = yield hashObject(result);\n                if (this.hashedResults.has(hashedResult)) {\n                    return { result: undefined, headers };\n                }\n                this.hashedResults.add(hashedResult);\n            }\n            return { result, headers };\n        });\n    }\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults();\n    }\n}\n//# sourceMappingURL=UnorderedDistinctEndpointComponent.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n// All aggregates are effectively a group by operation\n// The empty group is used for aggregates without a GROUP BY clause\nexport const emptyGroup = \"__empty__\";\n// Newer API versions rewrite the query to return `item2`. It fixes some legacy issues with the original `item` result\n// Aggregator code should use item2 when available\nexport const extractAggregateResult = (payload) => payload.item2 ? payload.item2 : payload.item;\n//# sourceMappingURL=emptyGroup.js.map","import { __awaiter } from \"tslib\";\nimport { hashObject } from \"../../utils/hashObject\";\nimport { createAggregator } from \"../Aggregators\";\nimport { getInitialHeader, mergeHeaders } from \"../headerUtils\";\nimport { emptyGroup, extractAggregateResult } from \"./emptyGroup\";\n/** @hidden */\nexport class GroupByEndpointComponent {\n    constructor(executionContext, queryInfo) {\n        this.executionContext = executionContext;\n        this.queryInfo = queryInfo;\n        this.groupings = new Map();\n        this.aggregateResultArray = [];\n        this.completed = false;\n    }\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // If we have a full result set, begin returning results\n            if (this.aggregateResultArray.length > 0) {\n                return { result: this.aggregateResultArray.pop(), headers: getInitialHeader() };\n            }\n            if (this.completed) {\n                return { result: undefined, headers: getInitialHeader() };\n            }\n            const aggregateHeaders = getInitialHeader();\n            while (this.executionContext.hasMoreResults()) {\n                // Grab the next result\n                const { result, headers } = (yield this.executionContext.nextItem());\n                mergeHeaders(aggregateHeaders, headers);\n                // If it exists, process it via aggregators\n                if (result) {\n                    const group = result.groupByItems ? yield hashObject(result.groupByItems) : emptyGroup;\n                    const aggregators = this.groupings.get(group);\n                    const payload = result.payload;\n                    if (aggregators) {\n                        // Iterator over all results in the payload\n                        Object.keys(payload).map((key) => {\n                            const aggregateResult = extractAggregateResult(payload[key]);\n                            aggregators.get(key).aggregate(aggregateResult);\n                        });\n                    }\n                    else {\n                        // This is the first time we have seen a grouping. Setup the initial result without aggregate values\n                        const grouping = new Map();\n                        this.groupings.set(group, grouping);\n                        // Iterator over all results in the payload\n                        Object.keys(payload).map((key) => {\n                            const aggregateType = this.queryInfo.groupByAliasToAggregateType[key];\n                            // Create a new aggregator for this specific aggregate field\n                            const aggregator = createAggregator(aggregateType);\n                            grouping.set(key, aggregator);\n                            if (aggregateType) {\n                                const aggregateResult = extractAggregateResult(payload[key]);\n                                aggregator.aggregate(aggregateResult);\n                            }\n                            else {\n                                aggregator.aggregate(payload[key]);\n                            }\n                        });\n                    }\n                }\n            }\n            for (const grouping of this.groupings.values()) {\n                const groupResult = {};\n                for (const [aggregateKey, aggregator] of grouping.entries()) {\n                    groupResult[aggregateKey] = aggregator.getResult();\n                }\n                this.aggregateResultArray.push(groupResult);\n            }\n            this.completed = true;\n            return { result: this.aggregateResultArray.pop(), headers: aggregateHeaders };\n        });\n    }\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults() || this.aggregateResultArray.length > 0;\n    }\n}\n//# sourceMappingURL=GroupByEndpointComponent.js.map","import { __awaiter } from \"tslib\";\nimport { hashObject } from \"../../utils/hashObject\";\nimport { createAggregator } from \"../Aggregators\";\nimport { getInitialHeader, mergeHeaders } from \"../headerUtils\";\nimport { emptyGroup, extractAggregateResult } from \"./emptyGroup\";\n/** @hidden */\nexport class GroupByValueEndpointComponent {\n    constructor(executionContext, queryInfo) {\n        this.executionContext = executionContext;\n        this.queryInfo = queryInfo;\n        this.aggregators = new Map();\n        this.aggregateResultArray = [];\n        this.completed = false;\n        // VALUE queries will only every have a single grouping\n        this.aggregateType = this.queryInfo.aggregates[0];\n    }\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Start returning results if we have processed a full results set\n            if (this.aggregateResultArray.length > 0) {\n                return { result: this.aggregateResultArray.pop(), headers: getInitialHeader() };\n            }\n            if (this.completed) {\n                return { result: undefined, headers: getInitialHeader() };\n            }\n            const aggregateHeaders = getInitialHeader();\n            while (this.executionContext.hasMoreResults()) {\n                // Grab the next result\n                const { result, headers } = (yield this.executionContext.nextItem());\n                mergeHeaders(aggregateHeaders, headers);\n                // If it exists, process it via aggregators\n                if (result) {\n                    let grouping = emptyGroup;\n                    let payload = result;\n                    if (result.groupByItems) {\n                        // If the query contains a GROUP BY clause, it will have a payload property and groupByItems\n                        payload = result.payload;\n                        grouping = yield hashObject(result.groupByItems);\n                    }\n                    const aggregator = this.aggregators.get(grouping);\n                    if (!aggregator) {\n                        // This is the first time we have seen a grouping so create a new aggregator\n                        this.aggregators.set(grouping, createAggregator(this.aggregateType));\n                    }\n                    if (this.aggregateType) {\n                        const aggregateResult = extractAggregateResult(payload[0]);\n                        this.aggregators.get(grouping).aggregate(aggregateResult);\n                    }\n                    else {\n                        // Queries with no aggregates pass the payload directly to the aggregator\n                        // Example: SELECT VALUE c.team FROM c GROUP BY c.team\n                        this.aggregators.get(grouping).aggregate(payload);\n                    }\n                }\n            }\n            // It no results are left in the underling execution context, convert our aggregate results to an array\n            for (const aggregator of this.aggregators.values()) {\n                this.aggregateResultArray.push(aggregator.getResult());\n            }\n            this.completed = true;\n            return { result: this.aggregateResultArray.pop(), headers: aggregateHeaders };\n        });\n    }\n    hasMoreResults() {\n        return this.executionContext.hasMoreResults() || this.aggregateResultArray.length > 0;\n    }\n}\n//# sourceMappingURL=GroupByValueEndpointComponent.js.map","import { __awaiter } from \"tslib\";\nimport { OffsetLimitEndpointComponent } from \"./EndpointComponent/OffsetLimitEndpointComponent\";\nimport { OrderByEndpointComponent } from \"./EndpointComponent/OrderByEndpointComponent\";\nimport { OrderedDistinctEndpointComponent } from \"./EndpointComponent/OrderedDistinctEndpointComponent\";\nimport { UnorderedDistinctEndpointComponent } from \"./EndpointComponent/UnorderedDistinctEndpointComponent\";\nimport { GroupByEndpointComponent } from \"./EndpointComponent/GroupByEndpointComponent\";\nimport { getInitialHeader, mergeHeaders } from \"./headerUtils\";\nimport { OrderByQueryExecutionContext } from \"./orderByQueryExecutionContext\";\nimport { ParallelQueryExecutionContext } from \"./parallelQueryExecutionContext\";\nimport { GroupByValueEndpointComponent } from \"./EndpointComponent/GroupByValueEndpointComponent\";\n/** @hidden */\nexport class PipelinedQueryExecutionContext {\n    constructor(clientContext, collectionLink, query, // TODO: any query\n    options, partitionedQueryExecutionInfo) {\n        this.clientContext = clientContext;\n        this.collectionLink = collectionLink;\n        this.query = query;\n        this.options = options;\n        this.partitionedQueryExecutionInfo = partitionedQueryExecutionInfo;\n        this.endpoint = null;\n        this.pageSize = options[\"maxItemCount\"];\n        if (this.pageSize === undefined) {\n            this.pageSize = PipelinedQueryExecutionContext.DEFAULT_PAGE_SIZE;\n        }\n        // Pick between parallel vs order by execution context\n        const sortOrders = partitionedQueryExecutionInfo.queryInfo.orderBy;\n        if (Array.isArray(sortOrders) && sortOrders.length > 0) {\n            // Need to wrap orderby execution context in endpoint component, since the data is nested as a \\\n            //      \"payload\" property.\n            this.endpoint = new OrderByEndpointComponent(new OrderByQueryExecutionContext(this.clientContext, this.collectionLink, this.query, this.options, this.partitionedQueryExecutionInfo));\n        }\n        else {\n            this.endpoint = new ParallelQueryExecutionContext(this.clientContext, this.collectionLink, this.query, this.options, this.partitionedQueryExecutionInfo);\n        }\n        if (Object.keys(partitionedQueryExecutionInfo.queryInfo.groupByAliasToAggregateType).length > 0 ||\n            partitionedQueryExecutionInfo.queryInfo.aggregates.length > 0 ||\n            partitionedQueryExecutionInfo.queryInfo.groupByExpressions.length > 0) {\n            if (partitionedQueryExecutionInfo.queryInfo.hasSelectValue) {\n                this.endpoint = new GroupByValueEndpointComponent(this.endpoint, partitionedQueryExecutionInfo.queryInfo);\n            }\n            else {\n                this.endpoint = new GroupByEndpointComponent(this.endpoint, partitionedQueryExecutionInfo.queryInfo);\n            }\n        }\n        // If top then add that to the pipeline. TOP N is effectively OFFSET 0 LIMIT N\n        const top = partitionedQueryExecutionInfo.queryInfo.top;\n        if (typeof top === \"number\") {\n            this.endpoint = new OffsetLimitEndpointComponent(this.endpoint, 0, top);\n        }\n        // If offset+limit then add that to the pipeline\n        const limit = partitionedQueryExecutionInfo.queryInfo.limit;\n        const offset = partitionedQueryExecutionInfo.queryInfo.offset;\n        if (typeof limit === \"number\" && typeof offset === \"number\") {\n            this.endpoint = new OffsetLimitEndpointComponent(this.endpoint, offset, limit);\n        }\n        // If distinct then add that to the pipeline\n        const distinctType = partitionedQueryExecutionInfo.queryInfo.distinctType;\n        if (distinctType === \"Ordered\") {\n            this.endpoint = new OrderedDistinctEndpointComponent(this.endpoint);\n        }\n        if (distinctType === \"Unordered\") {\n            this.endpoint = new UnorderedDistinctEndpointComponent(this.endpoint);\n        }\n    }\n    nextItem() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.endpoint.nextItem();\n        });\n    }\n    // Removed callback here beacuse it wouldn't have ever worked...\n    hasMoreResults() {\n        return this.endpoint.hasMoreResults();\n    }\n    fetchMore() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // if the wrapped endpoint has different implementation for fetchMore use that\n            // otherwise use the default implementation\n            if (typeof this.endpoint.fetchMore === \"function\") {\n                return this.endpoint.fetchMore();\n            }\n            else {\n                this.fetchBuffer = [];\n                this.fetchMoreRespHeaders = getInitialHeader();\n                return this._fetchMoreImplementation();\n            }\n        });\n    }\n    _fetchMoreImplementation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const { result: item, headers } = yield this.endpoint.nextItem();\n                mergeHeaders(this.fetchMoreRespHeaders, headers);\n                if (item === undefined) {\n                    // no more results\n                    if (this.fetchBuffer.length === 0) {\n                        return {\n                            result: undefined,\n                            headers: this.fetchMoreRespHeaders\n                        };\n                    }\n                    else {\n                        // Just give what we have\n                        const temp = this.fetchBuffer;\n                        this.fetchBuffer = [];\n                        return { result: temp, headers: this.fetchMoreRespHeaders };\n                    }\n                }\n                else {\n                    // append the result\n                    this.fetchBuffer.push(item);\n                    if (this.fetchBuffer.length >= this.pageSize) {\n                        // fetched enough results\n                        const temp = this.fetchBuffer.slice(0, this.pageSize);\n                        this.fetchBuffer = this.fetchBuffer.splice(this.pageSize);\n                        return { result: temp, headers: this.fetchMoreRespHeaders };\n                    }\n                    else {\n                        // recursively fetch more\n                        // TODO: is recursion a good idea?\n                        return this._fetchMoreImplementation();\n                    }\n                }\n            }\n            catch (err) {\n                mergeHeaders(this.fetchMoreRespHeaders, err.headers);\n                err.headers = this.fetchMoreRespHeaders;\n                if (err) {\n                    throw err;\n                }\n            }\n        });\n    }\n}\nPipelinedQueryExecutionContext.DEFAULT_PAGE_SIZE = 10;\n//# sourceMappingURL=pipelinedQueryExecutionContext.js.map","import { __asyncGenerator, __await, __awaiter } from \"tslib\";\nimport { getPathFromLink, ResourceType, StatusCodes } from \"./common\";\nimport { DefaultQueryExecutionContext, getInitialHeader, mergeHeaders, PipelinedQueryExecutionContext } from \"./queryExecutionContext\";\nimport { FeedResponse } from \"./request/FeedResponse\";\n/**\n * Represents a QueryIterator Object, an implementation of feed or query response that enables\n * traversal and iterating over the response\n * in the Azure Cosmos DB database service.\n */\nexport class QueryIterator {\n    /**\n     * @hidden\n     */\n    constructor(clientContext, query, options, fetchFunctions, resourceLink, resourceType) {\n        this.clientContext = clientContext;\n        this.query = query;\n        this.options = options;\n        this.fetchFunctions = fetchFunctions;\n        this.resourceLink = resourceLink;\n        this.resourceType = resourceType;\n        this.query = query;\n        this.fetchFunctions = fetchFunctions;\n        this.options = options || {};\n        this.resourceLink = resourceLink;\n        this.fetchAllLastResHeaders = getInitialHeader();\n        this.reset();\n        this.isInitialized = false;\n    }\n    /**\n     * Gets an async iterator that will yield results until completion.\n     *\n     * NOTE: AsyncIterators are a very new feature and you might need to\n     * use polyfils/etc. in order to use them in your code.\n     *\n     * If you're using TypeScript, you can use the following polyfill as long\n     * as you target ES6 or higher and are running on Node 6 or higher.\n     *\n     * ```typescript\n     * if (!Symbol || !Symbol.asyncIterator) {\n     *   (Symbol as any).asyncIterator = Symbol.for(\"Symbol.asyncIterator\");\n     * }\n     * ```\n     *\n     * @example Iterate over all databases\n     * ```typescript\n     * for await(const {result: db} in client.databases.readAll().getAsyncIterator()) {\n     *   console.log(`Got ${db.id} from AsyncIterator`);\n     * }\n     * ```\n     */\n    getAsyncIterator() {\n        return __asyncGenerator(this, arguments, function* getAsyncIterator_1() {\n            this.reset();\n            this.queryPlanPromise = this.fetchQueryPlan();\n            while (this.queryExecutionContext.hasMoreResults()) {\n                let response;\n                try {\n                    response = yield __await(this.queryExecutionContext.fetchMore());\n                }\n                catch (error) {\n                    if (this.needsQueryPlan(error)) {\n                        yield __await(this.createPipelinedExecutionContext());\n                        try {\n                            response = yield __await(this.queryExecutionContext.fetchMore());\n                        }\n                        catch (error) {\n                            this.handleSplitError(error);\n                        }\n                    }\n                    else {\n                        throw error;\n                    }\n                }\n                const feedResponse = new FeedResponse(response.result, response.headers, this.queryExecutionContext.hasMoreResults());\n                if (response.result !== undefined) {\n                    yield yield __await(feedResponse);\n                }\n            }\n        });\n    }\n    /**\n     * Determine if there are still remaining resources to processs based on the value of the continuation token or the\\\n     * elements remaining on the current batch in the QueryIterator.\n     * @returns {Boolean} true if there is other elements to process in the QueryIterator.\n     */\n    hasMoreResults() {\n        return this.queryExecutionContext.hasMoreResults();\n    }\n    /**\n     * Fetch all pages for the query and return a single FeedResponse.\n     */\n    fetchAll() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.reset();\n            this.fetchAllTempResources = [];\n            let response;\n            try {\n                response = yield this.toArrayImplementation();\n            }\n            catch (error) {\n                this.handleSplitError(error);\n            }\n            return response;\n        });\n    }\n    /**\n     * Retrieve the next batch from the feed.\n     *\n     * This may or may not fetch more pages from the backend depending on your settings\n     * and the type of query. Aggregate queries will generally fetch all backend pages\n     * before returning the first batch of responses.\n     */\n    fetchNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.queryPlanPromise = this.fetchQueryPlan();\n            if (!this.isInitialized) {\n                yield this.init();\n            }\n            let response;\n            try {\n                response = yield this.queryExecutionContext.fetchMore();\n            }\n            catch (error) {\n                if (this.needsQueryPlan(error)) {\n                    yield this.createPipelinedExecutionContext();\n                    try {\n                        response = yield this.queryExecutionContext.fetchMore();\n                    }\n                    catch (error) {\n                        this.handleSplitError(error);\n                    }\n                }\n                else {\n                    throw error;\n                }\n            }\n            return new FeedResponse(response.result, response.headers, this.queryExecutionContext.hasMoreResults());\n        });\n    }\n    /**\n     * Reset the QueryIterator to the beginning and clear all the resources inside it\n     */\n    reset() {\n        this.queryPlanPromise = undefined;\n        this.queryExecutionContext = new DefaultQueryExecutionContext(this.options, this.fetchFunctions);\n    }\n    toArrayImplementation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.queryPlanPromise = this.fetchQueryPlan();\n            if (!this.isInitialized) {\n                yield this.init();\n            }\n            while (this.queryExecutionContext.hasMoreResults()) {\n                let response;\n                try {\n                    response = yield this.queryExecutionContext.nextItem();\n                }\n                catch (error) {\n                    if (this.needsQueryPlan(error)) {\n                        yield this.createPipelinedExecutionContext();\n                        response = yield this.queryExecutionContext.nextItem();\n                    }\n                    else {\n                        throw error;\n                    }\n                }\n                const { result, headers } = response;\n                // concatenate the results and fetch more\n                mergeHeaders(this.fetchAllLastResHeaders, headers);\n                if (result !== undefined) {\n                    this.fetchAllTempResources.push(result);\n                }\n            }\n            return new FeedResponse(this.fetchAllTempResources, this.fetchAllLastResHeaders, this.queryExecutionContext.hasMoreResults());\n        });\n    }\n    createPipelinedExecutionContext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const queryPlanResponse = yield this.queryPlanPromise;\n            // We always coerce queryPlanPromise to resolved. So if it errored, we need to manually inspect the resolved value\n            if (queryPlanResponse instanceof Error) {\n                throw queryPlanResponse;\n            }\n            const queryPlan = queryPlanResponse.result;\n            const queryInfo = queryPlan.queryInfo;\n            if (queryInfo.aggregates.length > 0 && queryInfo.hasSelectValue === false) {\n                throw new Error(\"Aggregate queries must use the VALUE keyword\");\n            }\n            this.queryExecutionContext = new PipelinedQueryExecutionContext(this.clientContext, this.resourceLink, this.query, this.options, queryPlan);\n        });\n    }\n    fetchQueryPlan() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.queryPlanPromise && this.resourceType === ResourceType.item) {\n                return this.clientContext\n                    .getQueryPlan(getPathFromLink(this.resourceLink) + \"/docs\", ResourceType.item, this.resourceLink, this.query, this.options)\n                    .catch((error) => error); // Without this catch, node reports an unhandled rejection. So we stash the promise as resolved even if it errored.\n            }\n            return this.queryPlanPromise;\n        });\n    }\n    needsQueryPlan(error) {\n        return error.code === StatusCodes.BadRequest;\n    }\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.isInitialized === true) {\n                return;\n            }\n            if (this.initPromise === undefined) {\n                this.initPromise = this._init();\n            }\n            return this.initPromise;\n        });\n    }\n    _init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.options.forceQueryPlan === true && this.resourceType === ResourceType.item) {\n                yield this.createPipelinedExecutionContext();\n            }\n            this.isInitialized = true;\n        });\n    }\n    handleSplitError(err) {\n        if (err.code === 410) {\n            const error = new Error(\"Encountered partition split and could not recover. This request is retryable\");\n            error.code = 503;\n            error.originalError = err;\n            throw error;\n        }\n        else {\n            throw err;\n        }\n    }\n}\n//# sourceMappingURL=queryIterator.js.map","import { ResourceResponse } from \"../../request\";\nexport class ConflictResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, conflict) {\n        super(resource, headers, statusCode);\n        this.conflict = conflict;\n    }\n}\n//# sourceMappingURL=ConflictResponse.js.map","import { __awaiter } from \"tslib\";\nimport { Constants, getIdFromLink, getPathFromLink, ResourceType } from \"../../common\";\nimport { ConflictResponse } from \"./ConflictResponse\";\n/**\n * Use to read or delete a given {@link Conflict} by id.\n *\n * @see {@link Conflicts} to query or read all conflicts.\n */\nexport class Conflict {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link Conflict}.\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return `/${this.container.url}/${Constants.Path.ConflictsPathSegment}/${this.id}`;\n    }\n    /**\n     * Read the {@link ConflictDefinition} for the given {@link Conflict}.\n     * @param options\n     */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url, ResourceType.conflicts);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.read({\n                path,\n                resourceType: ResourceType.user,\n                resourceId: id,\n                options\n            });\n            return new ConflictResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Delete the given {@link ConflictDefinition}.\n     * @param options\n     */\n    delete(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.conflicts,\n                resourceId: id,\n                options\n            });\n            return new ConflictResponse(response.result, response.headers, response.code, this);\n        });\n    }\n}\n//# sourceMappingURL=Conflict.js.map","import { getIdFromLink, getPathFromLink, ResourceType } from \"../../common\";\nimport { QueryIterator } from \"../../queryIterator\";\n/**\n * Use to query or read all conflicts.\n *\n * @see {@link Conflict} to read or delete a given {@link Conflict} by id.\n */\nexport class Conflicts {\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = getPathFromLink(this.container.url, ResourceType.conflicts);\n        const id = getIdFromLink(this.container.url);\n        return new QueryIterator(this.clientContext, query, options, (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.conflicts,\n                resourceId: id,\n                resultFn: (result) => result.Conflicts,\n                query,\n                options: innerOptions\n            });\n        });\n    }\n    /**\n     * Reads all conflicts\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\n//# sourceMappingURL=Conflicts.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nexport var ConflictResolutionMode;\n(function (ConflictResolutionMode) {\n    ConflictResolutionMode[\"Custom\"] = \"Custom\";\n    ConflictResolutionMode[\"LastWriterWins\"] = \"LastWriterWins\";\n})(ConflictResolutionMode || (ConflictResolutionMode = {}));\n//# sourceMappingURL=ConflictResolutionMode.js.map","import { ResourceResponse } from \"../../request/ResourceResponse\";\nexport class ItemResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, subsstatusCode, item) {\n        super(resource, headers, statusCode, subsstatusCode);\n        this.item = item;\n    }\n}\n//# sourceMappingURL=ItemResponse.js.map","import { __awaiter } from \"tslib\";\nimport { createDocumentUri, getIdFromLink, getPathFromLink, isResourceValid, ResourceType, StatusCodes } from \"../../common\";\nimport { extractPartitionKey, undefinedPartitionKey } from \"../../extractPartitionKey\";\nimport { ItemResponse } from \"./ItemResponse\";\n/**\n * Used to perform operations on a specific item.\n *\n * @see {@link Items} for operations on all items; see `container.items`.\n */\nexport class Item {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link Item}.\n     * @param partitionKey The primary key of the given {@link Item} (only for partitioned containers).\n     */\n    constructor(container, id, partitionKey, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.partitionKey = partitionKey;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return createDocumentUri(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * Read the item's definition.\n     *\n     * Any provided type, T, is not necessarily enforced by the SDK.\n     * You may get more or less properties and it's up to your logic to enforce it.\n     * If the type, T, is a class, it won't pass `typeof` comparisons, because it won't have a match prototype.\n     * It's recommended to only use interfaces.\n     *\n     * There is no set schema for JSON items. They may contain any number of custom properties.\n     *\n     * @param options Additional options for the request, such as the partition key.\n     * Note, if you provide a partition key on the options object, it will override the primary key on `this.partitionKey`.\n     *\n     * @example Using custom type for response\n     * ```typescript\n     * interface TodoItem {\n     *   title: string;\n     *   done: bool;\n     *   id: string;\n     * }\n     *\n     * let item: TodoItem;\n     * ({body: item} = await item.read<TodoItem>());\n     * ```\n     */\n    read(options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.partitionKey === undefined) {\n                const { resource: partitionKeyDefinition } = yield this.container.readPartitionKeyDefinition();\n                this.partitionKey = undefinedPartitionKey(partitionKeyDefinition);\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            let response;\n            try {\n                response = yield this.clientContext.read({\n                    path,\n                    resourceType: ResourceType.item,\n                    resourceId: id,\n                    options,\n                    partitionKey: this.partitionKey\n                });\n            }\n            catch (error) {\n                if (error.code !== StatusCodes.NotFound) {\n                    throw error;\n                }\n                response = error;\n            }\n            return new ItemResponse(response.result, response.headers, response.code, response.substatus, this);\n        });\n    }\n    replace(body, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.partitionKey === undefined) {\n                const { resource: partitionKeyDefinition } = yield this.container.readPartitionKeyDefinition();\n                this.partitionKey = extractPartitionKey(body, partitionKeyDefinition);\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.replace({\n                body,\n                path,\n                resourceType: ResourceType.item,\n                resourceId: id,\n                options,\n                partitionKey: this.partitionKey\n            });\n            return new ItemResponse(response.result, response.headers, response.code, response.substatus, this);\n        });\n    }\n    /**\n     * Delete the item.\n     *\n     * Any provided type, T, is not necessarily enforced by the SDK.\n     * You may get more or less properties and it's up to your logic to enforce it.\n     *\n     * @param options Additional options for the request, such as the partition key.\n     */\n    delete(options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.partitionKey === undefined) {\n                const { resource: partitionKeyDefinition } = yield this.container.readPartitionKeyDefinition();\n                this.partitionKey = undefinedPartitionKey(partitionKeyDefinition);\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.item,\n                resourceId: id,\n                options,\n                partitionKey: this.partitionKey\n            });\n            return new ItemResponse(response.result, response.headers, response.code, response.substatus, this);\n        });\n    }\n}\n//# sourceMappingURL=Item.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"./common\";\n/**\n * A single response page from the Azure Cosmos DB Change Feed\n */\nexport class ChangeFeedResponse {\n    /**\n     * @internal\n     * @hidden\n     *\n     * @param result\n     * @param count\n     * @param statusCode\n     * @param headers\n     */\n    constructor(\n    /**\n     * Gets the items returned in the response from Azure Cosmos DB\n     */\n    result, \n    /**\n     * Gets the number of items returned in the response from Azure Cosmos DB\n     */\n    count, \n    /**\n     * Gets the status code of the response from Azure Cosmos DB\n     */\n    statusCode, headers) {\n        this.result = result;\n        this.count = count;\n        this.statusCode = statusCode;\n        this.headers = Object.freeze(headers);\n    }\n    /**\n     * Gets the request charge for this request from the Azure Cosmos DB service.\n     */\n    get requestCharge() {\n        const rus = this.headers[Constants.HttpHeaders.RequestCharge];\n        return rus ? parseInt(rus, 10) : null;\n    }\n    /**\n     * Gets the activity ID for the request from the Azure Cosmos DB service.\n     */\n    get activityId() {\n        return this.headers[Constants.HttpHeaders.ActivityId];\n    }\n    /**\n     * Gets the continuation token to be used for continuing enumeration of the Azure Cosmos DB service.\n     *\n     * This is equivalent to the `etag` property.\n     */\n    get continuation() {\n        return this.etag;\n    }\n    /**\n     * Gets the session token for use in session consistency reads from the Azure Cosmos DB service.\n     */\n    get sessionToken() {\n        return this.headers[Constants.HttpHeaders.SessionToken];\n    }\n    /**\n     * Gets the entity tag associated with last transaction in the Azure Cosmos DB service,\n     * which can be used as If-Non-Match Access condition for ReadFeed REST request or\n     * `continuation` property of `ChangeFeedOptions` parameter for\n     * `Items.changeFeed()`\n     * to get feed changes since the transaction specified by this entity tag.\n     *\n     * This is equivalent to the `continuation` property.\n     */\n    get etag() {\n        return this.headers[Constants.HttpHeaders.ETag];\n    }\n}\n//# sourceMappingURL=ChangeFeedResponse.js.map","import { __asyncGenerator, __await, __awaiter } from \"tslib\";\nimport { ChangeFeedResponse } from \"./ChangeFeedResponse\";\nimport { Constants, ResourceType, StatusCodes } from \"./common\";\n/**\n * Provides iterator for change feed.\n *\n * Use `Items.changeFeed()` to get an instance of the iterator.\n */\nexport class ChangeFeedIterator {\n    /**\n     * @internal\n     * @hidden\n     *\n     * @param clientContext\n     * @param resourceId\n     * @param resourceLink\n     * @param isPartitionedContainer\n     * @param changeFeedOptions\n     */\n    constructor(clientContext, resourceId, resourceLink, partitionKey, changeFeedOptions) {\n        this.clientContext = clientContext;\n        this.resourceId = resourceId;\n        this.resourceLink = resourceLink;\n        this.partitionKey = partitionKey;\n        this.changeFeedOptions = changeFeedOptions;\n        // partition key XOR partition key range id\n        const partitionKeyValid = partitionKey !== undefined;\n        this.isPartitionSpecified = partitionKeyValid;\n        let canUseStartFromBeginning = true;\n        if (changeFeedOptions.continuation) {\n            this.nextIfNoneMatch = changeFeedOptions.continuation;\n            canUseStartFromBeginning = false;\n        }\n        if (changeFeedOptions.startTime) {\n            // .toUTCString() is platform specific, but most platforms use RFC 1123.\n            // In ECMAScript 2018, this was standardized to RFC 1123.\n            // See for more info: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toUTCString\n            this.ifModifiedSince = changeFeedOptions.startTime.toUTCString();\n            canUseStartFromBeginning = false;\n        }\n        if (canUseStartFromBeginning && !changeFeedOptions.startFromBeginning) {\n            this.nextIfNoneMatch = ChangeFeedIterator.IfNoneMatchAllHeaderValue;\n        }\n    }\n    /**\n     * Gets a value indicating whether there are potentially additional results that can be retrieved.\n     *\n     * Initially returns true. This value is set based on whether the last execution returned a continuation token.\n     *\n     * @returns Boolean value representing if whether there are potentially additional results that can be retrieved.\n     */\n    get hasMoreResults() {\n        return this.lastStatusCode !== StatusCodes.NotModified;\n    }\n    /**\n     * Gets an async iterator which will yield pages of results from Azure Cosmos DB.\n     */\n    getAsyncIterator() {\n        return __asyncGenerator(this, arguments, function* getAsyncIterator_1() {\n            do {\n                const result = yield __await(this.fetchNext());\n                if (result.count > 0) {\n                    yield yield __await(result);\n                }\n            } while (this.hasMoreResults);\n        });\n    }\n    /**\n     * Read feed and retrieves the next page of results in Azure Cosmos DB.\n     */\n    fetchNext() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.getFeedResponse();\n            this.lastStatusCode = response.statusCode;\n            this.nextIfNoneMatch = response.headers[Constants.HttpHeaders.ETag];\n            return response;\n        });\n    }\n    getFeedResponse() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isPartitionSpecified) {\n                throw new Error(\"Container is partitioned, but no partition key or partition key range id was specified.\");\n            }\n            const feedOptions = { initialHeaders: {}, useIncrementalFeed: true };\n            if (typeof this.changeFeedOptions.maxItemCount === \"number\") {\n                feedOptions.maxItemCount = this.changeFeedOptions.maxItemCount;\n            }\n            if (this.changeFeedOptions.sessionToken) {\n                feedOptions.sessionToken = this.changeFeedOptions.sessionToken;\n            }\n            if (this.nextIfNoneMatch) {\n                feedOptions.accessCondition = {\n                    type: Constants.HttpHeaders.IfNoneMatch,\n                    condition: this.nextIfNoneMatch\n                };\n            }\n            if (this.ifModifiedSince) {\n                feedOptions.initialHeaders[Constants.HttpHeaders.IfModifiedSince] = this.ifModifiedSince;\n            }\n            const response = yield this.clientContext.queryFeed({\n                path: this.resourceLink,\n                resourceType: ResourceType.item,\n                resourceId: this.resourceId,\n                resultFn: (result) => (result ? result.Documents : []),\n                query: undefined,\n                options: feedOptions,\n                partitionKey: this.partitionKey\n            }); // TODO: some funky issues with query feed. Probably need to change it up.\n            return new ChangeFeedResponse(response.result, response.result ? response.result.length : 0, response.code, response.headers);\n        });\n    }\n}\nChangeFeedIterator.IfNoneMatchAllHeaderValue = \"*\";\n//# sourceMappingURL=ChangeFeedIterator.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport uuid from \"uuid/v4\";\nimport { ChangeFeedIterator } from \"../../ChangeFeedIterator\";\nimport { getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { extractPartitionKey } from \"../../extractPartitionKey\";\nimport { QueryIterator } from \"../../queryIterator\";\nimport { Item } from \"./Item\";\nimport { ItemResponse } from \"./ItemResponse\";\n/**\n * @ignore\n * @param options\n */\nfunction isChangeFeedOptions(options) {\n    const optionsType = typeof options;\n    return (options && !(optionsType === \"string\" || optionsType === \"boolean\" || optionsType === \"number\"));\n}\n/**\n * Operations for creating new items, and reading/querying all items\n *\n * @see {@link Item} for reading, replacing, or deleting an existing container; use `.item(id)`.\n */\nexport class Items {\n    /**\n     * Create an instance of {@link Items} linked to the parent {@link Container}.\n     * @param container The parent container.\n     * @hidden\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options = {}) {\n        const path = getPathFromLink(this.container.url, ResourceType.item);\n        const id = getIdFromLink(this.container.url);\n        const fetchFunction = (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.item,\n                resourceId: id,\n                resultFn: (result) => (result ? result.Documents : []),\n                query,\n                options: innerOptions,\n                partitionKey: options.partitionKey\n            });\n        };\n        return new QueryIterator(this.clientContext, query, options, fetchFunction, this.container.url, ResourceType.item);\n    }\n    readChangeFeed(partitionKeyOrChangeFeedOptions, changeFeedOptions) {\n        if (isChangeFeedOptions(partitionKeyOrChangeFeedOptions)) {\n            return this.changeFeed(partitionKeyOrChangeFeedOptions);\n        }\n        else {\n            return this.changeFeed(partitionKeyOrChangeFeedOptions, changeFeedOptions);\n        }\n    }\n    changeFeed(partitionKeyOrChangeFeedOptions, changeFeedOptions) {\n        let partitionKey;\n        if (!changeFeedOptions && isChangeFeedOptions(partitionKeyOrChangeFeedOptions)) {\n            partitionKey = undefined;\n            changeFeedOptions = partitionKeyOrChangeFeedOptions;\n        }\n        else if (partitionKeyOrChangeFeedOptions !== undefined &&\n            !isChangeFeedOptions(partitionKeyOrChangeFeedOptions)) {\n            partitionKey = partitionKeyOrChangeFeedOptions;\n        }\n        if (!changeFeedOptions) {\n            changeFeedOptions = {};\n        }\n        const path = getPathFromLink(this.container.url, ResourceType.item);\n        const id = getIdFromLink(this.container.url);\n        return new ChangeFeedIterator(this.clientContext, id, path, partitionKey, changeFeedOptions);\n    }\n    readAll(options) {\n        return this.query(\"SELECT * from c\", options);\n    }\n    /**\n     * Create an item.\n     *\n     * Any provided type, T, is not necessarily enforced by the SDK.\n     * You may get more or less properties and it's up to your logic to enforce it.\n     *\n     * There is no set schema for JSON items. They may contain any number of custom properties.\n     *\n     * @param body Represents the body of the item. Can contain any number of user defined properties.\n     * @param options Used for modifying the request (for instance, specifying the partition key).\n     */\n    create(body, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { resource: partitionKeyDefinition } = yield this.container.readPartitionKeyDefinition();\n            const partitionKey = extractPartitionKey(body, partitionKeyDefinition);\n            // Generate random document id if the id is missing in the payload and\n            // options.disableAutomaticIdGeneration != true\n            if ((body.id === undefined || body.id === \"\") && !options.disableAutomaticIdGeneration) {\n                body.id = uuid();\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.container.url, ResourceType.item);\n            const id = getIdFromLink(this.container.url);\n            const response = yield this.clientContext.create({\n                body,\n                path,\n                resourceType: ResourceType.item,\n                resourceId: id,\n                options,\n                partitionKey\n            });\n            const ref = new Item(this.container, response.result.id, partitionKey, this.clientContext);\n            return new ItemResponse(response.result, response.headers, response.code, response.substatus, ref);\n        });\n    }\n    upsert(body, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { resource: partitionKeyDefinition } = yield this.container.readPartitionKeyDefinition();\n            const partitionKey = extractPartitionKey(body, partitionKeyDefinition);\n            // Generate random document id if the id is missing in the payload and\n            // options.disableAutomaticIdGeneration != true\n            if ((body.id === undefined || body.id === \"\") && !options.disableAutomaticIdGeneration) {\n                body.id = uuid();\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.container.url, ResourceType.item);\n            const id = getIdFromLink(this.container.url);\n            const response = yield this.clientContext.upsert({\n                body,\n                path,\n                resourceType: ResourceType.item,\n                resourceId: id,\n                options,\n                partitionKey\n            });\n            const ref = new Item(this.container, response.result.id, partitionKey, this.clientContext);\n            return new ItemResponse(response.result, response.headers, response.code, response.substatus, ref);\n        });\n    }\n}\n//# sourceMappingURL=Items.js.map","import { ResourceResponse } from \"../../request\";\nexport class StoredProcedureResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, storedProcedure) {\n        super(resource, headers, statusCode);\n        this.storedProcedure = storedProcedure;\n    }\n    /**\n     * Alias for storedProcedure.\n     *\n     * A reference to the {@link StoredProcedure} which the {@link StoredProcedureDefinition} corresponds to.\n     */\n    get sproc() {\n        return this.storedProcedure;\n    }\n}\n//# sourceMappingURL=StoredProcedureResponse.js.map","import { __awaiter } from \"tslib\";\nimport { createStoredProcedureUri, getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { undefinedPartitionKey } from \"../../extractPartitionKey\";\nimport { ResourceResponse } from \"../../request\";\nimport { StoredProcedureResponse } from \"./StoredProcedureResponse\";\n/**\n * Operations for reading, replacing, deleting, or executing a specific, existing stored procedure by id.\n *\n * For operations to create, upsert, read all, or query Stored Procedures,\n */\nexport class StoredProcedure {\n    /**\n     * Creates a new instance of {@link StoredProcedure} linked to the parent {@link Container}.\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link StoredProcedure}.\n     * @hidden\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return createStoredProcedureUri(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * Read the {@link StoredProcedureDefinition} for the given {@link StoredProcedure}.\n     * @param options\n     */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.read({\n                path,\n                resourceType: ResourceType.sproc,\n                resourceId: id,\n                options\n            });\n            return new StoredProcedureResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Replace the given {@link StoredProcedure} with the specified {@link StoredProcedureDefinition}.\n     * @param body The specified {@link StoredProcedureDefinition} to replace the existing definition.\n     * @param options\n     */\n    replace(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.replace({\n                body,\n                path,\n                resourceType: ResourceType.sproc,\n                resourceId: id,\n                options\n            });\n            return new StoredProcedureResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Delete the given {@link StoredProcedure}.\n     * @param options\n     */\n    delete(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.sproc,\n                resourceId: id,\n                options\n            });\n            return new StoredProcedureResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Execute the given {@link StoredProcedure}.\n     *\n     * The specified type, T, is not enforced by the client.\n     * Be sure to validate the response from the stored procedure matches the type, T, you provide.\n     *\n     * @param partitionKey The partition key to use when executing the stored procedure\n     * @param params Array of parameters to pass as arguments to the given {@link StoredProcedure}.\n     * @param options Additional options, such as the partition key to invoke the {@link StoredProcedure} on.\n     */\n    execute(partitionKey, params, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (partitionKey === undefined) {\n                const { resource: partitionKeyDefinition } = yield this.container.readPartitionKeyDefinition();\n                partitionKey = undefinedPartitionKey(partitionKeyDefinition);\n            }\n            const response = yield this.clientContext.execute({\n                sprocLink: this.url,\n                params,\n                options,\n                partitionKey\n            });\n            return new ResourceResponse(response.result, response.headers, response.code);\n        });\n    }\n}\n//# sourceMappingURL=StoredProcedure.js.map","import { __awaiter } from \"tslib\";\nimport { getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { QueryIterator } from \"../../queryIterator\";\nimport { StoredProcedure } from \"./StoredProcedure\";\nimport { StoredProcedureResponse } from \"./StoredProcedureResponse\";\n/**\n * Operations for creating, upserting, or reading/querying all Stored Procedures.\n *\n * For operations to read, replace, delete, or execute a specific, existing stored procedure by id, see `container.storedProcedure()`.\n */\nexport class StoredProcedures {\n    /**\n     * @param container The parent {@link Container}.\n     * @hidden\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = getPathFromLink(this.container.url, ResourceType.sproc);\n        const id = getIdFromLink(this.container.url);\n        return new QueryIterator(this.clientContext, query, options, (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.sproc,\n                resourceId: id,\n                resultFn: (result) => result.StoredProcedures,\n                query,\n                options: innerOptions\n            });\n        });\n    }\n    /**\n     * Read all stored procedures.\n     * @param options\n     * @example Read all stored procedures to array.\n     * ```typescript\n     * const {body: sprocList} = await containers.storedProcedures.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a StoredProcedure.\n     *\n     * Azure Cosmos DB allows stored procedures to be executed in the storage tier,\n     * directly against an item container. The script\n     * gets executed under ACID transactions on the primary storage partition of the\n     * specified container. For additional details,\n     * refer to the server-side JavaScript API documentation.\n     */\n    create(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.container.url, ResourceType.sproc);\n            const id = getIdFromLink(this.container.url);\n            const response = yield this.clientContext.create({\n                body,\n                path,\n                resourceType: ResourceType.sproc,\n                resourceId: id,\n                options\n            });\n            const ref = new StoredProcedure(this.container, response.result.id, this.clientContext);\n            return new StoredProcedureResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n}\n//# sourceMappingURL=StoredProcedures.js.map","import { ResourceResponse } from \"../../request\";\nexport class TriggerResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, trigger) {\n        super(resource, headers, statusCode);\n        this.trigger = trigger;\n    }\n}\n//# sourceMappingURL=TriggerResponse.js.map","import { __awaiter } from \"tslib\";\nimport { createTriggerUri, getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { TriggerResponse } from \"./TriggerResponse\";\n/**\n * Operations to read, replace, or delete a {@link Trigger}.\n *\n * Use `container.triggers` to create, upsert, query, or read all.\n */\nexport class Trigger {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link Trigger}.\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return createTriggerUri(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * Read the {@link TriggerDefinition} for the given {@link Trigger}.\n     * @param options\n     */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.read({\n                path,\n                resourceType: ResourceType.trigger,\n                resourceId: id,\n                options\n            });\n            return new TriggerResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Replace the given {@link Trigger} with the specified {@link TriggerDefinition}.\n     * @param body The specified {@link TriggerDefinition} to replace the existing definition with.\n     * @param options\n     */\n    replace(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.replace({\n                body,\n                path,\n                resourceType: ResourceType.trigger,\n                resourceId: id,\n                options\n            });\n            return new TriggerResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Delete the given {@link Trigger}.\n     * @param options\n     */\n    delete(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.trigger,\n                resourceId: id,\n                options\n            });\n            return new TriggerResponse(response.result, response.headers, response.code, this);\n        });\n    }\n}\n//# sourceMappingURL=Trigger.js.map","import { __awaiter } from \"tslib\";\nimport { getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { QueryIterator } from \"../../queryIterator\";\nimport { Trigger } from \"./Trigger\";\nimport { TriggerResponse } from \"./TriggerResponse\";\n/**\n * Operations to create, upsert, query, and read all triggers.\n *\n * Use `container.triggers` to read, replace, or delete a {@link Trigger}.\n */\nexport class Triggers {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = getPathFromLink(this.container.url, ResourceType.trigger);\n        const id = getIdFromLink(this.container.url);\n        return new QueryIterator(this.clientContext, query, options, (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.trigger,\n                resourceId: id,\n                resultFn: (result) => result.Triggers,\n                query,\n                options: innerOptions\n            });\n        });\n    }\n    /**\n     * Read all Triggers.\n     * @param options\n     * @example Read all trigger to array.\n     * ```typescript\n     * const {body: triggerList} = await container.triggers.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a trigger.\n     *\n     * Azure Cosmos DB supports pre and post triggers defined in JavaScript to be executed\n     * on creates, updates and deletes.\n     *\n     * For additional details, refer to the server-side JavaScript API documentation.\n     * @param body\n     * @param options\n     */\n    create(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.container.url, ResourceType.trigger);\n            const id = getIdFromLink(this.container.url);\n            const response = yield this.clientContext.create({\n                body,\n                path,\n                resourceType: ResourceType.trigger,\n                resourceId: id,\n                options\n            });\n            const ref = new Trigger(this.container, response.result.id, this.clientContext);\n            return new TriggerResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n}\n//# sourceMappingURL=Triggers.js.map","import { ResourceResponse } from \"../../request\";\nexport class UserDefinedFunctionResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, udf) {\n        super(resource, headers, statusCode);\n        this.userDefinedFunction = udf;\n    }\n    /**\n     * Alias for `userDefinedFunction(id).\n     *\n     * A reference to the {@link UserDefinedFunction} corresponding to the returned {@link UserDefinedFunctionDefinition}.\n     */\n    get udf() {\n        return this.userDefinedFunction;\n    }\n}\n//# sourceMappingURL=UserDefinedFunctionResponse.js.map","import { __awaiter } from \"tslib\";\nimport { createUserDefinedFunctionUri, getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { UserDefinedFunctionResponse } from \"./UserDefinedFunctionResponse\";\n/**\n * Used to read, replace, or delete a specified User Definied Function by id.\n *\n * @see {@link UserDefinedFunction} to create, upsert, query, read all User Defined Functions.\n */\nexport class UserDefinedFunction {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     * @param id The id of the given {@link UserDefinedFunction}.\n     */\n    constructor(container, id, clientContext) {\n        this.container = container;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return createUserDefinedFunctionUri(this.container.database.id, this.container.id, this.id);\n    }\n    /**\n     * Read the {@link UserDefinedFunctionDefinition} for the given {@link UserDefinedFunction}.\n     * @param options\n     */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.read({\n                path,\n                resourceType: ResourceType.udf,\n                resourceId: id,\n                options\n            });\n            return new UserDefinedFunctionResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Replace the given {@link UserDefinedFunction} with the specified {@link UserDefinedFunctionDefinition}.\n     * @param body The specified {@link UserDefinedFunctionDefinition}.\n     * @param options\n     */\n    replace(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.replace({\n                body,\n                path,\n                resourceType: ResourceType.udf,\n                resourceId: id,\n                options\n            });\n            return new UserDefinedFunctionResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Delete the given {@link UserDefined}.\n     * @param options\n     */\n    delete(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.udf,\n                resourceId: id,\n                options\n            });\n            return new UserDefinedFunctionResponse(response.result, response.headers, response.code, this);\n        });\n    }\n}\n//# sourceMappingURL=UserDefinedFunction.js.map","import { __awaiter } from \"tslib\";\nimport { getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { QueryIterator } from \"../../queryIterator\";\nimport { UserDefinedFunction } from \"./UserDefinedFunction\";\nimport { UserDefinedFunctionResponse } from \"./UserDefinedFunctionResponse\";\n/**\n * Used to create, upsert, query, or read all User Defined Functions.\n *\n * @see {@link UserDefinedFunction} to read, replace, or delete a given User Defined Function by id.\n */\nexport class UserDefinedFunctions {\n    /**\n     * @hidden\n     * @param container The parent {@link Container}.\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = getPathFromLink(this.container.url, ResourceType.udf);\n        const id = getIdFromLink(this.container.url);\n        return new QueryIterator(this.clientContext, query, options, (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.udf,\n                resourceId: id,\n                resultFn: (result) => result.UserDefinedFunctions,\n                query,\n                options: innerOptions\n            });\n        });\n    }\n    /**\n     * Read all User Defined Functions.\n     * @param options\n     * @example Read all User Defined Functions to array.\n     * ```typescript\n     * const {body: udfList} = await container.userDefinedFunctions.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a UserDefinedFunction.\n     *\n     * Azure Cosmos DB supports JavaScript UDFs which can be used inside queries, stored procedures and triggers.\n     *\n     * For additional details, refer to the server-side JavaScript API documentation.\n     *\n     */\n    create(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (body.body) {\n                body.body = body.body.toString();\n            }\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.container.url, ResourceType.udf);\n            const id = getIdFromLink(this.container.url);\n            const response = yield this.clientContext.create({\n                body,\n                path,\n                resourceType: ResourceType.udf,\n                resourceId: id,\n                options\n            });\n            const ref = new UserDefinedFunction(this.container, response.result.id, this.clientContext);\n            return new UserDefinedFunctionResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n}\n//# sourceMappingURL=UserDefinedFunctions.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { StoredProcedures, StoredProcedure } from \"../StoredProcedure\";\nimport { Trigger, Triggers } from \"../Trigger\";\nimport { UserDefinedFunction, UserDefinedFunctions } from \"../UserDefinedFunction\";\nexport class Scripts {\n    /**\n     * @param container The parent {@link Container}.\n     * @hidden\n     */\n    constructor(container, clientContext) {\n        this.container = container;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link StoredProcedure} by id.\n     *\n     * Use `.storedProcedures` for creating new stored procedures, or querying/reading all stored procedures.\n     * @param id The id of the {@link StoredProcedure}.\n     */\n    storedProcedure(id) {\n        return new StoredProcedure(this.container, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Trigger} by id.\n     *\n     * Use `.triggers` for creating new triggers, or querying/reading all triggers.\n     * @param id The id of the {@link Trigger}.\n     */\n    trigger(id) {\n        return new Trigger(this.container, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link UserDefinedFunction} by id.\n     *\n     * Use `.userDefinedFunctions` for creating new user defined functions, or querying/reading all user defined functions.\n     * @param id The id of the {@link UserDefinedFunction}.\n     */\n    userDefinedFunction(id) {\n        return new UserDefinedFunction(this.container, id, this.clientContext);\n    }\n    /**\n     * Operations for creating new stored procedures, and reading/querying all stored procedures.\n     *\n     * For reading, replacing, or deleting an existing stored procedure, use `.storedProcedure(id)`.\n     */\n    get storedProcedures() {\n        if (!this.$sprocs) {\n            this.$sprocs = new StoredProcedures(this.container, this.clientContext);\n        }\n        return this.$sprocs;\n    }\n    /**\n     * Operations for creating new triggers, and reading/querying all triggers.\n     *\n     * For reading, replacing, or deleting an existing trigger, use `.trigger(id)`.\n     */\n    get triggers() {\n        if (!this.$triggers) {\n            this.$triggers = new Triggers(this.container, this.clientContext);\n        }\n        return this.$triggers;\n    }\n    /**\n     * Operations for creating new user defined functions, and reading/querying all user defined functions.\n     *\n     * For reading, replacing, or deleting an existing user defined function, use `.userDefinedFunction(id)`.\n     */\n    get userDefinedFunctions() {\n        if (!this.$udfs) {\n            this.$udfs = new UserDefinedFunctions(this.container, this.clientContext);\n        }\n        return this.$udfs;\n    }\n}\n//# sourceMappingURL=Scripts.js.map","import { ResourceResponse } from \"../../request/ResourceResponse\";\n/** Response object for Container operations */\nexport class ContainerResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, container) {\n        super(resource, headers, statusCode);\n        this.container = container;\n    }\n}\n//# sourceMappingURL=ContainerResponse.js.map","import { __awaiter } from \"tslib\";\nimport { createDocumentCollectionUri, getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { ResourceResponse } from \"../../request\";\nimport { Conflict, Conflicts } from \"../Conflict\";\nimport { Item, Items } from \"../Item\";\nimport { Scripts } from \"../Script/Scripts\";\nimport { ContainerResponse } from \"./ContainerResponse\";\n/**\n * Operations for reading, replacing, or deleting a specific, existing container by id.\n *\n * @see {@link Containers} for creating new containers, and reading/querying all containers; use `.containers`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `container(id).read()` before every single `item.read()` call, to ensure the container exists;\n * do this once on application start up.\n */\nexport class Container {\n    /**\n     * Returns a container instance. Note: You should get this from `database.container(id)`, rather than creating your own object.\n     * @param database The parent {@link Database}.\n     * @param id The id of the given container.\n     * @hidden\n     */\n    constructor(database, id, clientContext) {\n        this.database = database;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Operations for creating new items, and reading/querying all items\n     *\n     * For reading, replacing, or deleting an existing item, use `.item(id)`.\n     *\n     * @example Create a new item\n     * ```typescript\n     * const {body: createdItem} = await container.items.create({id: \"<item id>\", properties: {}});\n     * ```\n     */\n    get items() {\n        if (!this.$items) {\n            this.$items = new Items(this, this.clientContext);\n        }\n        return this.$items;\n    }\n    /**\n     * All operations for Stored Procedures, Triggers, and User Defined Functions\n     */\n    get scripts() {\n        if (!this.$scripts) {\n            this.$scripts = new Scripts(this, this.clientContext);\n        }\n        return this.$scripts;\n    }\n    /**\n     * Opertaions for reading and querying conflicts for the given container.\n     *\n     * For reading or deleting a specific conflict, use `.conflict(id)`.\n     */\n    get conflicts() {\n        if (!this.$conflicts) {\n            this.$conflicts = new Conflicts(this, this.clientContext);\n        }\n        return this.$conflicts;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return createDocumentCollectionUri(this.database.id, this.id);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Item} by id.\n     *\n     * Use `.items` for creating new items, or querying/reading all items.\n     *\n     * @param id The id of the {@link Item}.\n     * @param partitionKeyValue The value of the {@link Item} partition key\n     * @example Replace an item\n     * const {body: replacedItem} = await container.item(\"<item id>\", \"<partition key value>\").replace({id: \"<item id>\", title: \"Updated post\", authorID: 5});\n     */\n    item(id, partitionKeyValue) {\n        return new Item(this, id, partitionKeyValue, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Conflict} by id.\n     *\n     * Use `.conflicts` for creating new conflicts, or querying/reading all conflicts.\n     * @param id The id of the {@link Conflict}.\n     */\n    conflict(id) {\n        return new Conflict(this, id, this.clientContext);\n    }\n    /** Read the container's definition */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.read({\n                path,\n                resourceType: ResourceType.container,\n                resourceId: id,\n                options\n            });\n            this.clientContext.partitionKeyDefinitionCache[this.url] = response.result.partitionKey;\n            return new ContainerResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /** Replace the container's definition */\n    replace(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.replace({\n                body,\n                path,\n                resourceType: ResourceType.container,\n                resourceId: id,\n                options\n            });\n            return new ContainerResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /** Delete the container */\n    delete(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.container,\n                resourceId: id,\n                options\n            });\n            return new ContainerResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Gets the partition key definition first by looking into the cache otherwise by reading the collection.\n     * @deprecated This method has been renamed to readPartitionKeyDefinition.\n     * @param {string} collectionLink   - Link to the collection whose partition key needs to be extracted.\n     * @param {function} callback       - \\\n     * The arguments to the callback are(in order): error, partitionKeyDefinition, response object and response headers\n     */\n    getPartitionKeyDefinition() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.readPartitionKeyDefinition();\n        });\n    }\n    /**\n     * Gets the partition key definition first by looking into the cache otherwise by reading the collection.\n     * @ignore\n     * @param {string} collectionLink   - Link to the collection whose partition key needs to be extracted.\n     * @param {function} callback       - \\\n     * The arguments to the callback are(in order): error, partitionKeyDefinition, response object and response headers\n     */\n    readPartitionKeyDefinition() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // $ISSUE-felixfan-2016-03-17: Make name based path and link based path use the same key\n            // $ISSUE-felixfan-2016-03-17: Refresh partitionKeyDefinitionCache when necessary\n            if (this.url in this.clientContext.partitionKeyDefinitionCache) {\n                return new ResourceResponse(this.clientContext.partitionKeyDefinitionCache[this.url], {}, 0);\n            }\n            const { headers, statusCode } = yield this.read();\n            return new ResourceResponse(this.clientContext.partitionKeyDefinitionCache[this.url], headers, statusCode);\n        });\n    }\n    getQueryPlan(query) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            return this.clientContext.getQueryPlan(path + \"/docs\", ResourceType.item, getIdFromLink(this.url), query);\n        });\n    }\n    readPartitionKeyRanges(feedOptions) {\n        feedOptions = feedOptions || {};\n        return this.clientContext.queryPartitionKeyRanges(this.url, undefined, feedOptions);\n    }\n}\n//# sourceMappingURL=Container.js.map","import { __awaiter } from \"tslib\";\nimport { Constants, getIdFromLink, getPathFromLink, isResourceValid, ResourceType, StatusCodes } from \"../../common\";\nimport { DEFAULT_PARTITION_KEY_PATH } from \"../../common/partitionKeys\";\nimport { mergeHeaders } from \"../../queryExecutionContext\";\nimport { QueryIterator } from \"../../queryIterator\";\nimport { Container } from \"./Container\";\nimport { ContainerResponse } from \"./ContainerResponse\";\n/**\n * Operations for creating new containers, and reading/querying all containers\n *\n * @see {@link Container} for reading, replacing, or deleting an existing container; use `.container(id)`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `containers.readAll()` before every single `item.read()` call, to ensure the container exists;\n * do this once on application start up.\n */\nexport class Containers {\n    constructor(database, clientContext) {\n        this.database = database;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = getPathFromLink(this.database.url, ResourceType.container);\n        const id = getIdFromLink(this.database.url);\n        return new QueryIterator(this.clientContext, query, options, (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.container,\n                resourceId: id,\n                resultFn: (result) => result.DocumentCollections,\n                query,\n                options: innerOptions\n            });\n        });\n    }\n    /**\n     * Creates a container.\n     *\n     * A container is a named logical container for items.\n     *\n     * A database may contain zero or more named containers and each container consists of\n     * zero or more JSON items.\n     *\n     * Being schema-free, the items in a container do not need to share the same structure or fields.\n     *\n     *\n     * Since containers are application resources, they can be authorized using either the\n     * master key or resource keys.\n     *\n     * @param body Represents the body of the container.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     */\n    create(body, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.database.url, ResourceType.container);\n            const id = getIdFromLink(this.database.url);\n            if (body.throughput) {\n                options.initialHeaders = Object.assign({}, options.initialHeaders, {\n                    [Constants.HttpHeaders.OfferThroughput]: body.throughput\n                });\n                delete body.throughput;\n            }\n            // If they don't specify a partition key, use the default path\n            if (!body.partitionKey || !body.partitionKey.paths) {\n                body.partitionKey = {\n                    paths: [DEFAULT_PARTITION_KEY_PATH]\n                };\n            }\n            const response = yield this.clientContext.create({\n                body,\n                path,\n                resourceType: ResourceType.container,\n                resourceId: id,\n                options\n            });\n            const ref = new Container(this.database, response.result.id, this.clientContext);\n            return new ContainerResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n    /**\n     * Checks if a Container exists, and, if it doesn't, creates it.\n     * This will make a read operation based on the id in the `body`, then if it is not found, a create operation.\n     * You should confirm that the output matches the body you passed in for non-default properties (i.e. indexing policy/etc.)\n     *\n     * A container is a named logical container for items.\n     *\n     * A database may contain zero or more named containers and each container consists of\n     * zero or more JSON items.\n     *\n     * Being schema-free, the items in a container do not need to share the same structure or fields.\n     *\n     *\n     * Since containers are application resources, they can be authorized using either the\n     * master key or resource keys.\n     *\n     * @param body Represents the body of the container.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     */\n    createIfNotExists(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!body || body.id === null || body.id === undefined) {\n                throw new Error(\"body parameter must be an object with an id property\");\n            }\n            /*\n              1. Attempt to read the Database (based on an assumption that most databases will already exist, so its faster)\n              2. If it fails with NotFound error, attempt to create the db. Else, return the read results.\n            */\n            try {\n                const readResponse = yield this.database.container(body.id).read(options);\n                return readResponse;\n            }\n            catch (err) {\n                if (err.code === StatusCodes.NotFound) {\n                    const createResponse = yield this.create(body, options);\n                    // Must merge the headers to capture RU costskaty\n                    mergeHeaders(createResponse.headers, err.headers);\n                    return createResponse;\n                }\n                else {\n                    throw err;\n                }\n            }\n        });\n    }\n    /**\n     * Read all containers.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     * @returns {@link QueryIterator} Allows you to return all containers in an array or iterate over them one at a time.\n     * @example Read all containers to array.\n     * ```typescript\n     * const {body: containerList} = await client.database(\"<db id>\").containers.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\n//# sourceMappingURL=Containers.js.map","import { ResourceResponse } from \"../../request\";\nexport class PermissionResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, permission) {\n        super(resource, headers, statusCode);\n        this.permission = permission;\n    }\n}\n//# sourceMappingURL=PermissionResponse.js.map","import { __awaiter } from \"tslib\";\nimport { createPermissionUri, getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { PermissionResponse } from \"./PermissionResponse\";\n/**\n * Use to read, replace, or delete a given {@link Permission} by id.\n *\n * @see {@link Permissions} to create, upsert, query, or read all Permissions.\n */\nexport class Permission {\n    /**\n     * @hidden\n     * @param user The parent {@link User}.\n     * @param id The id of the given {@link Permission}.\n     */\n    constructor(user, id, clientContext) {\n        this.user = user;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return createPermissionUri(this.user.database.id, this.user.id, this.id);\n    }\n    /**\n     * Read the {@link PermissionDefinition} of the given {@link Permission}.\n     * @param options\n     */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.read({\n                path,\n                resourceType: ResourceType.permission,\n                resourceId: id,\n                options\n            });\n            return new PermissionResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Replace the given {@link Permission} with the specified {@link PermissionDefinition}.\n     * @param body The specified {@link PermissionDefinition}.\n     * @param options\n     */\n    replace(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.replace({\n                body,\n                path,\n                resourceType: ResourceType.permission,\n                resourceId: id,\n                options\n            });\n            return new PermissionResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Delete the given {@link Permission}.\n     * @param options\n     */\n    delete(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.permission,\n                resourceId: id,\n                options\n            });\n            return new PermissionResponse(response.result, response.headers, response.code, this);\n        });\n    }\n}\n//# sourceMappingURL=Permission.js.map","import { __awaiter } from \"tslib\";\nimport { getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { QueryIterator } from \"../../queryIterator\";\nimport { Permission } from \"./Permission\";\nimport { PermissionResponse } from \"./PermissionResponse\";\n/**\n * Use to create, replace, query, and read all Permissions.\n *\n * @see {@link Permission} to read, replace, or delete a specific permission by id.\n */\nexport class Permissions {\n    /**\n     * @hidden\n     * @param user The parent {@link User}.\n     */\n    constructor(user, clientContext) {\n        this.user = user;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = getPathFromLink(this.user.url, ResourceType.permission);\n        const id = getIdFromLink(this.user.url);\n        return new QueryIterator(this.clientContext, query, options, (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.permission,\n                resourceId: id,\n                resultFn: (result) => result.Permissions,\n                query,\n                options: innerOptions\n            });\n        });\n    }\n    /**\n     * Read all permissions.\n     * @param options\n     * @example Read all permissions to array.\n     * ```typescript\n     * const {body: permissionList} = await user.permissions.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a permission.\n     *\n     * A permission represents a per-User Permission to access a specific resource\n     * e.g. Item or Container.\n     * @param body Represents the body of the permission.\n     */\n    create(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.user.url, ResourceType.permission);\n            const id = getIdFromLink(this.user.url);\n            const response = yield this.clientContext.create({\n                body,\n                path,\n                resourceType: ResourceType.permission,\n                resourceId: id,\n                options\n            });\n            const ref = new Permission(this.user, response.result.id, this.clientContext);\n            return new PermissionResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n    /**\n     * Upsert a permission.\n     *\n     * A permission represents a per-User Permission to access a\n     * specific resource e.g. Item or Container.\n     */\n    upsert(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.user.url, ResourceType.permission);\n            const id = getIdFromLink(this.user.url);\n            const response = yield this.clientContext.upsert({\n                body,\n                path,\n                resourceType: ResourceType.permission,\n                resourceId: id,\n                options\n            });\n            const ref = new Permission(this.user, response.result.id, this.clientContext);\n            return new PermissionResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n}\n//# sourceMappingURL=Permissions.js.map","import { ResourceResponse } from \"../../request\";\nexport class UserResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, user) {\n        super(resource, headers, statusCode);\n        this.user = user;\n    }\n}\n//# sourceMappingURL=UserResponse.js.map","import { __awaiter } from \"tslib\";\nimport { createUserUri, getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { Permission, Permissions } from \"../Permission\";\nimport { UserResponse } from \"./UserResponse\";\n/**\n * Used to read, replace, and delete Users.\n *\n * Additionally, you can access the permissions for a given user via `user.permission` and `user.permissions`.\n *\n * @see {@link Users} to create, upsert, query, or read all.\n */\nexport class User {\n    /**\n     * @hidden\n     * @param database The parent {@link Database}.\n     * @param id\n     */\n    constructor(database, id, clientContext) {\n        this.database = database;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.permissions = new Permissions(this, this.clientContext);\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return createUserUri(this.database.id, this.id);\n    }\n    /**\n     * Operations to read, replace, or delete a specific Permission by id.\n     *\n     * See `client.permissions` for creating, upserting, querying, or reading all operations.\n     * @param id\n     */\n    permission(id) {\n        return new Permission(this, id, this.clientContext);\n    }\n    /**\n     * Read the {@link UserDefinition} for the given {@link User}.\n     * @param options\n     */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.read({\n                path,\n                resourceType: ResourceType.user,\n                resourceId: id,\n                options\n            });\n            return new UserResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Replace the given {@link User}'s definition with the specified {@link UserDefinition}.\n     * @param body The specified {@link UserDefinition} to replace the definition.\n     * @param options\n     */\n    replace(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.replace({\n                body,\n                path,\n                resourceType: ResourceType.user,\n                resourceId: id,\n                options\n            });\n            return new UserResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Delete the given {@link User}.\n     * @param options\n     */\n    delete(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.user,\n                resourceId: id,\n                options\n            });\n            return new UserResponse(response.result, response.headers, response.code, this);\n        });\n    }\n}\n//# sourceMappingURL=User.js.map","import { __awaiter } from \"tslib\";\nimport { getIdFromLink, getPathFromLink, isResourceValid, ResourceType } from \"../../common\";\nimport { QueryIterator } from \"../../queryIterator\";\nimport { User } from \"./User\";\nimport { UserResponse } from \"./UserResponse\";\n/**\n * Used to create, upsert, query, and read all users.\n *\n * @see {@link User} to read, replace, or delete a specific User by id.\n */\nexport class Users {\n    /**\n     * @hidden\n     * @param database The parent {@link Database}.\n     */\n    constructor(database, clientContext) {\n        this.database = database;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const path = getPathFromLink(this.database.url, ResourceType.user);\n        const id = getIdFromLink(this.database.url);\n        return new QueryIterator(this.clientContext, query, options, (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path,\n                resourceType: ResourceType.user,\n                resourceId: id,\n                resultFn: (result) => result.Users,\n                query,\n                options: innerOptions\n            });\n        });\n    }\n    /**\n     * Read all users.\n     * @param options\n     * @example Read all users to array.\n     * ```typescript\n     * const {body: usersList} = await database.users.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n    /**\n     * Create a database user with the specified {@link UserDefinition}.\n     * @param body The specified {@link UserDefinition}.\n     * @param options\n     */\n    create(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.database.url, ResourceType.user);\n            const id = getIdFromLink(this.database.url);\n            const response = yield this.clientContext.create({\n                body,\n                path,\n                resourceType: ResourceType.user,\n                resourceId: id,\n                options\n            });\n            const ref = new User(this.database, response.result.id, this.clientContext);\n            return new UserResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n    /**\n     * Upsert a database user with a specified {@link UserDefinition}.\n     * @param body The specified {@link UserDefinition}.\n     * @param options\n     */\n    upsert(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const path = getPathFromLink(this.database.url, ResourceType.user);\n            const id = getIdFromLink(this.database.url);\n            const response = yield this.clientContext.upsert({\n                body,\n                path,\n                resourceType: ResourceType.user,\n                resourceId: id,\n                options\n            });\n            const ref = new User(this.database, response.result.id, this.clientContext);\n            return new UserResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n}\n//# sourceMappingURL=Users.js.map","import { ResourceResponse } from \"../../request/ResourceResponse\";\n/** Response object for Database operations */\nexport class DatabaseResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, database) {\n        super(resource, headers, statusCode);\n        this.database = database;\n    }\n}\n//# sourceMappingURL=DatabaseResponse.js.map","import { __awaiter } from \"tslib\";\nimport { createDatabaseUri, getIdFromLink, getPathFromLink, ResourceType } from \"../../common\";\nimport { Container, Containers } from \"../Container\";\nimport { User, Users } from \"../User\";\nimport { DatabaseResponse } from \"./DatabaseResponse\";\n/**\n * Operations for reading or deleting an existing database.\n *\n * @see {@link Databases} for creating new databases, and reading/querying all databases; use `client.databases`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `database.read()` before every single `item.read()` call, to ensure the database exists;\n * do this once on application start up.\n */\nexport class Database {\n    /** Returns a new {@link Database} instance.\n     *\n     * Note: the intention is to get this object from {@link CosmosClient} via `client.database(id)`, not to instantiate it yourself.\n     */\n    constructor(client, id, clientContext) {\n        this.client = client;\n        this.id = id;\n        this.clientContext = clientContext;\n        this.containers = new Containers(this, this.clientContext);\n        this.users = new Users(this, this.clientContext);\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return createDatabaseUri(this.id);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link Database} by id.\n     *\n     * Use `.containers` creating new containers, or querying/reading all containers.\n     *\n     * @example Delete a container\n     * ```typescript\n     * await client.database(\"<db id>\").container(\"<container id>\").delete();\n     * ```\n     */\n    container(id) {\n        return new Container(this, id, this.clientContext);\n    }\n    /**\n     * Used to read, replace, or delete a specific, existing {@link User} by id.\n     *\n     * Use `.users` for creating new users, or querying/reading all users.\n     */\n    user(id) {\n        return new User(this, id, this.clientContext);\n    }\n    /** Read the definition of the given Database. */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.read({\n                path,\n                resourceType: ResourceType.database,\n                resourceId: id,\n                options\n            });\n            return new DatabaseResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /** Delete the given Database. */\n    delete(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const path = getPathFromLink(this.url);\n            const id = getIdFromLink(this.url);\n            const response = yield this.clientContext.delete({\n                path,\n                resourceType: ResourceType.database,\n                resourceId: id,\n                options\n            });\n            return new DatabaseResponse(response.result, response.headers, response.code, this);\n        });\n    }\n}\n//# sourceMappingURL=Database.js.map","import { __awaiter } from \"tslib\";\nimport { Constants, isResourceValid, ResourceType, StatusCodes } from \"../../common\";\nimport { mergeHeaders } from \"../../queryExecutionContext\";\nimport { QueryIterator } from \"../../queryIterator\";\nimport { Database } from \"./Database\";\nimport { DatabaseResponse } from \"./DatabaseResponse\";\n/**\n * Operations for creating new databases, and reading/querying all databases\n *\n * @see {@link Database} for reading or deleting an existing database; use `client.database(id)`.\n *\n * Note: all these operations make calls against a fixed budget.\n * You should design your system such that these calls scale sublinearly with your application.\n * For instance, do not call `databases.readAll()` before every single `item.read()` call, to ensure the database exists;\n * do this once on application start up.\n */\nexport class Databases {\n    /**\n     * @hidden\n     * @param client The parent {@link CosmosClient} for the Database.\n     */\n    constructor(client, clientContext) {\n        this.client = client;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        const cb = (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path: \"/dbs\",\n                resourceType: ResourceType.database,\n                resourceId: \"\",\n                resultFn: (result) => result.Databases,\n                query,\n                options: innerOptions\n            });\n        };\n        return new QueryIterator(this.clientContext, query, options, cb);\n    }\n    /**\n     * Send a request for creating a database.\n     *\n     * A database manages users, permissions and a set of containers.\n     * Each Azure Cosmos DB Database Account is able to support multiple independent named databases,\n     * with the database being the logical container for data.\n     *\n     * Each Database consists of one or more containers, each of which in turn contain one or more\n     * documents. Since databases are an administrative resource, the Service Master Key will be\n     * required in order to access and successfully complete any action using the User APIs.\n     *\n     * @param body The {@link DatabaseDefinition} that represents the {@link Database} to be created.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     */\n    create(body, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            if (body.throughput) {\n                options.initialHeaders = Object.assign({}, options.initialHeaders, {\n                    [Constants.HttpHeaders.OfferThroughput]: body.throughput\n                });\n                delete body.throughput;\n            }\n            const path = \"/dbs\"; // TODO: constant\n            const response = yield this.clientContext.create({\n                body,\n                path,\n                resourceType: ResourceType.database,\n                resourceId: undefined,\n                options\n            });\n            const ref = new Database(this.client, body.id, this.clientContext);\n            return new DatabaseResponse(response.result, response.headers, response.code, ref);\n        });\n    }\n    /**\n     * Check if a database exists, and if it doesn't, create it.\n     * This will make a read operation based on the id in the `body`, then if it is not found, a create operation.\n     *\n     * A database manages users, permissions and a set of containers.\n     * Each Azure Cosmos DB Database Account is able to support multiple independent named databases,\n     * with the database being the logical container for data.\n     *\n     * Each Database consists of one or more containers, each of which in turn contain one or more\n     * documents. Since databases are an an administrative resource, the Service Master Key will be\n     * required in order to access and successfully complete any action using the User APIs.\n     *\n     * @param body The {@link DatabaseDefinition} that represents the {@link Database} to be created.\n     * @param options\n     */\n    createIfNotExists(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!body || body.id === null || body.id === undefined) {\n                throw new Error(\"body parameter must be an object with an id property\");\n            }\n            /*\n              1. Attempt to read the Database (based on an assumption that most databases will already exist, so its faster)\n              2. If it fails with NotFound error, attempt to create the db. Else, return the read results.\n            */\n            try {\n                const readResponse = yield this.client.database(body.id).read(options);\n                return readResponse;\n            }\n            catch (err) {\n                if (err.code === StatusCodes.NotFound) {\n                    const createResponse = yield this.create(body, options);\n                    // Must merge the headers to capture RU costskaty\n                    mergeHeaders(createResponse.headers, err.headers);\n                    return createResponse;\n                }\n                else {\n                    throw err;\n                }\n            }\n        });\n    }\n    // TODO: DatabaseResponse for QueryIterator?\n    /**\n     * Reads all databases.\n     * @param options Use to set options like response page size, continuation tokens, etc.\n     * @returns {@link QueryIterator} Allows you to return all databases in an array or iterate over them one at a time.\n     * @example Read all databases to array.\n     * ```typescript\n     * const {body: databaseList} = await client.databases.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\n//# sourceMappingURL=Databases.js.map","import { ResourceResponse } from \"../../request\";\nexport class OfferResponse extends ResourceResponse {\n    constructor(resource, headers, statusCode, offer) {\n        super(resource, headers, statusCode);\n        this.offer = offer;\n    }\n}\n//# sourceMappingURL=OfferResponse.js.map","import { __awaiter } from \"tslib\";\nimport { Constants, isResourceValid, ResourceType } from \"../../common\";\nimport { OfferResponse } from \"./OfferResponse\";\n/**\n * Use to read or replace an existing {@link Offer} by id.\n *\n * @see {@link Offers} to query or read all offers.\n */\nexport class Offer {\n    /**\n     * @hidden\n     * @param client The parent {@link CosmosClient} for the Database Account.\n     * @param id The id of the given {@link Offer}.\n     */\n    constructor(client, id, clientContext) {\n        this.client = client;\n        this.id = id;\n        this.clientContext = clientContext;\n    }\n    /**\n     * Returns a reference URL to the resource. Used for linking in Permissions.\n     */\n    get url() {\n        return `/${Constants.Path.OffersPathSegment}/${this.id}`;\n    }\n    /**\n     * Read the {@link OfferDefinition} for the given {@link Offer}.\n     * @param options\n     */\n    read(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.clientContext.read({\n                path: this.url,\n                resourceType: ResourceType.offer,\n                resourceId: this.id,\n                options\n            });\n            return new OfferResponse(response.result, response.headers, response.code, this);\n        });\n    }\n    /**\n     * Replace the given {@link Offer} with the specified {@link OfferDefinition}.\n     * @param body The specified {@link OfferDefinition}\n     * @param options\n     */\n    replace(body, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const err = {};\n            if (!isResourceValid(body, err)) {\n                throw err;\n            }\n            const response = yield this.clientContext.replace({\n                body,\n                path: this.url,\n                resourceType: ResourceType.offer,\n                resourceId: this.id,\n                options\n            });\n            return new OfferResponse(response.result, response.headers, response.code, this);\n        });\n    }\n}\n//# sourceMappingURL=Offer.js.map","import { ResourceType } from \"../../common\";\nimport { QueryIterator } from \"../../queryIterator\";\n/**\n * Use to query or read all Offers.\n *\n * @see {@link Offer} to read or replace an existing {@link Offer} by id.\n */\nexport class Offers {\n    /**\n     * @hidden\n     * @param client The parent {@link CosmosClient} for the offers.\n     */\n    constructor(client, clientContext) {\n        this.client = client;\n        this.clientContext = clientContext;\n    }\n    query(query, options) {\n        return new QueryIterator(this.clientContext, query, options, (innerOptions) => {\n            return this.clientContext.queryFeed({\n                path: \"/offers\",\n                resourceType: ResourceType.offer,\n                resourceId: \"\",\n                resultFn: (result) => result.Offers,\n                query,\n                options: innerOptions\n            });\n        });\n    }\n    /**\n     * Read all offers.\n     * @param options\n     * @example Read all offers to array.\n     * ```typescript\n     * const {body: offerList} = await client.offers.readAll().fetchAll();\n     * ```\n     */\n    readAll(options) {\n        return this.query(undefined, options);\n    }\n}\n//# sourceMappingURL=Offers.js.map","import { __awaiter } from \"tslib\";\n/**\n * Used to specify which type of events to execute this plug in on.\n *\n * @ignore\n */\nexport var PluginOn;\n(function (PluginOn) {\n    /**\n     * Will be executed per network request\n     */\n    PluginOn[\"request\"] = \"request\";\n    /**\n     * Will be executed per API operation\n     */\n    PluginOn[\"operation\"] = \"operation\";\n})(PluginOn || (PluginOn = {}));\n/**\n * @internal\n * @hidden\n * @ignore\n * @param requestContext\n * @param next\n * @param on\n */\nexport function executePlugins(requestContext, next, on) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (!requestContext.plugins) {\n            return next(requestContext, undefined);\n        }\n        let level = 0;\n        const _ = (inner) => {\n            if (++level >= inner.plugins.length) {\n                return next(requestContext, undefined);\n            }\n            else if (inner.plugins[level].on !== on) {\n                return _(requestContext);\n            }\n            else {\n                return inner.plugins[level].plugin(inner, _);\n            }\n        };\n        if (requestContext.plugins[level].on !== on) {\n            return _(requestContext);\n        }\n        else {\n            return requestContext.plugins[level].plugin(requestContext, _);\n        }\n    });\n}\n//# sourceMappingURL=Plugin.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { setAuthorizationHeader } from \"../auth\";\nimport { Constants, HTTPMethod, jsonStringifyAndEscapeNonASCII } from \"../common\";\n// ----------------------------------------------------------------------------\n// Utility methods\n//\n/** @hidden */\nfunction javaScriptFriendlyJSONStringify(s) {\n    // two line terminators (Line separator and Paragraph separator) are not needed to be escaped in JSON\n    // but are needed to be escaped in JavaScript.\n    return JSON.stringify(s)\n        .replace(/\\u2028/g, \"\\\\u2028\")\n        .replace(/\\u2029/g, \"\\\\u2029\");\n}\n/** @hidden */\nexport function bodyFromData(data) {\n    if (typeof data === \"object\") {\n        return javaScriptFriendlyJSONStringify(data);\n    }\n    return data;\n}\nconst JsonContentType = \"application/json\";\n/**\n * @ignore\n * @param param0\n */\nexport function getHeaders({ clientOptions, defaultHeaders, verb, path, resourceId, resourceType, options = {}, partitionKeyRangeId, useMultipleWriteLocations, partitionKey }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const headers = Object.assign({ [Constants.HttpHeaders.ResponseContinuationTokenLimitInKB]: 1, [Constants.HttpHeaders.EnableCrossPartitionQuery]: true }, defaultHeaders);\n        if (useMultipleWriteLocations) {\n            headers[Constants.HttpHeaders.ALLOW_MULTIPLE_WRITES] = true;\n        }\n        if (options.continuationTokenLimitInKB) {\n            headers[Constants.HttpHeaders.ResponseContinuationTokenLimitInKB] =\n                options.continuationTokenLimitInKB;\n        }\n        if (options.continuationToken) {\n            headers[Constants.HttpHeaders.Continuation] = options.continuationToken;\n        }\n        else if (options.continuation) {\n            headers[Constants.HttpHeaders.Continuation] = options.continuation;\n        }\n        if (options.preTriggerInclude) {\n            headers[Constants.HttpHeaders.PreTriggerInclude] =\n                options.preTriggerInclude.constructor === Array\n                    ? options.preTriggerInclude.join(\",\")\n                    : options.preTriggerInclude;\n        }\n        if (options.postTriggerInclude) {\n            headers[Constants.HttpHeaders.PostTriggerInclude] =\n                options.postTriggerInclude.constructor === Array\n                    ? options.postTriggerInclude.join(\",\")\n                    : options.postTriggerInclude;\n        }\n        if (options.offerType) {\n            headers[Constants.HttpHeaders.OfferType] = options.offerType;\n        }\n        if (options.offerThroughput) {\n            headers[Constants.HttpHeaders.OfferThroughput] = options.offerThroughput;\n        }\n        if (options.maxItemCount) {\n            headers[Constants.HttpHeaders.PageSize] = options.maxItemCount;\n        }\n        if (options.accessCondition) {\n            if (options.accessCondition.type === \"IfMatch\") {\n                headers[Constants.HttpHeaders.IfMatch] = options.accessCondition.condition;\n            }\n            else {\n                headers[Constants.HttpHeaders.IfNoneMatch] = options.accessCondition.condition;\n            }\n        }\n        if (options.useIncrementalFeed) {\n            headers[Constants.HttpHeaders.A_IM] = \"Incremental Feed\";\n        }\n        if (options.indexingDirective) {\n            headers[Constants.HttpHeaders.IndexingDirective] = options.indexingDirective;\n        }\n        if (options.consistencyLevel) {\n            headers[Constants.HttpHeaders.ConsistencyLevel] = options.consistencyLevel;\n        }\n        if (options.resourceTokenExpirySeconds) {\n            headers[Constants.HttpHeaders.ResourceTokenExpiry] = options.resourceTokenExpirySeconds;\n        }\n        if (options.sessionToken) {\n            headers[Constants.HttpHeaders.SessionToken] = options.sessionToken;\n        }\n        if (options.enableScanInQuery) {\n            headers[Constants.HttpHeaders.EnableScanInQuery] = options.enableScanInQuery;\n        }\n        if (options.populateQuotaInfo) {\n            headers[Constants.HttpHeaders.PopulateQuotaInfo] = options.populateQuotaInfo;\n        }\n        if (options.populateQueryMetrics) {\n            headers[Constants.HttpHeaders.PopulateQueryMetrics] = options.populateQueryMetrics;\n        }\n        if (options.maxDegreeOfParallelism !== undefined) {\n            headers[Constants.HttpHeaders.ParallelizeCrossPartitionQuery] = true;\n        }\n        if (options.populateQuotaInfo) {\n            headers[Constants.HttpHeaders.PopulateQuotaInfo] = true;\n        }\n        if (partitionKey !== undefined && !headers[Constants.HttpHeaders.PartitionKey]) {\n            if (partitionKey === null || !Array.isArray(partitionKey)) {\n                partitionKey = [partitionKey];\n            }\n            headers[Constants.HttpHeaders.PartitionKey] = jsonStringifyAndEscapeNonASCII(partitionKey);\n        }\n        if (clientOptions.key || clientOptions.tokenProvider) {\n            headers[Constants.HttpHeaders.XDate] = new Date().toUTCString();\n        }\n        if (verb === HTTPMethod.post || verb === HTTPMethod.put) {\n            if (!headers[Constants.HttpHeaders.ContentType]) {\n                headers[Constants.HttpHeaders.ContentType] = JsonContentType;\n            }\n        }\n        if (!headers[Constants.HttpHeaders.Accept]) {\n            headers[Constants.HttpHeaders.Accept] = JsonContentType;\n        }\n        if (partitionKeyRangeId !== undefined) {\n            headers[Constants.HttpHeaders.PartitionKeyRangeID] = partitionKeyRangeId;\n        }\n        if (options.enableScriptLogging) {\n            headers[Constants.HttpHeaders.EnableScriptLogging] = options.enableScriptLogging;\n        }\n        if (options.disableRUPerMinuteUsage) {\n            headers[Constants.HttpHeaders.DisableRUPerMinuteUsage] = true;\n        }\n        if (clientOptions.key ||\n            clientOptions.resourceTokens ||\n            clientOptions.tokenProvider ||\n            clientOptions.permissionFeed) {\n            yield setAuthorizationHeader(clientOptions, verb, path, resourceId, resourceType, headers);\n        }\n        return headers;\n    });\n}\n//# sourceMappingURL=request.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * @ignore\n */\nexport const TimeoutErrorCode = \"TimeoutError\";\nexport class TimeoutError extends Error {\n    constructor(message) {\n        super(message);\n        this.code = TimeoutErrorCode;\n        this.name = TimeoutErrorCode;\n    }\n}\n//# sourceMappingURL=TimeoutError.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { OperationType } from \"../common\";\nimport { TimeoutErrorCode } from \"../request/TimeoutError\";\n/**\n * @ignore\n */\n// Windows Socket Error Codes\nconst WindowsInterruptedFunctionCall = 10004;\n/**\n * @ignore\n */\nconst WindowsFileHandleNotValid = 10009;\n/**\n * @ignore\n */\nconst WindowsPermissionDenied = 10013;\n/**\n * @ignore\n */\nconst WindowsBadAddress = 10014;\n/**\n * @ignore\n */\nconst WindowsInvalidArgumnet = 10022;\n/**\n * @ignore\n */\nconst WindowsResourceTemporarilyUnavailable = 10035;\n/**\n * @ignore\n */\nconst WindowsOperationNowInProgress = 10036;\n/**\n * @ignore\n */\nconst WindowsAddressAlreadyInUse = 10048;\n/**\n * @ignore\n */\nconst WindowsConnectionResetByPeer = 10054;\n/**\n * @ignore\n */\nconst WindowsCannotSendAfterSocketShutdown = 10058;\n/**\n * @ignore\n */\nconst WindowsConnectionTimedOut = 10060;\n/**\n * @ignore\n */\nconst WindowsConnectionRefused = 10061;\n/**\n * @ignore\n */\nconst WindowsNameTooLong = 10063;\n/**\n * @ignore\n */\nconst WindowsHostIsDown = 10064;\n/**\n * @ignore\n */\nconst WindowsNoRouteTohost = 10065;\n/**\n * @ignore\n */\n// Linux Error Codes\n/**\n * @ignore\n */\nconst LinuxConnectionReset = \"ECONNRESET\";\n// Node Error Codes\n/**\n * @ignore\n */\nconst BrokenPipe = \"EPIPE\";\n/**\n * @ignore\n */\nconst CONNECTION_ERROR_CODES = [\n    WindowsInterruptedFunctionCall,\n    WindowsFileHandleNotValid,\n    WindowsPermissionDenied,\n    WindowsBadAddress,\n    WindowsInvalidArgumnet,\n    WindowsResourceTemporarilyUnavailable,\n    WindowsOperationNowInProgress,\n    WindowsAddressAlreadyInUse,\n    WindowsConnectionResetByPeer,\n    WindowsCannotSendAfterSocketShutdown,\n    WindowsConnectionTimedOut,\n    WindowsConnectionRefused,\n    WindowsNameTooLong,\n    WindowsHostIsDown,\n    WindowsNoRouteTohost,\n    LinuxConnectionReset,\n    TimeoutErrorCode,\n    BrokenPipe\n];\n/**\n * @ignore\n */\nfunction needsRetry(operationType, code) {\n    if ((operationType === OperationType.Read || operationType === OperationType.Query) &&\n        CONNECTION_ERROR_CODES.indexOf(code) !== -1) {\n        return true;\n    }\n    else {\n        return false;\n    }\n}\n/**\n * This class implements the default connection retry policy for requests.\n * @property {int} currentRetryAttemptCount           - Current retry attempt count.\n * @hidden\n * @ignore\n */\nexport class DefaultRetryPolicy {\n    constructor(operationType) {\n        this.operationType = operationType;\n        this.maxTries = 10;\n        this.currentRetryAttemptCount = 0;\n        this.retryAfterInMs = 1000;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param {object} err - Error returned by the request.\n     */\n    shouldRetry(err) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (err) {\n                if (this.currentRetryAttemptCount < this.maxTries &&\n                    needsRetry(this.operationType, err.code)) {\n                    this.currentRetryAttemptCount++;\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n}\n//# sourceMappingURL=defaultRetryPolicy.js.map","import { __awaiter } from \"tslib\";\nimport { isReadRequest } from \"../common/helper\";\n/**\n * This class implements the retry policy for endpoint discovery.\n * @hidden\n */\nexport class EndpointDiscoveryRetryPolicy {\n    /**\n     * @constructor EndpointDiscoveryRetryPolicy\n     * @param {object} globalEndpointManager The GlobalEndpointManager instance.\n     */\n    constructor(globalEndpointManager, operationType) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.operationType = operationType;\n        this.maxTries = EndpointDiscoveryRetryPolicy.maxTries;\n        this.currentRetryAttemptCount = 0;\n        this.retryAfterInMs = EndpointDiscoveryRetryPolicy.retryAfterInMs;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param {object} err - Error returned by the request.\n     */\n    shouldRetry(err, retryContext, locationEndpoint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!err) {\n                return false;\n            }\n            if (!retryContext || !locationEndpoint) {\n                return false;\n            }\n            if (!this.globalEndpointManager.enableEndpointDiscovery) {\n                return false;\n            }\n            if (this.currentRetryAttemptCount >= this.maxTries) {\n                return false;\n            }\n            this.currentRetryAttemptCount++;\n            if (isReadRequest(this.operationType)) {\n                yield this.globalEndpointManager.markCurrentLocationUnavailableForRead(locationEndpoint);\n            }\n            else {\n                yield this.globalEndpointManager.markCurrentLocationUnavailableForWrite(locationEndpoint);\n            }\n            retryContext.retryCount = this.currentRetryAttemptCount;\n            retryContext.clearSessionTokenNotAvailable = false;\n            retryContext.retryRequestOnPreferredLocations = false;\n            return true;\n        });\n    }\n}\nEndpointDiscoveryRetryPolicy.maxTries = 120; // TODO: Constant?\nEndpointDiscoveryRetryPolicy.retryAfterInMs = 1000;\n//# sourceMappingURL=endpointDiscoveryRetryPolicy.js.map","import { __awaiter } from \"tslib\";\n/**\n * This class implements the resource throttle retry policy for requests.\n * @hidden\n */\nexport class ResourceThrottleRetryPolicy {\n    /**\n     * @constructor ResourceThrottleRetryPolicy\n     * @param {int} maxTries - Max number of retries to be performed for a request.\n     * @param {int} fixedRetryIntervalInMs   - Fixed retry interval in milliseconds to wait between each \\\n     * retry ignoring the retryAfter returned as part of the response.\n     * @param {int} timeoutInSeconds               - Max wait time in seconds to wait for a request while the \\\n     * retries are happening.\n     */\n    constructor(maxTries = 9, fixedRetryIntervalInMs = 0, timeoutInSeconds = 30) {\n        this.maxTries = maxTries;\n        this.fixedRetryIntervalInMs = fixedRetryIntervalInMs;\n        /** Current retry attempt count. */\n        this.currentRetryAttemptCount = 0;\n        /** Cummulative wait time in milliseconds for a request while the retries are happening. */\n        this.cummulativeWaitTimeinMs = 0;\n        /** Max wait time in milliseconds to wait for a request while the retries are happening. */\n        this.retryAfterInMs = 0;\n        this.timeoutInMs = timeoutInSeconds * 1000;\n        this.currentRetryAttemptCount = 0;\n        this.cummulativeWaitTimeinMs = 0;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param {object} err - Error returned by the request.\n     */\n    shouldRetry(err) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: any custom error object\n            if (err) {\n                if (this.currentRetryAttemptCount < this.maxTries) {\n                    this.currentRetryAttemptCount++;\n                    this.retryAfterInMs = 0;\n                    if (this.fixedRetryIntervalInMs) {\n                        this.retryAfterInMs = this.fixedRetryIntervalInMs;\n                    }\n                    else if (err.retryAfterInMs) {\n                        this.retryAfterInMs = err.retryAfterInMs;\n                    }\n                    if (this.cummulativeWaitTimeinMs < this.timeoutInMs) {\n                        this.cummulativeWaitTimeinMs += this.retryAfterInMs;\n                        return true;\n                    }\n                }\n            }\n            return false;\n        });\n    }\n}\n//# sourceMappingURL=resourceThrottleRetryPolicy.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { isReadRequest } from \"../common\";\n/**\n * This class implements the retry policy for session consistent reads.\n * @hidden\n */\nexport class SessionRetryPolicy {\n    /**\n     * @constructor SessionReadRetryPolicy\n     * @param {object} globalEndpointManager                           - The GlobalEndpointManager instance.\n     * @property {object} request                                      - The Http request information\n     */\n    constructor(globalEndpointManager, resourceType, operationType, connectionPolicy) {\n        this.globalEndpointManager = globalEndpointManager;\n        this.resourceType = resourceType;\n        this.operationType = operationType;\n        this.connectionPolicy = connectionPolicy;\n        /** Current retry attempt count. */\n        this.currentRetryAttemptCount = 0;\n        /** Retry interval in milliseconds. */\n        this.retryAfterInMs = 0;\n    }\n    /**\n     * Determines whether the request should be retried or not.\n     * @param {object} err - Error returned by the request.\n     * @param {function} callback - The callback function which takes bool argument which specifies whether the request\\\n     * will be retried or not.\n     */\n    shouldRetry(err, retryContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!err) {\n                return false;\n            }\n            if (!retryContext) {\n                return false;\n            }\n            if (!this.connectionPolicy.enableEndpointDiscovery) {\n                return false;\n            }\n            if (this.globalEndpointManager.canUseMultipleWriteLocations(this.resourceType, this.operationType)) {\n                // If we can write to multiple locations, we should against every write endpoint until we succeed\n                const endpoints = isReadRequest(this.operationType)\n                    ? yield this.globalEndpointManager.getReadEndpoints()\n                    : yield this.globalEndpointManager.getWriteEndpoints();\n                if (this.currentRetryAttemptCount > endpoints.length) {\n                    return false;\n                }\n                else {\n                    retryContext.retryCount = ++this.currentRetryAttemptCount - 1;\n                    retryContext.retryRequestOnPreferredLocations = this.currentRetryAttemptCount > 1;\n                    retryContext.clearSessionTokenNotAvailable =\n                        this.currentRetryAttemptCount === endpoints.length;\n                    return true;\n                }\n            }\n            else {\n                if (this.currentRetryAttemptCount > 1) {\n                    return false;\n                }\n                else {\n                    retryContext.retryCount = ++this.currentRetryAttemptCount - 1;\n                    retryContext.retryRequestOnPreferredLocations = false; // Forces all operations to primary write endpoint\n                    retryContext.clearSessionTokenNotAvailable = true;\n                    return true;\n                }\n            }\n        });\n    }\n}\n//# sourceMappingURL=sessionRetryPolicy.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Constants } from \"../common/constants\";\nimport { sleep } from \"../common/helper\";\nimport { StatusCodes, SubStatusCodes } from \"../common/statusCodes\";\nimport { DefaultRetryPolicy } from \"./defaultRetryPolicy\";\nimport { EndpointDiscoveryRetryPolicy } from \"./endpointDiscoveryRetryPolicy\";\nimport { ResourceThrottleRetryPolicy } from \"./resourceThrottleRetryPolicy\";\nimport { SessionRetryPolicy } from \"./sessionRetryPolicy\";\n/**\n *\n * @param param0\n * @ignore\n */\nexport function execute({ retryContext = {}, retryPolicies, requestContext, executeRequest }) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // TODO: any response\n        if (!retryPolicies) {\n            retryPolicies = {\n                endpointDiscoveryRetryPolicy: new EndpointDiscoveryRetryPolicy(requestContext.globalEndpointManager, requestContext.operationType),\n                resourceThrottleRetryPolicy: new ResourceThrottleRetryPolicy(requestContext.connectionPolicy.retryOptions.maxRetryAttemptCount, requestContext.connectionPolicy.retryOptions.fixedRetryIntervalInMilliseconds, requestContext.connectionPolicy.retryOptions.maxWaitTimeInSeconds),\n                sessionReadRetryPolicy: new SessionRetryPolicy(requestContext.globalEndpointManager, requestContext.resourceType, requestContext.operationType, requestContext.connectionPolicy),\n                defaultRetryPolicy: new DefaultRetryPolicy(requestContext.operationType)\n            };\n        }\n        if (retryContext && retryContext.clearSessionTokenNotAvailable) {\n            requestContext.client.clearSessionToken(requestContext.path);\n        }\n        requestContext.endpoint = yield requestContext.globalEndpointManager.resolveServiceEndpoint(requestContext.resourceType, requestContext.operationType);\n        try {\n            const response = yield executeRequest(requestContext);\n            response.headers[Constants.ThrottleRetryCount] =\n                retryPolicies.resourceThrottleRetryPolicy.currentRetryAttemptCount;\n            response.headers[Constants.ThrottleRetryWaitTimeInMs] =\n                retryPolicies.resourceThrottleRetryPolicy.cummulativeWaitTimeinMs;\n            return response;\n        }\n        catch (err) {\n            // TODO: any error\n            let retryPolicy = null;\n            const headers = err.headers || {};\n            if (err.code === StatusCodes.Forbidden &&\n                (err.substatus === SubStatusCodes.DatabaseAccountNotFound ||\n                    err.substatus === SubStatusCodes.WriteForbidden)) {\n                retryPolicy = retryPolicies.endpointDiscoveryRetryPolicy;\n            }\n            else if (err.code === StatusCodes.TooManyRequests) {\n                retryPolicy = retryPolicies.resourceThrottleRetryPolicy;\n            }\n            else if (err.code === StatusCodes.NotFound &&\n                err.substatus === SubStatusCodes.ReadSessionNotAvailable) {\n                retryPolicy = retryPolicies.sessionReadRetryPolicy;\n            }\n            else {\n                retryPolicy = retryPolicies.defaultRetryPolicy;\n            }\n            const results = yield retryPolicy.shouldRetry(err, retryContext, requestContext.endpoint);\n            if (!results) {\n                headers[Constants.ThrottleRetryCount] =\n                    retryPolicies.resourceThrottleRetryPolicy.currentRetryAttemptCount;\n                headers[Constants.ThrottleRetryWaitTimeInMs] =\n                    retryPolicies.resourceThrottleRetryPolicy.cummulativeWaitTimeinMs;\n                err.headers = Object.assign(Object.assign({}, err.headers), headers);\n                throw err;\n            }\n            else {\n                requestContext.retryCount++;\n                const newUrl = results[1]; // TODO: any hack\n                if (newUrl !== undefined) {\n                    requestContext.endpoint = newUrl;\n                }\n                yield sleep(retryPolicy.retryAfterInMs);\n                return execute({\n                    executeRequest,\n                    requestContext,\n                    retryContext,\n                    retryPolicies\n                });\n            }\n        }\n    });\n}\n//# sourceMappingURL=retryUtility.js.map","import { isNode } from \"../common\";\n/**\n * @ignore\n */\nexport let defaultHttpAgent;\n/**\n * @ignore\n */\nexport let defaultHttpsAgent;\nif (isNode) {\n    // tslint:disable-next-line:no-var-requires\n    const https = require(\"https\");\n    // tslint:disable-next-line:no-var-requires\n    const tls = require(\"tls\");\n    // minVersion only available in Node 10+\n    if (tls.DEFAULT_MIN_VERSION) {\n        defaultHttpsAgent = new https.Agent({\n            keepAlive: true,\n            minVersion: \"TLSv1.2\"\n        });\n    }\n    else {\n        // Remove when Node 8 support has been dropped\n        defaultHttpsAgent = new https.Agent({\n            keepAlive: true,\n            secureProtocol: \"TLSv1_2_method\"\n        });\n    }\n    // tslint:disable-next-line:no-var-requires\n    const http = require(\"http\");\n    defaultHttpAgent = new http.Agent({\n        keepAlive: true\n    });\n}\n//# sourceMappingURL=defaultAgent.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport AbortController from \"node-abort-controller\";\nimport fetch from \"node-fetch\";\nimport { trimSlashes } from \"../common\";\nimport { Constants } from \"../common/constants\";\nimport { logger } from \"../common/logger\";\nimport { executePlugins, PluginOn } from \"../plugins/Plugin\";\nimport * as RetryUtility from \"../retry/retryUtility\";\nimport { defaultHttpAgent, defaultHttpsAgent } from \"./defaultAgent\";\nimport { bodyFromData } from \"./request\";\nimport { TimeoutError } from \"./TimeoutError\";\n/** @hidden */\nconst log = logger(\"RequestHandler\");\nfunction executeRequest(requestContext) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return executePlugins(requestContext, httpRequest, PluginOn.request);\n    });\n}\n/**\n * @ignore\n * @param requestContext\n */\nfunction httpRequest(requestContext) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const controller = new AbortController();\n        const signal = controller.signal;\n        // Wrap users passed abort events and call our own internal abort()\n        const userSignal = requestContext.options && requestContext.options.abortSignal;\n        if (userSignal) {\n            if (userSignal) {\n                controller.abort();\n            }\n            else {\n                userSignal.addEventListener(\"abort\", () => {\n                    controller.abort();\n                });\n            }\n        }\n        const timeout = setTimeout(() => {\n            controller.abort();\n        }, requestContext.connectionPolicy.requestTimeout);\n        let response;\n        if (requestContext.body) {\n            requestContext.body = bodyFromData(requestContext.body);\n        }\n        try {\n            response = yield fetch(trimSlashes(requestContext.endpoint) + requestContext.path, {\n                method: requestContext.method,\n                headers: requestContext.headers,\n                agent: (parsedUrl) => {\n                    if (requestContext.requestAgent) {\n                        return requestContext.requestAgent;\n                    }\n                    return parsedUrl.protocol === \"http\" ? defaultHttpAgent : defaultHttpsAgent;\n                },\n                signal,\n                body: requestContext.body\n            });\n        }\n        catch (error) {\n            if (error.name === \"AbortError\") {\n                // If the user passed signal caused the abort, cancel the timeout and rethrow the error\n                if (userSignal && userSignal.aborted === true) {\n                    clearTimeout(timeout);\n                    throw error;\n                }\n                // If the user didn't cancel, it must be an abort we called due to timeout\n                throw new TimeoutError();\n            }\n            throw error;\n        }\n        clearTimeout(timeout);\n        const result = response.status === 204 || response.status === 304 ? null : yield response.json();\n        const headers = {};\n        response.headers.forEach((value, key) => {\n            headers[key] = value;\n        });\n        const substatus = headers[Constants.HttpHeaders.SubStatus]\n            ? parseInt(headers[Constants.HttpHeaders.SubStatus], 10)\n            : undefined;\n        if (response.status >= 400) {\n            const errorResponse = new Error(result.message);\n            log.warn(response.status +\n                \" \" +\n                requestContext.endpoint +\n                \" \" +\n                requestContext.path +\n                \" \" +\n                result.message);\n            errorResponse.code = response.status;\n            errorResponse.body = result;\n            errorResponse.headers = headers;\n            if (Constants.HttpHeaders.ActivityId in headers) {\n                errorResponse.activityId = headers[Constants.HttpHeaders.ActivityId];\n            }\n            if (Constants.HttpHeaders.SubStatus in headers) {\n                errorResponse.substatus = substatus;\n            }\n            if (Constants.HttpHeaders.RetryAfterInMs in headers) {\n                errorResponse.retryAfterInMs = parseInt(headers[Constants.HttpHeaders.RetryAfterInMs], 10);\n                Object.defineProperty(errorResponse, \"retryAfterInMilliseconds\", {\n                    get: () => {\n                        return errorResponse.retryAfterInMs;\n                    }\n                });\n            }\n            throw errorResponse;\n        }\n        return {\n            headers,\n            result,\n            code: response.status,\n            substatus\n        };\n    });\n}\n/**\n * @ignore\n * @param requestContext\n */\nexport function request(requestContext) {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (requestContext.body) {\n            requestContext.body = bodyFromData(requestContext.body);\n            if (!requestContext.body) {\n                throw new Error(\"parameter data must be a javascript object, string, or Buffer\");\n            }\n        }\n        return RetryUtility.execute({\n            requestContext,\n            executeRequest\n        });\n    });\n}\n//# sourceMappingURL=RequestHandler.js.map","export default function atob(str) {\n    return Buffer.from(str, \"base64\").toString(\"binary\");\n}\n//# sourceMappingURL=atob.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\n/**\n * Models vector clock bases session token. Session token has the following format:\n * {Version}#{GlobalLSN}#{RegionId1}={LocalLsn1}#{RegionId2}={LocalLsn2}....#{RegionIdN}={LocalLsnN}\n * 'Version' captures the configuration number of the partition which returned this session token.\n * 'Version' is incremented everytime topology of the partition is updated (say due to Add/Remove/Failover).\n *\n * The choice of separators '#' and '=' is important. Separators ';' and ',' are used to delimit\n * per-partitionKeyRange session token\n * @hidden\n * @private\n *\n */\nexport class VectorSessionToken {\n    constructor(version, globalLsn, localLsnByregion, sessionToken) {\n        this.version = version;\n        this.globalLsn = globalLsn;\n        this.localLsnByregion = localLsnByregion;\n        this.sessionToken = sessionToken;\n        if (!this.sessionToken) {\n            const regionAndLocalLsn = [];\n            for (const [key, value] of this.localLsnByregion.entries()) {\n                regionAndLocalLsn.push(`${key}${VectorSessionToken.REGION_PROGRESS_SEPARATOR}${value}`);\n            }\n            const regionProgress = regionAndLocalLsn.join(VectorSessionToken.SEGMENT_SEPARATOR);\n            if (regionProgress === \"\") {\n                this.sessionToken = `${this.version}${VectorSessionToken.SEGMENT_SEPARATOR}${this.globalLsn}`;\n            }\n            else {\n                this.sessionToken = `${this.version}${VectorSessionToken.SEGMENT_SEPARATOR}${this.globalLsn}${VectorSessionToken.SEGMENT_SEPARATOR}${regionProgress}`;\n            }\n        }\n    }\n    static create(sessionToken) {\n        if (!sessionToken) {\n            return null;\n        }\n        const [versionStr, globalLsnStr, ...regionSegments] = sessionToken.split(VectorSessionToken.SEGMENT_SEPARATOR);\n        const version = parseInt(versionStr, 10);\n        const globalLsn = parseFloat(globalLsnStr);\n        if (typeof version !== \"number\" || typeof globalLsn !== \"number\") {\n            return null;\n        }\n        const lsnByRegion = new Map();\n        for (const regionSegment of regionSegments) {\n            const [regionIdStr, localLsnStr] = regionSegment.split(VectorSessionToken.REGION_PROGRESS_SEPARATOR);\n            if (!regionIdStr || !localLsnStr) {\n                return null;\n            }\n            const regionId = parseInt(regionIdStr, 10);\n            let localLsn;\n            try {\n                localLsn = localLsnStr;\n            }\n            catch (err) {\n                // TODO: log error\n                return null;\n            }\n            if (typeof regionId !== \"number\") {\n                return null;\n            }\n            lsnByRegion.set(regionId, localLsn);\n        }\n        return new VectorSessionToken(version, globalLsn, lsnByRegion, sessionToken);\n    }\n    equals(other) {\n        return !other\n            ? false\n            : this.version === other.version &&\n                this.globalLsn === other.globalLsn &&\n                this.areRegionProgressEqual(other.localLsnByregion);\n    }\n    merge(other) {\n        if (other == null) {\n            throw new Error(\"other (Vector Session Token) must not be null\");\n        }\n        if (this.version === other.version &&\n            this.localLsnByregion.size !== other.localLsnByregion.size) {\n            throw new Error(`Compared session tokens ${this.sessionToken} and ${other.sessionToken} have unexpected regions`);\n        }\n        const [higherVersionSessionToken, lowerVersionSessionToken] = this.version < other.version ? [other, this] : [this, other];\n        const highestLocalLsnByRegion = new Map();\n        for (const [regionId, highLocalLsn] of higherVersionSessionToken.localLsnByregion.entries()) {\n            const lowLocalLsn = lowerVersionSessionToken.localLsnByregion.get(regionId);\n            if (lowLocalLsn) {\n                highestLocalLsnByRegion.set(regionId, max(highLocalLsn, lowLocalLsn));\n            }\n            else if (this.version === other.version) {\n                throw new Error(`Compared session tokens have unexpected regions. Session 1: ${this.sessionToken} - Session 2: ${this.sessionToken}`);\n            }\n            else {\n                highestLocalLsnByRegion.set(regionId, highLocalLsn);\n            }\n        }\n        return new VectorSessionToken(Math.max(this.version, other.version), Math.max(this.globalLsn, other.globalLsn), highestLocalLsnByRegion);\n    }\n    toString() {\n        return this.sessionToken;\n    }\n    areRegionProgressEqual(other) {\n        if (this.localLsnByregion.size !== other.size) {\n            return false;\n        }\n        for (const [regionId, localLsn] of this.localLsnByregion.entries()) {\n            const otherLocalLsn = other.get(regionId);\n            if (localLsn !== otherLocalLsn) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nVectorSessionToken.SEGMENT_SEPARATOR = \"#\";\nVectorSessionToken.REGION_PROGRESS_SEPARATOR = \"=\";\n/**\n * @ignore\n * @param int1\n * @param int2\n */\nfunction max(int1, int2) {\n    // NOTE: This only works for positive numbers\n    if (int1.length === int2.length) {\n        return int1 > int2 ? int1 : int2;\n    }\n    else if (int1.length > int2.length) {\n        return int1;\n    }\n    else {\n        return int2;\n    }\n}\n//# sourceMappingURL=VectorSessionToken.js.map","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport atob from \"../utils/atob\";\nimport { Constants, getContainerLink, OperationType, trimSlashes } from \"../common\";\nimport { VectorSessionToken } from \"./VectorSessionToken\";\n/** @hidden */\nexport class SessionContainer {\n    constructor(collectionNameToCollectionResourceId = new Map(), collectionResourceIdToSessionTokens = new Map()) {\n        this.collectionNameToCollectionResourceId = collectionNameToCollectionResourceId;\n        this.collectionResourceIdToSessionTokens = collectionResourceIdToSessionTokens;\n    }\n    get(request) {\n        if (!request) {\n            throw new Error(\"request cannot be null\");\n        }\n        const collectionName = getContainerLink(trimSlashes(request.resourceAddress));\n        const rangeIdToTokenMap = this.getPartitionKeyRangeIdToTokenMap(collectionName);\n        return SessionContainer.getCombinedSessionTokenString(rangeIdToTokenMap);\n    }\n    remove(request) {\n        let collectionResourceId;\n        const resourceAddress = trimSlashes(request.resourceAddress);\n        const collectionName = getContainerLink(resourceAddress);\n        if (collectionName) {\n            collectionResourceId = this.collectionNameToCollectionResourceId.get(collectionName);\n            this.collectionNameToCollectionResourceId.delete(collectionName);\n        }\n        if (collectionResourceId !== undefined) {\n            this.collectionResourceIdToSessionTokens.delete(collectionResourceId);\n        }\n    }\n    set(request, resHeaders) {\n        // TODO: we check the master logic a few different places. Might not need it.\n        if (!resHeaders ||\n            SessionContainer.isReadingFromMaster(request.resourceType, request.operationType)) {\n            return;\n        }\n        const sessionTokenString = resHeaders[Constants.HttpHeaders.SessionToken];\n        if (!sessionTokenString) {\n            return;\n        }\n        const containerName = this.getContainerName(request, resHeaders);\n        const ownerId = !request.isNameBased\n            ? request.resourceId\n            : resHeaders[Constants.HttpHeaders.OwnerId] || request.resourceId;\n        if (!ownerId) {\n            return;\n        }\n        if (containerName && this.validateOwnerID(ownerId)) {\n            if (!this.collectionResourceIdToSessionTokens.has(ownerId)) {\n                this.collectionResourceIdToSessionTokens.set(ownerId, new Map());\n            }\n            if (!this.collectionNameToCollectionResourceId.has(containerName)) {\n                this.collectionNameToCollectionResourceId.set(containerName, ownerId);\n            }\n            const containerSessionContainer = this.collectionResourceIdToSessionTokens.get(ownerId);\n            SessionContainer.compareAndSetToken(sessionTokenString, containerSessionContainer);\n        }\n    }\n    validateOwnerID(ownerId) {\n        // If ownerId contains exactly 8 bytes it represents a unique database+collection identifier. Otherwise it represents another resource\n        // The first 4 bytes are the database. The last 4 bytes are the collection.\n        // Cosmos rids potentially contain \"-\" which is an invalid character in the browser atob implementation\n        // See https://en.wikipedia.org/wiki/Base64#Filenames\n        return atob(ownerId.replace(/-/g, \"/\")).length === 8;\n    }\n    getPartitionKeyRangeIdToTokenMap(collectionName) {\n        let rangeIdToTokenMap = null;\n        if (collectionName && this.collectionNameToCollectionResourceId.has(collectionName)) {\n            rangeIdToTokenMap = this.collectionResourceIdToSessionTokens.get(this.collectionNameToCollectionResourceId.get(collectionName));\n        }\n        return rangeIdToTokenMap;\n    }\n    static getCombinedSessionTokenString(tokens) {\n        if (!tokens || tokens.size === 0) {\n            return SessionContainer.EMPTY_SESSION_TOKEN;\n        }\n        let result = \"\";\n        for (const [range, token] of tokens.entries()) {\n            result +=\n                range +\n                    SessionContainer.SESSION_TOKEN_PARTITION_SPLITTER +\n                    token.toString() +\n                    SessionContainer.SESSION_TOKEN_SEPARATOR;\n        }\n        return result.slice(0, -1);\n    }\n    static compareAndSetToken(newTokenString, containerSessionTokens) {\n        if (!newTokenString) {\n            return;\n        }\n        const partitionsParts = newTokenString.split(SessionContainer.SESSION_TOKEN_SEPARATOR);\n        for (const partitionPart of partitionsParts) {\n            const newTokenParts = partitionPart.split(SessionContainer.SESSION_TOKEN_PARTITION_SPLITTER);\n            if (newTokenParts.length !== 2) {\n                return;\n            }\n            const range = newTokenParts[0];\n            const newToken = VectorSessionToken.create(newTokenParts[1]);\n            const tokenForRange = !containerSessionTokens.get(range)\n                ? newToken\n                : containerSessionTokens.get(range).merge(newToken);\n            containerSessionTokens.set(range, tokenForRange);\n        }\n    }\n    // TODO: have a assert if the type doesn't mastch known types\n    static isReadingFromMaster(resourceType, operationType) {\n        if (resourceType === Constants.Path.OffersPathSegment ||\n            resourceType === Constants.Path.DatabasesPathSegment ||\n            resourceType === Constants.Path.UsersPathSegment ||\n            resourceType === Constants.Path.PermissionsPathSegment ||\n            resourceType === Constants.Path.TopologyPathSegment ||\n            resourceType === Constants.Path.DatabaseAccountPathSegment ||\n            resourceType === Constants.Path.PartitionKeyRangesPathSegment ||\n            (resourceType === Constants.Path.CollectionsPathSegment &&\n                operationType === OperationType.Query)) {\n            return true;\n        }\n        return false;\n    }\n    getContainerName(request, headers) {\n        let ownerFullName = headers[Constants.HttpHeaders.OwnerFullName];\n        if (!ownerFullName) {\n            ownerFullName = trimSlashes(request.resourceAddress);\n        }\n        return getContainerLink(ownerFullName);\n    }\n}\nSessionContainer.EMPTY_SESSION_TOKEN = \"\";\nSessionContainer.SESSION_TOKEN_SEPARATOR = \",\";\nSessionContainer.SESSION_TOKEN_PARTITION_SPLITTER = \":\";\n//# sourceMappingURL=sessionContainer.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport uuid from \"uuid/v4\";\nimport { Constants, HTTPMethod, OperationType, ResourceType } from \"./common/constants\";\nimport { getIdFromLink, getPathFromLink, parseLink } from \"./common/helper\";\nimport { logger } from \"./common/logger\";\nimport { StatusCodes, SubStatusCodes } from \"./common/statusCodes\";\nimport { ConsistencyLevel, DatabaseAccount } from \"./documents\";\nimport { executePlugins, PluginOn } from \"./plugins/Plugin\";\nimport { QueryIterator } from \"./queryIterator\";\nimport { getHeaders } from \"./request/request\";\nimport { request as executeRequest } from \"./request/RequestHandler\";\nimport { SessionContainer } from \"./session/sessionContainer\";\n/** @hidden */\nconst log = logger(\"ClientContext\");\nconst QueryJsonContentType = \"application/query+json\";\n/**\n * @hidden\n * @ignore\n */\nexport class ClientContext {\n    constructor(cosmosClientOptions, globalEndpointManager) {\n        this.cosmosClientOptions = cosmosClientOptions;\n        this.globalEndpointManager = globalEndpointManager;\n        this.connectionPolicy = cosmosClientOptions.connectionPolicy;\n        this.sessionContainer = new SessionContainer();\n        this.partitionKeyDefinitionCache = {};\n    }\n    /** @ignore */\n    read({ path, resourceType, resourceId, options = {}, partitionKey }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const request = {\n                    globalEndpointManager: this.globalEndpointManager,\n                    requestAgent: this.cosmosClientOptions.agent,\n                    connectionPolicy: this.connectionPolicy,\n                    method: HTTPMethod.get,\n                    path,\n                    operationType: OperationType.Read,\n                    client: this,\n                    resourceId,\n                    options,\n                    resourceType,\n                    plugins: this.cosmosClientOptions.plugins,\n                    partitionKey\n                };\n                request.headers = yield this.buildHeaders(request);\n                this.applySessionToken(request);\n                // read will use ReadEndpoint since it uses GET operation\n                request.endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request.resourceType, request.operationType);\n                const response = yield executePlugins(request, executeRequest, PluginOn.operation);\n                this.captureSessionToken(undefined, path, OperationType.Read, response.headers);\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, OperationType.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    queryFeed({ path, resourceType, resourceId, resultFn, query, options, partitionKeyRangeId, partitionKey }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Query operations will use ReadEndpoint even though it uses\n            // GET(for queryFeed) and POST(for regular query operations)\n            const request = {\n                globalEndpointManager: this.globalEndpointManager,\n                requestAgent: this.cosmosClientOptions.agent,\n                connectionPolicy: this.connectionPolicy,\n                method: HTTPMethod.get,\n                path,\n                operationType: OperationType.Query,\n                client: this,\n                partitionKeyRangeId,\n                resourceId,\n                resourceType,\n                options,\n                body: query,\n                plugins: this.cosmosClientOptions.plugins,\n                partitionKey\n            };\n            const requestId = uuid();\n            if (query !== undefined) {\n                request.method = HTTPMethod.post;\n            }\n            request.endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request.resourceType, request.operationType);\n            request.headers = yield this.buildHeaders(request);\n            if (query !== undefined) {\n                request.headers[Constants.HttpHeaders.IsQuery] = \"true\";\n                request.headers[Constants.HttpHeaders.ContentType] = QueryJsonContentType;\n                if (typeof query === \"string\") {\n                    request.body = { query }; // Converts query text to query object.\n                }\n            }\n            this.applySessionToken(request);\n            log.info(\"query \" +\n                requestId +\n                \" started\" +\n                (request.partitionKeyRangeId ? \" pkrid: \" + request.partitionKeyRangeId : \"\"));\n            log.silly(request);\n            const start = Date.now();\n            const response = yield executeRequest(request);\n            log.info(\"query \" + requestId + \" finished - \" + (Date.now() - start) + \"ms\");\n            this.captureSessionToken(undefined, path, OperationType.Query, response.headers);\n            return this.processQueryFeedResponse(response, !!query, resultFn);\n        });\n    }\n    getQueryPlan(path, resourceType, resourceId, query, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = {\n                globalEndpointManager: this.globalEndpointManager,\n                requestAgent: this.cosmosClientOptions.agent,\n                connectionPolicy: this.connectionPolicy,\n                method: HTTPMethod.post,\n                path,\n                operationType: OperationType.Read,\n                client: this,\n                resourceId,\n                resourceType,\n                options,\n                body: query,\n                plugins: this.cosmosClientOptions.plugins\n            };\n            request.endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request.resourceType, request.operationType);\n            request.headers = yield this.buildHeaders(request);\n            request.headers[Constants.HttpHeaders.IsQueryPlan] = \"True\";\n            request.headers[Constants.HttpHeaders.QueryVersion] = \"1.4\";\n            request.headers[Constants.HttpHeaders.SupportedQueryFeatures] =\n                \"NonValueAggregate, Aggregate, Distinct, MultipleOrderBy, OffsetAndLimit, OrderBy, Top, CompositeAggregate, GroupBy, MultipleAggregates\";\n            request.headers[Constants.HttpHeaders.ContentType] = QueryJsonContentType;\n            if (typeof query === \"string\") {\n                request.body = { query }; // Converts query text to query object.\n            }\n            this.applySessionToken(request);\n            const response = yield executeRequest(request);\n            this.captureSessionToken(undefined, path, OperationType.Query, response.headers);\n            return response;\n        });\n    }\n    queryPartitionKeyRanges(collectionLink, query, options) {\n        const path = getPathFromLink(collectionLink, ResourceType.pkranges);\n        const id = getIdFromLink(collectionLink);\n        const cb = (innerOptions) => {\n            return this.queryFeed({\n                path,\n                resourceType: ResourceType.pkranges,\n                resourceId: id,\n                resultFn: (result) => result.PartitionKeyRanges,\n                query,\n                options: innerOptions\n            });\n        };\n        return new QueryIterator(this, query, options, cb);\n    }\n    delete({ path, resourceType, resourceId, options = {}, partitionKey }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const request = {\n                    globalEndpointManager: this.globalEndpointManager,\n                    requestAgent: this.cosmosClientOptions.agent,\n                    connectionPolicy: this.connectionPolicy,\n                    method: HTTPMethod.delete,\n                    client: this,\n                    operationType: OperationType.Delete,\n                    path,\n                    resourceType,\n                    options,\n                    resourceId,\n                    plugins: this.cosmosClientOptions.plugins,\n                    partitionKey\n                };\n                request.headers = yield this.buildHeaders(request);\n                this.applySessionToken(request);\n                // deleteResource will use WriteEndpoint since it uses DELETE operation\n                request.endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request.resourceType, request.operationType);\n                const response = yield executePlugins(request, executeRequest, PluginOn.operation);\n                if (parseLink(path).type !== \"colls\") {\n                    this.captureSessionToken(undefined, path, OperationType.Delete, response.headers);\n                }\n                else {\n                    this.clearSessionToken(path);\n                }\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, OperationType.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    create({ body, path, resourceType, resourceId, options = {}, partitionKey }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const request = {\n                    globalEndpointManager: this.globalEndpointManager,\n                    requestAgent: this.cosmosClientOptions.agent,\n                    connectionPolicy: this.connectionPolicy,\n                    method: HTTPMethod.post,\n                    client: this,\n                    operationType: OperationType.Create,\n                    path,\n                    resourceType,\n                    resourceId,\n                    body,\n                    options,\n                    plugins: this.cosmosClientOptions.plugins,\n                    partitionKey\n                };\n                request.headers = yield this.buildHeaders(request);\n                // create will use WriteEndpoint since it uses POST operation\n                this.applySessionToken(request);\n                request.endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request.resourceType, request.operationType);\n                const response = yield executePlugins(request, executeRequest, PluginOn.operation);\n                this.captureSessionToken(undefined, path, OperationType.Create, response.headers);\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, OperationType.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    processQueryFeedResponse(res, isQuery, resultFn) {\n        if (isQuery) {\n            return { result: resultFn(res.result), headers: res.headers, code: res.code };\n        }\n        else {\n            const newResult = resultFn(res.result).map((body) => body);\n            return { result: newResult, headers: res.headers, code: res.code };\n        }\n    }\n    applySessionToken(requestContext) {\n        const request = this.getSessionParams(requestContext.path);\n        if (requestContext.headers && requestContext.headers[Constants.HttpHeaders.SessionToken]) {\n            return;\n        }\n        const sessionConsistency = requestContext.headers[Constants.HttpHeaders.ConsistencyLevel];\n        if (!sessionConsistency) {\n            return;\n        }\n        if (sessionConsistency !== ConsistencyLevel.Session) {\n            return;\n        }\n        if (request.resourceAddress) {\n            const sessionToken = this.sessionContainer.get(request);\n            if (sessionToken) {\n                requestContext.headers[Constants.HttpHeaders.SessionToken] = sessionToken;\n            }\n        }\n    }\n    replace({ body, path, resourceType, resourceId, options = {}, partitionKey }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const request = {\n                    globalEndpointManager: this.globalEndpointManager,\n                    requestAgent: this.cosmosClientOptions.agent,\n                    connectionPolicy: this.connectionPolicy,\n                    method: HTTPMethod.put,\n                    client: this,\n                    operationType: OperationType.Replace,\n                    path,\n                    resourceType,\n                    body,\n                    resourceId,\n                    options,\n                    plugins: this.cosmosClientOptions.plugins,\n                    partitionKey\n                };\n                request.headers = yield this.buildHeaders(request);\n                this.applySessionToken(request);\n                // replace will use WriteEndpoint since it uses PUT operation\n                request.endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request.resourceType, request.operationType);\n                const response = yield executePlugins(request, executeRequest, PluginOn.operation);\n                this.captureSessionToken(undefined, path, OperationType.Replace, response.headers);\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, OperationType.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    upsert({ body, path, resourceType, resourceId, options = {}, partitionKey }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const request = {\n                    globalEndpointManager: this.globalEndpointManager,\n                    requestAgent: this.cosmosClientOptions.agent,\n                    connectionPolicy: this.connectionPolicy,\n                    method: HTTPMethod.post,\n                    client: this,\n                    operationType: OperationType.Upsert,\n                    path,\n                    resourceType,\n                    body,\n                    resourceId,\n                    options,\n                    plugins: this.cosmosClientOptions.plugins,\n                    partitionKey\n                };\n                request.headers = yield this.buildHeaders(request);\n                request.headers[Constants.HttpHeaders.IsUpsert] = true;\n                this.applySessionToken(request);\n                // upsert will use WriteEndpoint since it uses POST operation\n                request.endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request.resourceType, request.operationType);\n                const response = yield executePlugins(request, executeRequest, PluginOn.operation);\n                this.captureSessionToken(undefined, path, OperationType.Upsert, response.headers);\n                return response;\n            }\n            catch (err) {\n                this.captureSessionToken(err, path, OperationType.Upsert, err.headers);\n                throw err;\n            }\n        });\n    }\n    execute({ sprocLink, params, options = {}, partitionKey }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Accept a single parameter or an array of parameters.\n            // Didn't add type annotation for this because we should legacy this behavior\n            if (params !== null && params !== undefined && !Array.isArray(params)) {\n                params = [params];\n            }\n            const path = getPathFromLink(sprocLink);\n            const id = getIdFromLink(sprocLink);\n            const request = {\n                globalEndpointManager: this.globalEndpointManager,\n                requestAgent: this.cosmosClientOptions.agent,\n                connectionPolicy: this.connectionPolicy,\n                method: HTTPMethod.post,\n                client: this,\n                operationType: OperationType.Execute,\n                path,\n                resourceType: ResourceType.sproc,\n                options,\n                resourceId: id,\n                body: params,\n                plugins: this.cosmosClientOptions.plugins,\n                partitionKey\n            };\n            request.headers = yield this.buildHeaders(request);\n            // executeStoredProcedure will use WriteEndpoint since it uses POST operation\n            request.endpoint = yield this.globalEndpointManager.resolveServiceEndpoint(request.resourceType, request.operationType);\n            return executePlugins(request, executeRequest, PluginOn.operation);\n        });\n    }\n    /**\n     * Gets the Database account information.\n     * @param {string} [options.urlConnection]   - The endpoint url whose database account needs to be retrieved. \\\n     * If not present, current client's url will be used.\n     */\n    getDatabaseAccount(options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const endpoint = options.urlConnection || this.cosmosClientOptions.endpoint;\n            const request = {\n                endpoint,\n                globalEndpointManager: this.globalEndpointManager,\n                requestAgent: this.cosmosClientOptions.agent,\n                connectionPolicy: this.connectionPolicy,\n                method: HTTPMethod.get,\n                client: this,\n                operationType: OperationType.Read,\n                path: \"\",\n                resourceType: ResourceType.none,\n                options,\n                plugins: this.cosmosClientOptions.plugins\n            };\n            request.headers = yield this.buildHeaders(request);\n            // await options.beforeOperation({ endpoint, request, headers: requestHeaders });\n            const { result, headers } = yield executePlugins(request, executeRequest, PluginOn.operation);\n            const databaseAccount = new DatabaseAccount(result, headers);\n            return { result: databaseAccount, headers };\n        });\n    }\n    getWriteEndpoint() {\n        return this.globalEndpointManager.getWriteEndpoint();\n    }\n    getReadEndpoint() {\n        return this.globalEndpointManager.getReadEndpoint();\n    }\n    captureSessionToken(err, path, operationType, resHeaders) {\n        const request = this.getSessionParams(path);\n        request.operationType = operationType;\n        if (!err ||\n            (!this.isMasterResource(request.resourceType) &&\n                (err.code === StatusCodes.PreconditionFailed ||\n                    err.code === StatusCodes.Conflict ||\n                    (err.code === StatusCodes.NotFound &&\n                        err.substatus !== SubStatusCodes.ReadSessionNotAvailable)))) {\n            this.sessionContainer.set(request, resHeaders);\n        }\n    }\n    clearSessionToken(path) {\n        const request = this.getSessionParams(path);\n        this.sessionContainer.remove(request);\n    }\n    getSessionParams(resourceLink) {\n        const resourceId = null;\n        let resourceAddress = null;\n        const parserOutput = parseLink(resourceLink);\n        resourceAddress = parserOutput.objectBody.self;\n        const resourceType = parserOutput.type;\n        return {\n            resourceId,\n            resourceAddress,\n            resourceType,\n            isNameBased: true\n        };\n    }\n    isMasterResource(resourceType) {\n        if (resourceType === Constants.Path.OffersPathSegment ||\n            resourceType === Constants.Path.DatabasesPathSegment ||\n            resourceType === Constants.Path.UsersPathSegment ||\n            resourceType === Constants.Path.PermissionsPathSegment ||\n            resourceType === Constants.Path.TopologyPathSegment ||\n            resourceType === Constants.Path.DatabaseAccountPathSegment ||\n            resourceType === Constants.Path.PartitionKeyRangesPathSegment ||\n            resourceType === Constants.Path.CollectionsPathSegment) {\n            return true;\n        }\n        return false;\n    }\n    buildHeaders(requestContext) {\n        return getHeaders({\n            clientOptions: this.cosmosClientOptions,\n            defaultHeaders: Object.assign(Object.assign({}, this.cosmosClientOptions.defaultHeaders), requestContext.options.initialHeaders),\n            verb: requestContext.method,\n            path: requestContext.path,\n            resourceId: requestContext.resourceId,\n            resourceType: requestContext.resourceType,\n            options: requestContext.options,\n            partitionKeyRangeId: requestContext.partitionKeyRangeId,\n            useMultipleWriteLocations: this.connectionPolicy.useMultipleWriteLocations,\n            partitionKey: requestContext.partitionKey\n        });\n    }\n}\n//# sourceMappingURL=ClientContext.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { OperationType, ResourceType, isReadRequest } from \"./common\";\n/**\n * @hidden\n * This internal class implements the logic for endpoint management for geo-replicated database accounts.\n * @property {object} client                       - The document client instance.\n * @property {string} defaultEndpoint              - The endpoint used to create the client instance.\n * @property {bool} enableEndpointDiscovery        - Flag to enable/disable automatic redirecting of requests\n *                                                   based on read/write operations.\n * @property {Array} preferredLocations            - List of azure regions to be used as preferred locations\n *                                                   for read requests.\n * @property {bool} isEndpointCacheInitialized     - Flag to determine whether the endpoint cache is initialized or not.\n */\nexport class GlobalEndpointManager {\n    /**\n     * @constructor GlobalEndpointManager\n     * @param {object} options                          - The document client instance.\n     */\n    constructor(options, readDatabaseAccount) {\n        this.readDatabaseAccount = readDatabaseAccount;\n        this.options = options;\n        this.defaultEndpoint = options.endpoint;\n        this.enableEndpointDiscovery = options.connectionPolicy.enableEndpointDiscovery;\n        this.isRefreshing = false;\n        this.preferredLocations = this.options.connectionPolicy.preferredLocations;\n    }\n    /**\n     * Gets the current read endpoint from the endpoint cache.\n     */\n    getReadEndpoint() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolveServiceEndpoint(ResourceType.item, OperationType.Read);\n        });\n    }\n    /**\n     * Gets the current write endpoint from the endpoint cache.\n     */\n    getWriteEndpoint() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resolveServiceEndpoint(ResourceType.item, OperationType.Replace);\n        });\n    }\n    getReadEndpoints() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.readableLocations.map((loc) => loc.databaseAccountEndpoint);\n        });\n    }\n    getWriteEndpoints() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.writeableLocations.map((loc) => loc.databaseAccountEndpoint);\n        });\n    }\n    markCurrentLocationUnavailableForRead(endpoint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.refreshEndpointList();\n            const location = this.readableLocations.find((loc) => loc.databaseAccountEndpoint === endpoint);\n            if (location) {\n                location.unavailable = true;\n            }\n        });\n    }\n    markCurrentLocationUnavailableForWrite(endpoint) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.refreshEndpointList();\n            const location = this.writeableLocations.find((loc) => loc.databaseAccountEndpoint === endpoint);\n            if (location) {\n                location.unavailable = true;\n            }\n        });\n    }\n    canUseMultipleWriteLocations(resourceType, operationType) {\n        let canUse = this.options.connectionPolicy.useMultipleWriteLocations;\n        if (resourceType) {\n            canUse =\n                canUse &&\n                    (resourceType === ResourceType.item ||\n                        (resourceType === ResourceType.sproc && operationType === OperationType.Execute));\n        }\n        return canUse;\n    }\n    resolveServiceEndpoint(resourceType, operationType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // If endpoint discovery is disabled, always use the user provided endpoint\n            if (!this.options.connectionPolicy.enableEndpointDiscovery) {\n                return this.defaultEndpoint;\n            }\n            // If getting the database account, always use the user provided endpoint\n            if (resourceType === ResourceType.none) {\n                return this.defaultEndpoint;\n            }\n            if (!this.readableLocations || !this.writeableLocations) {\n                const { resource: databaseAccount } = yield this.readDatabaseAccount({\n                    urlConnection: this.defaultEndpoint\n                });\n                this.writeableLocations = databaseAccount.writableLocations;\n                this.readableLocations = databaseAccount.readableLocations;\n            }\n            const locations = isReadRequest(operationType)\n                ? this.readableLocations\n                : this.writeableLocations;\n            let location;\n            // If we have preferred locations, try each one in order and use the first available one\n            if (this.preferredLocations && this.preferredLocations.length > 0) {\n                for (const preferredLocation of this.preferredLocations) {\n                    location = locations.find((loc) => loc.unavailable !== true &&\n                        normalizeEndpoint(loc.name) === normalizeEndpoint(preferredLocation));\n                    if (location) {\n                        break;\n                    }\n                }\n            }\n            // If no preferred locations or one did not match, just grab the first one that is available\n            if (!location) {\n                location = locations.find((loc) => {\n                    return loc.unavailable !== true;\n                });\n            }\n            return location ? location.databaseAccountEndpoint : this.defaultEndpoint;\n        });\n    }\n    /**\n     * Refreshes the endpoint list by retrieving the writable and readable locations\n     *  from the geo-replicated database account and then updating the locations cache.\n     *   We skip the refreshing if enableEndpointDiscovery is set to False\n     */\n    refreshEndpointList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.isRefreshing && this.enableEndpointDiscovery) {\n                this.isRefreshing = true;\n                const databaseAccount = yield this.getDatabaseAccountFromAnyEndpoint();\n                if (databaseAccount) {\n                    this.refreshEndpoints(databaseAccount);\n                }\n                this.isRefreshing = false;\n            }\n        });\n    }\n    refreshEndpoints(databaseAccount) {\n        for (const location of databaseAccount.writableLocations) {\n            const existingLocation = this.writeableLocations.find((loc) => loc.name === location.name);\n            if (!existingLocation) {\n                this.writeableLocations.push(location);\n            }\n        }\n        for (const location of databaseAccount.writableLocations) {\n            const existingLocation = this.readableLocations.find((loc) => loc.name === location.name);\n            if (!existingLocation) {\n                this.readableLocations.push(location);\n            }\n        }\n    }\n    /**\n     * Gets the database account first by using the default endpoint, and if that doesn't returns\n     * use the endpoints for the preferred locations in the order they are specified to get\n     * the database account.\n     * @memberof GlobalEndpointManager\n     * @instance\n     * @param {function} callback        - The callback function which takes databaseAccount(object) as an argument.\n     */\n    getDatabaseAccountFromAnyEndpoint() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const options = { urlConnection: this.defaultEndpoint };\n                const { resource: databaseAccount } = yield this.readDatabaseAccount(options);\n                return databaseAccount;\n                // If for any reason(non - globaldb related), we are not able to get the database\n                // account from the above call to readDatabaseAccount,\n                // we would try to get this information from any of the preferred locations that the user\n                // might have specified (by creating a locational endpoint)\n                // and keeping eating the exception until we get the database account and return None at the end,\n                // if we are not able to get that info from any endpoints\n            }\n            catch (err) {\n                // TODO: Tracing\n            }\n            if (this.preferredLocations) {\n                for (const location of this.preferredLocations) {\n                    try {\n                        const locationalEndpoint = GlobalEndpointManager.getLocationalEndpoint(this.defaultEndpoint, location);\n                        const options = { urlConnection: locationalEndpoint };\n                        const { resource: databaseAccount } = yield this.readDatabaseAccount(options);\n                        if (databaseAccount) {\n                            return databaseAccount;\n                        }\n                    }\n                    catch (err) {\n                        // TODO: Tracing\n                    }\n                }\n            }\n        });\n    }\n    /**\n     * Gets the locational endpoint using the location name passed to it using the default endpoint.\n     * @memberof GlobalEndpointManager\n     * @instance\n     * @param {string} defaultEndpoint - The default endpoint to use for the endpoint.\n     * @param {string} locationName    - The location name for the azure region like \"East US\".\n     */\n    static getLocationalEndpoint(defaultEndpoint, locationName) {\n        // For defaultEndpoint like 'https://contoso.documents.azure.com:443/' parse it to generate URL format\n        // This defaultEndpoint should be global endpoint(and cannot be a locational endpoint)\n        // and we agreed to document that\n        const endpointUrl = new URL(defaultEndpoint);\n        // hostname attribute in endpointUrl will return 'contoso.documents.azure.com'\n        if (endpointUrl.hostname) {\n            const hostnameParts = endpointUrl.hostname\n                .toString()\n                .toLowerCase()\n                .split(\".\");\n            if (hostnameParts) {\n                // globalDatabaseAccountName will return 'contoso'\n                const globalDatabaseAccountName = hostnameParts[0];\n                // Prepare the locationalDatabaseAccountName as contoso-EastUS for location_name 'East US'\n                const locationalDatabaseAccountName = globalDatabaseAccountName + \"-\" + locationName.replace(\" \", \"\");\n                // Replace 'contoso' with 'contoso-EastUS' and\n                // return locationalEndpoint as https://contoso-EastUS.documents.azure.com:443/\n                const locationalEndpoint = defaultEndpoint\n                    .toLowerCase()\n                    .replace(globalDatabaseAccountName, locationalDatabaseAccountName);\n                return locationalEndpoint;\n            }\n        }\n        return null;\n    }\n}\nfunction normalizeEndpoint(endpoint) {\n    return endpoint\n        .split(\" \")\n        .join(\"\")\n        .toLowerCase();\n}\n//# sourceMappingURL=globalEndpointManager.js.map","import { __awaiter } from \"tslib\";\n// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT license.\nimport { Database, Databases } from \"./client/Database\";\nimport { Offer, Offers } from \"./client/Offer\";\nimport { ClientContext } from \"./ClientContext\";\nimport { parseConnectionString } from \"./common\";\nimport { Constants } from \"./common/constants\";\nimport { getUserAgent } from \"./common/platform\";\nimport { defaultConnectionPolicy } from \"./documents\";\nimport { GlobalEndpointManager } from \"./globalEndpointManager\";\nimport { ResourceResponse } from \"./request\";\n/**\n * Provides a client-side logical representation of the Azure Cosmos DB database account.\n * This client is used to configure and execute requests in the Azure Cosmos DB database service.\n * @example Instantiate a client and create a new database\n * ```typescript\n * const client = new CosmosClient({endpoint: \"<URL HERE>\", auth: {masterKey: \"<KEY HERE>\"}});\n * await client.databases.create({id: \"<datbase name here>\"});\n * ```\n * @example Instantiate a client with custom Connection Policy\n * ```typescript\n * const connectionPolicy = new ConnectionPolicy();\n * connectionPolicy.RequestTimeout = 10000;\n * const client = new CosmosClient({\n *    endpoint: \"<URL HERE>\",\n *    auth: {masterKey: \"<KEY HERE>\"},\n *    connectionPolicy\n * });\n * ```\n */\nexport class CosmosClient {\n    constructor(optionsOrConnectionString) {\n        if (typeof optionsOrConnectionString === \"string\") {\n            optionsOrConnectionString = parseConnectionString(optionsOrConnectionString);\n        }\n        optionsOrConnectionString.connectionPolicy = Object.assign({}, defaultConnectionPolicy, optionsOrConnectionString.connectionPolicy);\n        optionsOrConnectionString.defaultHeaders = optionsOrConnectionString.defaultHeaders || {};\n        optionsOrConnectionString.defaultHeaders[Constants.HttpHeaders.CacheControl] = \"no-cache\";\n        optionsOrConnectionString.defaultHeaders[Constants.HttpHeaders.Version] =\n            Constants.CurrentVersion;\n        if (optionsOrConnectionString.consistencyLevel !== undefined) {\n            optionsOrConnectionString.defaultHeaders[Constants.HttpHeaders.ConsistencyLevel] =\n                optionsOrConnectionString.consistencyLevel;\n        }\n        optionsOrConnectionString.defaultHeaders[Constants.HttpHeaders.UserAgent] = getUserAgent(optionsOrConnectionString.userAgentSuffix);\n        const globalEndpointManager = new GlobalEndpointManager(optionsOrConnectionString, (opts) => __awaiter(this, void 0, void 0, function* () { return this.getDatabaseAccount(opts); }));\n        this.clientContext = new ClientContext(optionsOrConnectionString, globalEndpointManager);\n        this.databases = new Databases(this, this.clientContext);\n        this.offers = new Offers(this, this.clientContext);\n    }\n    /**\n     * Get information about the current {@link DatabaseAccount} (including which regions are supported, etc.)\n     */\n    getDatabaseAccount(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.clientContext.getDatabaseAccount(options);\n            return new ResourceResponse(response.result, response.headers, response.code);\n        });\n    }\n    /**\n     * Gets the currently used write endpoint url. Useful for troubleshooting purposes.\n     *\n     * The url may contain a region suffix (e.g. \"-eastus\") if we're using location specific endpoints.\n     */\n    getWriteEndpoint() {\n        return this.clientContext.getWriteEndpoint();\n    }\n    /**\n     * Gets the currently used read endpoint. Useful for troubleshooting purposes.\n     *\n     * The url may contain a region suffix (e.g. \"-eastus\") if we're using location specific endpoints.\n     */\n    getReadEndpoint() {\n        return this.clientContext.getReadEndpoint();\n    }\n    /**\n     * Used for reading, updating, or deleting a existing database by id or accessing containers belonging to that database.\n     *\n     * This does not make a network call. Use `.read` to get info about the database after getting the {@link Database} object.\n     *\n     * @param id The id of the database.\n     * @example Create a new container off of an existing database\n     * ```typescript\n     * const container = client.database(\"<database id>\").containers.create(\"<container id>\");\n     * ```\n     *\n     * @example Delete an existing database\n     * ```typescript\n     * await client.database(\"<id here>\").delete();\n     * ```\n     */\n    database(id) {\n        return new Database(this, id, this.clientContext);\n    }\n    /**\n     * Used for reading, or updating a existing offer by id.\n     * @param id The id of the offer.\n     */\n    offer(id) {\n        return new Offer(this, id, this.clientContext);\n    }\n}\n//# sourceMappingURL=CosmosClient.js.map"],"names":["OperationType","__awaiter","createHmac","ConnectionMode","ConsistencyLevel","DataType","IndexingMode","IndexKind","PermissionMode","TriggerOperation","TriggerType","UserDefinedFunctionType","log","createHash","__asyncGenerator","__await","ConflictResolutionMode","PluginOn","RetryUtility.execute","request","executeRequest"],"mappings":"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"}